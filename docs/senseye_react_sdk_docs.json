{
	"id": 0,
	"name": "@senseyeinc/react-native-senseye-sdk",
	"kind": 0,
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 1,
			"name": "__tests__/index.test",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"sources": [
				{
					"fileName": "__tests__/index.test.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 54,
			"name": "api",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 672,
					"name": "Models",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "api/index.ts",
							"line": 4,
							"character": 33
						}
					],
					"target": 220
				},
				{
					"id": 671,
					"name": "SenseyeApiClient",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "api/index.ts",
							"line": 4,
							"character": 25
						}
					],
					"target": 3
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						672,
						671
					]
				}
			],
			"sources": [
				{
					"fileName": "api/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2,
			"name": "api/ApiClient",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3,
					"name": "default",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Client that interfaces with Senseye's REST API. Provides wrapper functions for\nstandard GET, DELETE, POST and PUT requests, as well as specific Senseye endpoints."
					},
					"children": [
						{
							"id": 4,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 5,
									"name": "new default",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 6,
											"name": "host",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Domain name or IP address of the API host. e.g. api.senseye.co[:80]"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 7,
											"name": "basePath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "URL path prefix that'll be appended to `host`."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 8,
											"name": "apiKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "API key.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3,
										"name": "default"
									}
								}
							]
						},
						{
							"id": 9,
							"name": "axios",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "api/ApiClient.ts",
									"line": 16,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "AxiosInstance"
							}
						},
						{
							"id": 19,
							"name": "delete",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/ApiClient.ts",
									"line": 46,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 20,
									"name": "delete",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 21,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"parameters": [
										{
											"id": 22,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 23,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "AxiosRequestConfig"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "AxiosResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 14,
							"name": "get",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/ApiClient.ts",
									"line": 43,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 15,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 16,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"parameters": [
										{
											"id": 17,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 18,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "AxiosRequestConfig"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "AxiosResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 41,
							"name": "getPrediction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/ApiClient.ts",
									"line": 88,
									"character": 28
								}
							],
							"signatures": [
								{
									"id": 42,
									"name": "getPrediction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieves the status/result of a submitted predict job.",
										"text": "https://app.swaggerhub.com/apis-docs/senseye-inc/senseye-api/0.0.1#/default/get_predict__id_\n",
										"returns": "A `Promise` that will produce a {@link ComputeJobResponse}.\n"
									},
									"parameters": [
										{
											"id": 43,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Job ID produced after a successful call to {@link startPrediction | startPrediction()}."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 522,
												"name": "ComputeJobResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 24,
							"name": "post",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/ApiClient.ts",
									"line": 49,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 25,
									"name": "post",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 26,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"parameters": [
										{
											"id": 27,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 28,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 29,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "AxiosRequestConfig"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "AxiosResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 30,
							"name": "put",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/ApiClient.ts",
									"line": 52,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 31,
									"name": "put",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 32,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"parameters": [
										{
											"id": 33,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 34,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 35,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "AxiosRequestConfig"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "AxiosResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 10,
							"name": "request",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/ApiClient.ts",
									"line": 39,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 11,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 12,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"parameters": [
										{
											"id": 13,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AxiosRequestConfig"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "AxiosResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 36,
							"name": "startPrediction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/ApiClient.ts",
									"line": 66,
									"character": 30
								}
							],
							"signatures": [
								{
									"id": 37,
									"name": "startPrediction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Submits a job to perform predictive analysis on a specified list of videos.",
										"text": "https://app.swaggerhub.com/apis-docs/senseye-inc/senseye-api/0.0.1#/default/post_predict\n",
										"returns": "A `Promise` that will produce a {@link ComputeJobInitResponse}.\n"
									},
									"parameters": [
										{
											"id": 38,
											"name": "video_urls",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 39,
											"name": "threshold",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Value between 0.0 and 1.0; determines `prediction.state` in the final result."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0.5"
										},
										{
											"id": 40,
											"name": "uniqueId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Username or ID of the participant."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 519,
												"name": "ComputeJobInitResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 44,
							"name": "uploadFile",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/ApiClient.ts",
									"line": 102,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 45,
									"name": "uploadFile",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Uploads a file to Senseye's S3.",
										"returns": "A `Promise` that will resolve into a dictionary containing the destination S3 url (`s3_url`).\n"
									},
									"parameters": [
										{
											"id": 46,
											"name": "uri",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "File URI. For Android environments, ensure it prefixed with `file://`."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 47,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Desired S3 key for the file."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 48,
											"name": "onUploadProgress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Callback function that will be called on updates to the upload progress."
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 49,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 50,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 51,
																	"name": "progressEvent",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "EventTarget"
																			}
																		],
																		"name": "ProgressEvent"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 52,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 53,
															"name": "s3_url",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																53
															]
														}
													]
												}
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								9
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								19,
								14,
								41,
								24,
								30,
								10,
								36,
								44
							]
						}
					],
					"sources": [
						{
							"fileName": "api/ApiClient.ts",
							"line": 15,
							"character": 37
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3
					]
				}
			],
			"sources": [
				{
					"fileName": "api/ApiClient.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 220,
			"name": "api/models",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 673,
					"name": "Session",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "api/models/index.ts",
							"line": 6,
							"character": 16
						}
					],
					"target": 56
				},
				{
					"id": 674,
					"name": "Survey",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "api/models/index.ts",
							"line": 6,
							"character": 24
						}
					],
					"target": 92
				},
				{
					"id": 675,
					"name": "Task",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "api/models/index.ts",
							"line": 6,
							"character": 30
						}
					],
					"target": 124
				},
				{
					"id": 676,
					"name": "Video",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "api/models/index.ts",
							"line": 6,
							"character": 37
						}
					],
					"target": 163
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						673,
						674,
						675,
						676
					]
				}
			],
			"sources": [
				{
					"fileName": "api/models/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 55,
			"name": "api/models/Session",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 56,
					"name": "default",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Model representing a session. Facilitates the gathering and association of task\nand video data generated during a participant's interaction with on-screen\nstimuli (i.e. task or series of tasks)."
					},
					"children": [
						{
							"id": 57,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 58,
									"name": "new default",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 59,
											"name": "uniqueId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Username or ID of the participant."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 60,
											"name": "survey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "A `Survey` whose response entries will be included in the session's {@link metadata}.\n"
											},
											"type": {
												"type": "reference",
												"id": 92,
												"name": "default"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 56,
										"name": "default"
									}
								}
							]
						},
						{
							"id": 66,
							"name": "jsonUploadPercentage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "api/models/Session.ts",
									"line": 25,
									"character": 30
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 61,
							"name": "metadata",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "api/models/Session.ts",
									"line": 23,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 62,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 63,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 64,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							}
						},
						{
							"id": 65,
							"name": "tasks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "api/models/Session.ts",
									"line": 24,
									"character": 15
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 124,
									"name": "default"
								}
							}
						},
						{
							"id": 67,
							"name": "uniqueId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "api/models/Session.ts",
									"line": 26,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 68,
							"name": "addTask",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Session.ts",
									"line": 70,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 69,
									"name": "addTask",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Adds the specified task to the session."
									},
									"parameters": [
										{
											"id": 70,
											"name": "task",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A `Task` instance.\n"
											},
											"type": {
												"type": "reference",
												"id": 124,
												"name": "default"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 73,
							"name": "addVideo",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Session.ts",
									"line": 87,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 74,
									"name": "addVideo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Associates the specified video with the session and the session's latest task\n(see {@link addTask | addTask()})."
									},
									"parameters": [
										{
											"id": 75,
											"name": "video",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A `Video` instance.\n"
											},
											"type": {
												"type": "reference",
												"id": 163,
												"name": "default"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 71,
							"name": "getTasks",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Session.ts",
									"line": 77,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 72,
									"name": "getTasks",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "A list of {@link Task | Tasks} associated with the session (see {@link addTask | addTask()}).\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 124,
											"name": "default"
										}
									}
								}
							]
						},
						{
							"id": 89,
							"name": "getUploadPercentage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Session.ts",
									"line": 186,
									"character": 28
								}
							],
							"signatures": [
								{
									"id": 90,
									"name": "getUploadPercentage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Use this to track the average progress of all uploads associated with the session.\nSee {@link uploadAll | uploadAll()}.",
										"returns": "Integer value from `0` to `100`.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						},
						{
							"id": 76,
							"name": "getVideos",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Session.ts",
									"line": 99,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 77,
									"name": "getVideos",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "A list of {@link Video | Videos} associated with the session (see {@link addVideo | addVideo()}).\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 163,
											"name": "default"
										}
									}
								}
							]
						},
						{
							"id": 86,
							"name": "uploadAll",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Session.ts",
									"line": 172,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 87,
									"name": "uploadAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Calls {@link uploadVideos | uploadVideos()} and {@link uploadJsonData | uploadJsonData()}.",
										"returns": "A `Promise` that will resolve into an array once both upload functions complete.\n                   Respectively, the first and second index will contain the resolved values\n                   produced by {@link uploadVideos | uploadVideos()} and {@link uploadJsonData | uploadJsonData()}.\n"
									},
									"parameters": [
										{
											"id": 88,
											"name": "apiClient",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Client configured to communicate with Senseye's API."
											},
											"type": {
												"type": "reference",
												"id": 3,
												"name": "default"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 81,
							"name": "uploadJsonData",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Session.ts",
									"line": 131,
									"character": 29
								}
							],
							"signatures": [
								{
									"id": 82,
									"name": "uploadJsonData",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Writes {@link metadata} to a temporary JSON file and uploads it to Senseye's S3 bucket.",
										"returns": "A `Promise` that will resolve once the JSON file finishes uploading.\n                   See {@link SenseyeApiClient.uploadFile} for the resolved value.\n"
									},
									"parameters": [
										{
											"id": 83,
											"name": "apiClient",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Client configured to communicate with Senseye's API."
											},
											"type": {
												"type": "reference",
												"id": 3,
												"name": "default"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 84,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 85,
															"name": "s3_url",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																85
															]
														}
													]
												}
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 78,
							"name": "uploadVideos",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Session.ts",
									"line": 115,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 79,
									"name": "uploadVideos",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Begins uploading all videos associated with the session.",
										"returns": "A `Promise` that will resolve into an array once all session videos finish uploading.\n                   See {@link SenseyeApiClient.uploadFile} for the produced value of each item.\n"
									},
									"parameters": [
										{
											"id": 80,
											"name": "apiClient",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Client configured to communicate with Senseye's API."
											},
											"type": {
												"type": "reference",
												"id": 3,
												"name": "default"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								57
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								66,
								61,
								65,
								67
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								68,
								73,
								71,
								89,
								76,
								86,
								81,
								78
							]
						}
					],
					"sources": [
						{
							"fileName": "api/models/Session.ts",
							"line": 22,
							"character": 28
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						56
					]
				}
			],
			"sources": [
				{
					"fileName": "api/models/Session.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 91,
			"name": "api/models/Survey",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 92,
					"name": "default",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Model representing a survey entity. Facilitates the gathering of a participant's responses\nto survey questions."
					},
					"children": [
						{
							"id": 93,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 94,
									"name": "new default",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 95,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Survey type, e.g. `demographic`, `validation`."
											},
											"type": {
												"type": "reference",
												"id": 548,
												"name": "SurveyType"
											}
										},
										{
											"id": 96,
											"name": "entries",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Map of keys to a tuple containing a corresponding question and response.\n                 e.g. { 'eye_color': ['What color are your eyes?', 'Brown'] }"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 97,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 98,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 99,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "tuple",
															"elements": [
																{
																	"type": "reference",
																	"id": 539,
																	"name": "Datum"
																},
																{
																	"type": "reference",
																	"id": 539,
																	"name": "Datum"
																}
															]
														}
													}
												}
											},
											"defaultValue": "{}"
										},
										{
											"id": 100,
											"name": "info",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Any extra information or metadata.\n"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 101,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 102,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 103,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 92,
										"name": "default"
									}
								}
							]
						},
						{
							"id": 104,
							"name": "metadata",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "api/models/Survey.ts",
									"line": 8,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 105,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 106,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 107,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							}
						},
						{
							"id": 108,
							"name": "addEntry",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Survey.ts",
									"line": 45,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 109,
									"name": "addEntry",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Adds an entry for a question and its corresponding response. If `key` already\nexists, the previous entry values will be overwritten."
									},
									"parameters": [
										{
											"id": 110,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Key used to associate `question` and `response`."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 111,
											"name": "question",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Question or prompt value."
											},
											"type": {
												"type": "reference",
												"id": 539,
												"name": "Datum"
											}
										},
										{
											"id": 112,
											"name": "response",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Response value to `question`.\n"
											},
											"type": {
												"type": "reference",
												"id": 539,
												"name": "Datum"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 121,
							"name": "getEntries",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Survey.ts",
									"line": 69,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 122,
									"name": "getEntries",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "A tuple containing question and response entries, respectively.\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							]
						},
						{
							"id": 119,
							"name": "getType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Survey.ts",
									"line": 62,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 120,
									"name": "getType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "The survey's type.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 113,
							"name": "updateInfo",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Survey.ts",
									"line": 55,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 114,
									"name": "updateInfo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Updates {@link metadata}."
									},
									"parameters": [
										{
											"id": 115,
											"name": "info",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Metadata to be merged on top of the existing {@link metadata}\n"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 116,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 117,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 118,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								93
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								104
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								108,
								121,
								119,
								113
							]
						}
					],
					"sources": [
						{
							"fileName": "api/models/Survey.ts",
							"line": 7,
							"character": 27
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						92
					]
				}
			],
			"sources": [
				{
					"fileName": "api/models/Survey.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 123,
			"name": "api/models/Task",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 124,
					"name": "default",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Model representing a task entity. Facilitates the gathering of relevant metadata and event data."
					},
					"children": [
						{
							"id": 125,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 126,
									"name": "new default",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 127,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the task."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 128,
											"name": "info",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Any extra information or metadata.\n"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 129,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 130,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 131,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 124,
										"name": "default"
									}
								}
							]
						},
						{
							"id": 132,
							"name": "metadata",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "api/models/Task.ts",
									"line": 8,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 133,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 134,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 135,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							}
						},
						{
							"id": 136,
							"name": "videos",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "api/models/Task.ts",
									"line": 9,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 163,
									"name": "default"
								}
							}
						},
						{
							"id": 137,
							"name": "addEventData",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Task.ts",
									"line": 30,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 138,
									"name": "addEventData",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Records the sepcified data entry under {@link metadata | metadata.events}."
									},
									"parameters": [
										{
											"id": 139,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Data entry produced during a task.\n"
											},
											"type": {
												"type": "reference",
												"id": 540,
												"name": "EventData"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 140,
							"name": "addVideo",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Task.ts",
									"line": 59,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 141,
									"name": "addVideo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Associates the specified video with the task."
									},
									"parameters": [
										{
											"id": 142,
											"name": "video",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A `Video` instance.\n"
											},
											"type": {
												"type": "reference",
												"id": 163,
												"name": "default"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 157,
							"name": "getMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Task.ts",
									"line": 106,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 158,
									"name": "getMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Compiles and returns metadata related to the task.",
										"returns": "A `Promise` that will produce the compiled {@link metadata}.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 159,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 160,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 161,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 143,
							"name": "getVideos",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Task.ts",
									"line": 66,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 144,
									"name": "getVideos",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "A list of {@link Video | Videos} associated with the task (see {@link addVideo | addVideo()}).\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 163,
											"name": "default"
										}
									}
								}
							]
						},
						{
							"id": 145,
							"name": "recordStartTime",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Task.ts",
									"line": 76,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 146,
									"name": "recordStartTime",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Records the task's start timestamp."
									},
									"parameters": [
										{
											"id": 147,
											"name": "timestamp",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Start time of the task's execution. Should be in UTC seconds.\n                   If left unspecified, current UTC will be used.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 148,
							"name": "recordStopTime",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Task.ts",
									"line": 88,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 149,
									"name": "recordStopTime",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Records the task's stop timestamp."
									},
									"parameters": [
										{
											"id": 150,
											"name": "timestamp",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Stop time of the task's execution. Should be in UTC seconds.\n                   If left unspecified, current UTC will be used.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 151,
							"name": "updateInfo",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Task.ts",
									"line": 97,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 152,
									"name": "updateInfo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Updates {@link metadata}."
									},
									"parameters": [
										{
											"id": 153,
											"name": "info",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Metadata to be merged on top of the existing {@link metadata}.\n"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 154,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 155,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 156,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								125
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								132,
								136
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								137,
								140,
								157,
								143,
								145,
								148,
								151
							]
						}
					],
					"sources": [
						{
							"fileName": "api/models/Task.ts",
							"line": 7,
							"character": 25
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						124
					]
				}
			],
			"sources": [
				{
					"fileName": "api/models/Task.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 162,
			"name": "api/models/Video",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 163,
					"name": "default",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Model representing a video entity. Facilitates the gathering of relevant metadata\nand provides the ability to upload a video file."
					},
					"children": [
						{
							"id": 164,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 165,
									"name": "new default",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 166,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Desired video name."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 167,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Camera and/or recording configurations."
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 168,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 169,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 170,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											},
											"defaultValue": "{}"
										},
										{
											"id": 171,
											"name": "info",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Any extra information or metadata."
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 172,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 173,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 174,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											},
											"defaultValue": "{}"
										},
										{
											"id": 175,
											"name": "uri",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Video file URI. For Android environments, ensure it is prefixed with `file://`.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 163,
										"name": "default"
									}
								}
							]
						},
						{
							"id": 176,
							"name": "metadata",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 13,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 177,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 178,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 179,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							}
						},
						{
							"id": 180,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 14,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 182,
							"name": "uploadPercentage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 16,
									"character": 26
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 181,
							"name": "uri",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 15,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 218,
							"name": "fillMetadataFromFile",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 152,
									"character": 36
								}
							],
							"signatures": [
								{
									"id": 219,
									"name": "fillMetadataFromFile",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fills {@link metadata} with information extracted from the video file at {@link uri}.\nThrows an error if there is no specified uri (see {@link setUri | setUri()})."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 209,
							"name": "getMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 127,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 210,
									"name": "getMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Compiles and returns metadata related to the video.",
										"returns": "A `Promise` that will produce the compiled {@link metadata}.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 211,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 212,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 213,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 214,
							"name": "getName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 137,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 215,
									"name": "getName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "The video's {@link name}.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 207,
							"name": "getUploadPercentage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 118,
									"character": 28
								}
							],
							"signatures": [
								{
									"id": 208,
									"name": "getUploadPercentage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Use this to track upload progress after calling {@link uploadFile | uploadFile()}.",
										"returns": "Integer value from `0` to `100`.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						},
						{
							"id": 216,
							"name": "getUri",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 144,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 217,
									"name": "getUri",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "The video's {@link uri}.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							]
						},
						{
							"id": 183,
							"name": "recordStartTime",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 47,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 184,
									"name": "recordStartTime",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Records the video's start timestamp."
									},
									"parameters": [
										{
											"id": 185,
											"name": "timestamp",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Start time of the video's recording. Should be in UTC seconds.\n                   If left unspecified, current UTC will be used.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 186,
							"name": "recordStopTime",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 59,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 187,
									"name": "recordStopTime",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Records the video's stop timestamp."
									},
									"parameters": [
										{
											"id": 188,
											"name": "timestamp",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Stop time of the video's recording. Should be in UTC seconds.\n                   If left unspecified, current UTC will be used.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 195,
							"name": "setName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 77,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 196,
									"name": "setName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets {@link name}."
									},
									"parameters": [
										{
											"id": 197,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Desired video name.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 198,
							"name": "setUri",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 86,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 199,
									"name": "setUri",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets {@link uri}."
									},
									"parameters": [
										{
											"id": 200,
											"name": "uri",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Video file URI. For Android environments, ensure it is prefixed with `file://`.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189,
							"name": "updateInfo",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 68,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 190,
									"name": "updateInfo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Updates {@link metadata}."
									},
									"parameters": [
										{
											"id": 191,
											"name": "info",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Metadata to be merged on top of the existing {@link metadata}.\n"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 192,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 193,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 194,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 201,
							"name": "upload",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 98,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 202,
									"name": "upload",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Uploads the video file at {@link uri} to Senseye's S3 bucket. Throws an error\nif there is no specified uri (see {@link setUri | setUri()}).",
										"returns": "A `Promise` that will resolve into a dictionary containing the destination S3 url (`s3_url`).\n"
									},
									"parameters": [
										{
											"id": 203,
											"name": "apiClient",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Client configured to communicate with Senseye's API."
											},
											"type": {
												"type": "reference",
												"id": 3,
												"name": "default"
											}
										},
										{
											"id": 204,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Desired S3 key for the file. Defaults to {@link name} (see {@link setName | setName()})."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 205,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 206,
															"name": "s3_url",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																206
															]
														}
													]
												}
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								164
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								176,
								180,
								182,
								181
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								218,
								209,
								214,
								207,
								216,
								183,
								186,
								195,
								198,
								189,
								201
							]
						}
					],
					"sources": [
						{
							"fileName": "api/models/Video.ts",
							"line": 12,
							"character": 26
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						163
					]
				}
			],
			"sources": [
				{
					"fileName": "api/models/Video.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 221,
			"name": "assets",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 222,
					"name": "backArrow",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "assets/index.ts",
							"line": 1,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": "..."
				},
				{
					"id": 223,
					"name": "checkmarkIcon",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "assets/index.ts",
							"line": 2,
							"character": 26
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": "..."
				},
				{
					"id": 224,
					"name": "forwardArrow",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "assets/index.ts",
							"line": 3,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": "..."
				},
				{
					"id": 226,
					"name": "gearSpinner",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "assets/index.ts",
							"line": 5,
							"character": 24
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": "..."
				},
				{
					"id": 228,
					"name": "gradientLogo",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "assets/index.ts",
							"line": 7,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": "..."
				},
				{
					"id": 225,
					"name": "insufficientIcon",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "assets/index.ts",
							"line": 4,
							"character": 29
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": "..."
				},
				{
					"id": 229,
					"name": "ormCheckLogo",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "assets/index.ts",
							"line": 8,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": "..."
				},
				{
					"id": 227,
					"name": "pictorialGradientLogo",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "assets/index.ts",
							"line": 6,
							"character": 34
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": "..."
				},
				{
					"id": 231,
					"name": "warningIcon",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "assets/index.ts",
							"line": 10,
							"character": 24
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": "..."
				},
				{
					"id": 230,
					"name": "whiteLogo",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "assets/index.ts",
							"line": 9,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": "..."
				},
				{
					"id": 232,
					"name": "xIcon",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "assets/index.ts",
							"line": 11,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						222,
						223,
						224,
						226,
						228,
						225,
						229,
						227,
						231,
						230,
						232
					]
				}
			],
			"sources": [
				{
					"fileName": "assets/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 391,
			"name": "components",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 695,
					"name": "CalibrationProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 33,
							"character": 25
						}
					],
					"target": 431
				},
				{
					"id": 698,
					"name": "DemographicSurveyProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 37,
							"character": 31
						}
					],
					"target": 396
				},
				{
					"id": 691,
					"name": "FaceOutline",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 27,
							"character": 13
						}
					],
					"target": 239
				},
				{
					"id": 692,
					"name": "FaceOutlineProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 28,
							"character": 18
						}
					],
					"target": 234
				},
				{
					"id": 696,
					"name": "PlrProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 34,
							"character": 17
						}
					],
					"target": 455
				},
				{
					"id": 689,
					"name": "SenseyeAlert",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 25,
							"character": 14
						}
					],
					"target": 249
				},
				{
					"id": 690,
					"name": "SenseyeAlertProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 26,
							"character": 19
						}
					],
					"target": 257
				},
				{
					"id": 681,
					"name": "SenseyeButton",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 17,
							"character": 15
						}
					],
					"target": 262
				},
				{
					"id": 682,
					"name": "SenseyeButtonProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 18,
							"character": 20
						}
					],
					"target": 265
				},
				{
					"id": 683,
					"name": "SenseyeCalendar",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 19,
							"character": 17
						}
					],
					"target": 272
				},
				{
					"id": 684,
					"name": "SenseyeCalendarProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 20,
							"character": 22
						}
					],
					"target": 280
				},
				{
					"id": 685,
					"name": "SenseyePicker",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 21,
							"character": 15
						}
					],
					"target": 289
				},
				{
					"id": 686,
					"name": "SenseyePickerProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 22,
							"character": 20
						}
					],
					"target": 303
				},
				{
					"id": 687,
					"name": "SenseyeTextInput",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 23,
							"character": 18
						}
					],
					"target": 321
				},
				{
					"id": 688,
					"name": "SenseyeTextInputProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 24,
							"character": 23
						}
					],
					"target": 336
				},
				{
					"id": 697,
					"name": "SmoothPursuitProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 35,
							"character": 27
						}
					],
					"target": 487
				},
				{
					"id": 694,
					"name": "Surveys",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 30,
							"character": 9
						}
					],
					"target": 411
				},
				{
					"id": 677,
					"name": "TaskRunner",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 13,
							"character": 12
						}
					],
					"target": 364
				},
				{
					"id": 678,
					"name": "TaskRunnerProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 14,
							"character": 17
						}
					],
					"target": 352
				},
				{
					"id": 693,
					"name": "Tasks",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 29,
							"character": 7
						}
					],
					"target": 501
				},
				{
					"id": 699,
					"name": "ValidationSurveyProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 38,
							"character": 30
						}
					],
					"target": 405
				},
				{
					"id": 679,
					"name": "VideoRecorder",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 15,
							"character": 15
						}
					],
					"target": 390
				},
				{
					"id": 680,
					"name": "VideoRecorderProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 16,
							"character": 20
						}
					],
					"target": 366
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						695,
						698,
						691,
						692,
						696,
						689,
						690,
						681,
						682,
						683,
						684,
						685,
						686,
						687,
						688,
						697,
						694,
						677,
						678,
						693,
						699,
						679,
						680
					]
				}
			],
			"sources": [
				{
					"fileName": "components/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 233,
			"name": "components/FaceOutline",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 242,
					"name": "default",
					"kind": 2,
					"kindString": "Namespace",
					"flags": {},
					"children": [
						{
							"id": 243,
							"name": "defaultProps",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 244,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 246,
											"name": "height",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'100%'"
										},
										{
											"id": 245,
											"name": "outlineColor",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'#9FB7C6'"
										},
										{
											"id": 247,
											"name": "width",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'100%'"
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												246,
												245,
												247
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								243
							]
						}
					]
				},
				{
					"id": 234,
					"name": "FaceOutlineProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "components/FaceOutline.tsx",
							"line": 3,
							"character": 28
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 235,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 237,
									"name": "height",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "components/FaceOutline.tsx",
											"line": 5,
											"character": 8
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 236,
									"name": "outlineColor",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "components/FaceOutline.tsx",
											"line": 4,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 238,
									"name": "width",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "components/FaceOutline.tsx",
											"line": 6,
											"character": 7
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										237,
										236,
										238
									]
								}
							],
							"sources": [
								{
									"fileName": "components/FaceOutline.tsx",
									"line": 3,
									"character": 30
								}
							]
						}
					}
				},
				{
					"id": 239,
					"name": "default",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "components/FaceOutline.tsx",
							"line": 10,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 240,
							"name": "default",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Dynamic face box outline for face alignment"
							},
							"parameters": [
								{
									"id": 241,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 234,
										"name": "FaceOutlineProps"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"kind": 2,
					"children": [
						242
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						234
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						239
					]
				}
			],
			"sources": [
				{
					"fileName": "components/FaceOutline.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 248,
			"name": "components/SenseyeAlert",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 252,
					"name": "default",
					"kind": 2,
					"kindString": "Namespace",
					"flags": {},
					"children": [
						{
							"id": 253,
							"name": "defaultProps",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 254,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 255,
											"name": "alertType",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'warning'"
										},
										{
											"id": 256,
											"name": "message",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "''"
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												255,
												256
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								253
							]
						}
					]
				},
				{
					"id": 257,
					"name": "SenseyeAlertProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "components/SenseyeAlert.tsx",
							"line": 4,
							"character": 29
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 258,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 259,
									"name": "alertType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "A string to describe whether the alert is a `warning` or `error`"
									},
									"sources": [
										{
											"fileName": "components/SenseyeAlert.tsx",
											"line": 6,
											"character": 11
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "warning"
											},
											{
												"type": "literal",
												"value": "error"
											}
										]
									}
								},
								{
									"id": 260,
									"name": "message",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "A string that displays an alert message"
									},
									"sources": [
										{
											"fileName": "components/SenseyeAlert.tsx",
											"line": 8,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										259,
										260
									]
								}
							],
							"sources": [
								{
									"fileName": "components/SenseyeAlert.tsx",
									"line": 4,
									"character": 31
								}
							]
						}
					}
				},
				{
					"id": 249,
					"name": "default",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "components/SenseyeAlert.tsx",
							"line": 10,
							"character": 36
						}
					],
					"signatures": [
						{
							"id": 250,
							"name": "default",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 251,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 257,
										"name": "SenseyeAlertProps"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"kind": 2,
					"children": [
						252
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						257
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						249
					]
				}
			],
			"sources": [
				{
					"fileName": "components/SenseyeAlert.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 261,
			"name": "components/SenseyeButton",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 265,
					"name": "SenseyeButtonProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "components/SenseyeButton.tsx",
							"line": 4,
							"character": 30
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 266,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 268,
									"name": "theme",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Describes which UI appearance to use for button"
									},
									"sources": [
										{
											"fileName": "components/SenseyeButton.tsx",
											"line": 8,
											"character": 7
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "primaryCta"
											},
											{
												"type": "literal",
												"value": "secondaryCta"
											}
										]
									}
								},
								{
									"id": 267,
									"name": "title",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Title message to be displayed on the button"
									},
									"sources": [
										{
											"fileName": "components/SenseyeButton.tsx",
											"line": 6,
											"character": 7
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 269,
									"name": "onPress",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 270,
											"name": "onPress",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										268,
										267
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										269
									]
								}
							],
							"sources": [
								{
									"fileName": "components/SenseyeButton.tsx",
									"line": 4,
									"character": 32
								}
							]
						}
					}
				},
				{
					"id": 262,
					"name": "default",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "components/SenseyeButton.tsx",
							"line": 12,
							"character": 37
						}
					],
					"signatures": [
						{
							"id": 263,
							"name": "default",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 264,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 265,
										"name": "SenseyeButtonProps"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						265
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						262
					]
				}
			],
			"sources": [
				{
					"fileName": "components/SenseyeButton.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 271,
			"name": "components/SenseyeCalendar",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 275,
					"name": "default",
					"kind": 2,
					"kindString": "Namespace",
					"flags": {},
					"children": [
						{
							"id": 276,
							"name": "defaultProps",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 277,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 278,
											"name": "initialDate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 279,
											"name": "onUpdate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "literal",
												"value": null
											},
											"defaultValue": "null"
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												278,
												279
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								276
							]
						}
					]
				},
				{
					"id": 280,
					"name": "SenseyeCalendarProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "components/SenseyeCalendar.tsx",
							"line": 4,
							"character": 32
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 281,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 282,
									"name": "initialDate",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "components/SenseyeCalendar.tsx",
											"line": 5,
											"character": 13
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 283,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "components/SenseyeCalendar.tsx",
															"line": 5,
															"character": 25
														}
													],
													"signatures": [
														{
															"id": 284,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 285,
									"name": "onUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 286,
											"name": "onUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 287,
													"name": "day",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										282
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										285
									]
								}
							],
							"sources": [
								{
									"fileName": "components/SenseyeCalendar.tsx",
									"line": 4,
									"character": 34
								}
							]
						}
					}
				},
				{
					"id": 272,
					"name": "default",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "components/SenseyeCalendar.tsx",
							"line": 13,
							"character": 39
						}
					],
					"signatures": [
						{
							"id": 273,
							"name": "default",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 274,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 280,
										"name": "SenseyeCalendarProps"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"kind": 2,
					"children": [
						275
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						280
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						272
					]
				}
			],
			"sources": [
				{
					"fileName": "components/SenseyeCalendar.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 288,
			"name": "components/SenseyePicker",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 292,
					"name": "default",
					"kind": 2,
					"kindString": "Namespace",
					"flags": {},
					"children": [
						{
							"id": 293,
							"name": "defaultProps",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 294,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 297,
											"name": "height",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "50"
										},
										{
											"id": 295,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "''"
										},
										{
											"id": 299,
											"name": "marginBottom",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "20"
										},
										{
											"id": 302,
											"name": "pickerBackground",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'transparent'"
										},
										{
											"id": 296,
											"name": "selectedValue",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "literal",
												"value": null
											},
											"defaultValue": "null"
										},
										{
											"id": 298,
											"name": "width",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'auto'"
										},
										{
											"id": 300,
											"name": "zIndex",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "100"
										},
										{
											"id": 301,
											"name": "zIndexInverse",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "300"
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												297,
												295,
												299,
												302,
												296,
												298,
												300,
												301
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								293
							]
						}
					]
				},
				{
					"id": 303,
					"name": "SenseyePickerProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "components/SenseyePicker.tsx",
							"line": 7,
							"character": 30
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 304,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 310,
									"name": "height",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Sets the height of the picker container"
									},
									"sources": [
										{
											"fileName": "components/SenseyePicker.tsx",
											"line": 18,
											"character": 8
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 309,
									"name": "label",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Displayed value on the Picker Item"
									},
									"sources": [
										{
											"fileName": "components/SenseyePicker.tsx",
											"line": 16,
											"character": 7
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 313,
									"name": "marginBottom",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Sets the bottom margin of the picker container"
									},
									"sources": [
										{
											"fileName": "components/SenseyePicker.tsx",
											"line": 24,
											"character": 14
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 305,
									"name": "options",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "A collection of options a user can select from"
									},
									"sources": [
										{
											"fileName": "components/SenseyePicker.tsx",
											"line": 9,
											"character": 9
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 306,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 307,
													"name": "labels",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "A list of displayed values of the collection"
													},
													"sources": [
														{
															"fileName": "components/SenseyePicker.tsx",
															"line": 11,
															"character": 10
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												},
												{
													"id": 308,
													"name": "values",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "A list of the actual values of the collection"
													},
													"sources": [
														{
															"fileName": "components/SenseyePicker.tsx",
															"line": 13,
															"character": 10
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 539,
															"name": "Datum"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														307,
														308
													]
												}
											],
											"sources": [
												{
													"fileName": "components/SenseyePicker.tsx",
													"line": 9,
													"character": 10
												}
											]
										}
									}
								},
								{
									"id": 312,
									"name": "pickerBackground",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Sets the background color of the picker container"
									},
									"sources": [
										{
											"fileName": "components/SenseyePicker.tsx",
											"line": 22,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 314,
									"name": "selectedValue",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Stores which value is selected"
									},
									"sources": [
										{
											"fileName": "components/SenseyePicker.tsx",
											"line": 26,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"id": 539,
										"name": "Datum"
									}
								},
								{
									"id": 311,
									"name": "width",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Sets the width of the picker container"
									},
									"sources": [
										{
											"fileName": "components/SenseyePicker.tsx",
											"line": 20,
											"character": 7
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 315,
									"name": "zIndex",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Specifies the stack order"
									},
									"sources": [
										{
											"fileName": "components/SenseyePicker.tsx",
											"line": 28,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 316,
									"name": "zIndexInverse",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Specifies the inverse stack order"
									},
									"sources": [
										{
											"fileName": "components/SenseyePicker.tsx",
											"line": 30,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 317,
									"name": "onChangeValue",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 318,
											"name": "onChangeValue",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Function to be called when an item is selected"
											},
											"parameters": [
												{
													"id": 319,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 539,
														"name": "Datum"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										310,
										309,
										313,
										305,
										312,
										314,
										311,
										315,
										316
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										317
									]
								}
							],
							"sources": [
								{
									"fileName": "components/SenseyePicker.tsx",
									"line": 7,
									"character": 32
								}
							]
						}
					}
				},
				{
					"id": 289,
					"name": "default",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "components/SenseyePicker.tsx",
							"line": 35,
							"character": 37
						}
					],
					"signatures": [
						{
							"id": 290,
							"name": "default",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 291,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 303,
										"name": "SenseyePickerProps"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"kind": 2,
					"children": [
						292
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						303
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						289
					]
				}
			],
			"sources": [
				{
					"fileName": "components/SenseyePicker.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 320,
			"name": "components/SenseyeTextInput",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 324,
					"name": "default",
					"kind": 2,
					"kindString": "Namespace",
					"flags": {},
					"children": [
						{
							"id": 325,
							"name": "defaultProps",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 326,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 333,
											"name": "background",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'#191C31'"
										},
										{
											"id": 334,
											"name": "borderBottomColor",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'transparent'"
										},
										{
											"id": 335,
											"name": "borderBottomWidth",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										},
										{
											"id": 331,
											"name": "height",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "50"
										},
										{
											"id": 328,
											"name": "keyboardType",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'default'"
										},
										{
											"id": 327,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "''"
										},
										{
											"id": 329,
											"name": "placeholderText",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'Type here'"
										},
										{
											"id": 330,
											"name": "placeholderTextColor",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'rgba(216,249,255, 0.2)'"
										},
										{
											"id": 332,
											"name": "width",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'auto'"
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												333,
												334,
												335,
												331,
												328,
												327,
												329,
												330,
												332
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								325
							]
						}
					]
				},
				{
					"id": 336,
					"name": "SenseyeTextInputProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "components/SenseyeTextInput.tsx",
							"line": 4,
							"character": 33
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 337,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 345,
									"name": "background",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Sets background color of the field container"
									},
									"sources": [
										{
											"fileName": "components/SenseyeTextInput.tsx",
											"line": 20,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 346,
									"name": "borderBottomColor",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Sets border color for the field container"
									},
									"sources": [
										{
											"fileName": "components/SenseyeTextInput.tsx",
											"line": 22,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 347,
									"name": "borderBottomWidth",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The numeric width to use for field container border"
									},
									"sources": [
										{
											"fileName": "components/SenseyeTextInput.tsx",
											"line": 24,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 343,
									"name": "height",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Sets height of the field container"
									},
									"sources": [
										{
											"fileName": "components/SenseyeTextInput.tsx",
											"line": 16,
											"character": 8
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 339,
									"name": "keyboardType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Determines which keyboard to use, e.g.numeric"
									},
									"sources": [
										{
											"fileName": "components/SenseyeTextInput.tsx",
											"line": 8,
											"character": 14
										}
									],
									"type": {
										"type": "reference",
										"name": "KeyboardType"
									}
								},
								{
									"id": 338,
									"name": "label",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Label message to be displayed for field"
									},
									"sources": [
										{
											"fileName": "components/SenseyeTextInput.tsx",
											"line": 6,
											"character": 7
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 340,
									"name": "placeholderText",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The string that will be rendered before text input has been entered"
									},
									"sources": [
										{
											"fileName": "components/SenseyeTextInput.tsx",
											"line": 10,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 341,
									"name": "placeholderTextColor",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The color that will determine placeholder text"
									},
									"sources": [
										{
											"fileName": "components/SenseyeTextInput.tsx",
											"line": 12,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 342,
									"name": "value",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The value to show for the text input"
									},
									"sources": [
										{
											"fileName": "components/SenseyeTextInput.tsx",
											"line": 14,
											"character": 7
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								},
								{
									"id": 344,
									"name": "width",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Sets width of the field container"
									},
									"sources": [
										{
											"fileName": "components/SenseyeTextInput.tsx",
											"line": 18,
											"character": 7
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 348,
									"name": "onChangeText",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 349,
											"name": "onChangeText",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "A string that displays an alert message"
											},
											"parameters": [
												{
													"id": 350,
													"name": "text",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										345,
										346,
										347,
										343,
										339,
										338,
										340,
										341,
										342,
										344
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										348
									]
								}
							],
							"sources": [
								{
									"fileName": "components/SenseyeTextInput.tsx",
									"line": 4,
									"character": 35
								}
							]
						}
					}
				},
				{
					"id": 321,
					"name": "default",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "components/SenseyeTextInput.tsx",
							"line": 29,
							"character": 40
						}
					],
					"signatures": [
						{
							"id": 322,
							"name": "default",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 323,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 336,
										"name": "SenseyeTextInputProps"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"kind": 2,
					"children": [
						324
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						336
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						321
					]
				}
			],
			"sources": [
				{
					"fileName": "components/SenseyeTextInput.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 351,
			"name": "components/TaskRunner",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 352,
					"name": "TaskRunnerProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "components/TaskRunner.tsx",
							"line": 10,
							"character": 27
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 353,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 355,
									"name": "demographicSurvey",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Demographic survey completed beforehand by the particpant."
									},
									"sources": [
										{
											"fileName": "components/TaskRunner.tsx",
											"line": 14,
											"character": 19
										}
									],
									"type": {
										"type": "reference",
										"id": 92,
										"name": "Models.Survey"
									}
								},
								{
									"id": 354,
									"name": "uniqueId",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Username or ID of the participant."
									},
									"sources": [
										{
											"fileName": "components/TaskRunner.tsx",
											"line": 12,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 361,
									"name": "onEnd",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 362,
											"name": "onEnd",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Function to be called once all tasks are complete. Its param will be a `Session`\ncontaining {@link Video | Videos} and data recorded during the tasks."
											},
											"parameters": [
												{
													"id": 363,
													"name": "session",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 56,
														"name": "default"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 356,
									"name": "onTaskPreview",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 357,
											"name": "onTaskPreview",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Function to be called immediately at camera preview, before every task.\nIts params will contain values associated with the upcoming task."
											},
											"parameters": [
												{
													"id": 358,
													"name": "index",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 359,
													"name": "name",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 360,
													"name": "instructions",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										355,
										354
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										361,
										356
									]
								}
							],
							"sources": [
								{
									"fileName": "components/TaskRunner.tsx",
									"line": 10,
									"character": 29
								}
							]
						}
					}
				},
				{
					"id": 364,
					"name": "default",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Component that executes a series of {@link Tasks} passed in as children elements (`props.children`).\nOrchestrates video recording and data collection during each task."
					},
					"sources": [
						{
							"fileName": "components/TaskRunner.tsx",
							"line": 31,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 352,
								"name": "TaskRunnerProps"
							}
						],
						"name": "React.FunctionComponent"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						352
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						364
					]
				}
			],
			"sources": [
				{
					"fileName": "components/TaskRunner.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 365,
			"name": "components/VideoRecorder",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 366,
					"name": "VideoRecorderProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "components/VideoRecorder.tsx",
							"line": 24,
							"character": 30
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 367,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 371,
									"name": "androidCameraPermissionOptions",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "(Android) Configuration options for permissions request for camera."
									},
									"sources": [
										{
											"fileName": "components/VideoRecorder.tsx",
											"line": 32,
											"character": 32
										}
									],
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "androidCameraPermissionOptions"
										},
										"objectType": {
											"type": "reference",
											"name": "RNCameraProps"
										}
									}
								},
								{
									"id": 372,
									"name": "androidRecordAudioPermissionOptions",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "(Android) Configuration options for permissions request for recording audio."
									},
									"sources": [
										{
											"fileName": "components/VideoRecorder.tsx",
											"line": 34,
											"character": 37
										}
									],
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "androidRecordAudioPermissionOptions"
										},
										"objectType": {
											"type": "reference",
											"name": "RNCameraProps"
										}
									}
								},
								{
									"id": 369,
									"name": "cameraId",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Overrides the `type` property and uses the camera specified by its id."
									},
									"sources": [
										{
											"fileName": "components/VideoRecorder.tsx",
											"line": 28,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 373,
									"name": "captureAudio",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Whether audio recording permissions should be requested."
									},
									"sources": [
										{
											"fileName": "components/VideoRecorder.tsx",
											"line": 36,
											"character": 14
										}
									],
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "captureAudio"
										},
										"objectType": {
											"type": "reference",
											"name": "RNCameraProps"
										}
									}
								},
								{
									"id": 374,
									"name": "showPreview",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"tags": [
											{
												"tag": "deprecated",
												"text": "since version 0.4.0"
											}
										]
									},
									"sources": [
										{
											"fileName": "components/VideoRecorder.tsx",
											"line": 38,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 368,
									"name": "type",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Type of camera to use. Possible values: 'front' | 'back'"
									},
									"sources": [
										{
											"fileName": "components/VideoRecorder.tsx",
											"line": 26,
											"character": 6
										}
									],
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "type"
										},
										"objectType": {
											"type": "reference",
											"name": "RNCameraProps"
										}
									}
								},
								{
									"id": 370,
									"name": "useCamera2Api",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "(Android) Whether to use Android's Camera2 API."
									},
									"sources": [
										{
											"fileName": "components/VideoRecorder.tsx",
											"line": 30,
											"character": 15
										}
									],
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "useCamera2Api"
										},
										"objectType": {
											"type": "reference",
											"name": "RNCameraProps"
										}
									}
								},
								{
									"id": 375,
									"name": "onCameraReady",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 376,
											"name": "onCameraReady",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Function to be called when camera is ready. This event will also fire when\nchanging cameras (by `type` or `cameraId`)."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 387,
									"name": "onDoubleTap",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 388,
											"name": "onDoubleTap",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Function to be called when a double touch within the camera view is recognized."
											},
											"parameters": [
												{
													"id": 389,
													"name": "origin",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 560,
														"name": "Point"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 377,
									"name": "onMountError",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 378,
											"name": "onMountError",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Function to be called when there is a problem mounting the camera."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 385,
									"name": "onRecordingEnd",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 386,
											"name": "onRecordingEnd",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Function to be called when video stops recording, but before all video\nprocessing takes place. This event will only fire after a successful video\nrecording, and it will not fire if video recording fails."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 382,
									"name": "onRecordingStart",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 383,
											"name": "onRecordingStart",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Function to be called when video actually starts recording. Note that video\nrecording might take a few milliseconds to setup depending on the camera\nsettings and hardware features."
											},
											"parameters": [
												{
													"id": 384,
													"name": "event",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 549,
														"name": "RecordingStartEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 379,
									"name": "onStatusChange",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 380,
											"name": "onStatusChange",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Function to be called when there is a status change in relation to\nauthorization changes."
											},
											"parameters": [
												{
													"id": 381,
													"name": "event",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 556,
														"name": "RecorderStatusChangeEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										371,
										372,
										369,
										373,
										374,
										368,
										370
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										375,
										387,
										377,
										385,
										382,
										379
									]
								}
							],
							"sources": [
								{
									"fileName": "components/VideoRecorder.tsx",
									"line": 24,
									"character": 32
								}
							]
						}
					}
				},
				{
					"id": 390,
					"name": "default",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Component that uses RNCamera to record videos. Since this mainly acts as a wrapper\naround RNCamera, more information regarding some properties may be found\n{@link https://react-native-camera.github.io/react-native-camera/docs/rncamera#properties | here}.",
						"text": "Passing in a `ref` callback will produce a {@link VideoRecorderObject}.\n"
					},
					"sources": [
						{
							"fileName": "components/VideoRecorder.tsx",
							"line": 78,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 366,
										"name": "VideoRecorderProps"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 564,
												"name": "VideoRecorderObject"
											}
										],
										"name": "RefAttributes"
									}
								]
							}
						],
						"name": "ForwardRefExoticComponent"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						366
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						390
					]
				}
			],
			"sources": [
				{
					"fileName": "components/VideoRecorder.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 411,
			"name": "components/surveys",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 700,
					"name": "Demographic",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/surveys/index.ts",
							"line": 4,
							"character": 20
						}
					],
					"target": 393
				},
				{
					"id": 701,
					"name": "Validation",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/surveys/index.ts",
							"line": 4,
							"character": 32
						}
					],
					"target": 402
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						700,
						701
					]
				}
			],
			"sources": [
				{
					"fileName": "components/surveys/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 392,
			"name": "components/surveys/Demographic",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 396,
					"name": "DemographicSurveyProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "components/surveys/Demographic.tsx",
							"line": 32,
							"character": 34
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 397,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 398,
									"name": "onComplete",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 399,
											"name": "onComplete",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 400,
													"name": "survey",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 92,
														"name": "default"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										398
									]
								}
							],
							"sources": [
								{
									"fileName": "components/surveys/Demographic.tsx",
									"line": 32,
									"character": 36
								}
							]
						}
					}
				},
				{
					"id": 393,
					"name": "default",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "components/surveys/Demographic.tsx",
							"line": 36,
							"character": 41
						}
					],
					"signatures": [
						{
							"id": 394,
							"name": "default",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 395,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 396,
										"name": "DemographicSurveyProps"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						396
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						393
					]
				}
			],
			"sources": [
				{
					"fileName": "components/surveys/Demographic.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 401,
			"name": "components/surveys/Validation",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 405,
					"name": "ValidationSurveyProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "components/surveys/Validation.tsx",
							"line": 27,
							"character": 33
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 406,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 407,
									"name": "result",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "components/surveys/Validation.tsx",
											"line": 28,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"id": 528,
										"name": "PredictionResult"
									}
								},
								{
									"id": 408,
									"name": "onComplete",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 409,
											"name": "onComplete",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 410,
													"name": "survey",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 92,
														"name": "default"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										407
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										408
									]
								}
							],
							"sources": [
								{
									"fileName": "components/surveys/Validation.tsx",
									"line": 27,
									"character": 35
								}
							]
						}
					}
				},
				{
					"id": 402,
					"name": "default",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "components/surveys/Validation.tsx",
							"line": 32,
							"character": 40
						}
					],
					"signatures": [
						{
							"id": 403,
							"name": "default",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 404,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 405,
										"name": "ValidationSurveyProps"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						405
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						402
					]
				}
			],
			"sources": [
				{
					"fileName": "components/surveys/Validation.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 501,
			"name": "components/tasks",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 702,
					"name": "Calibration",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/tasks/index.ts",
							"line": 5,
							"character": 20
						}
					],
					"target": 413
				},
				{
					"id": 703,
					"name": "Plr",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/tasks/index.ts",
							"line": 5,
							"character": 25
						}
					],
					"target": 439
				},
				{
					"id": 704,
					"name": "SmoothPursuit",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/tasks/index.ts",
							"line": 5,
							"character": 40
						}
					],
					"target": 463
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						702,
						703,
						704
					]
				}
			],
			"sources": [
				{
					"fileName": "components/tasks/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 412,
			"name": "components/tasks/Calibration",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 416,
					"name": "default",
					"kind": 2,
					"kindString": "Namespace",
					"flags": {},
					"children": [
						{
							"id": 417,
							"name": "defaultProps",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 418,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 419,
											"name": "background",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'#000000'"
										},
										{
											"id": 422,
											"name": "dotColor",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'#FFFFFF'"
										},
										{
											"id": 423,
											"name": "dotSequence",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 424,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"children": [
															{
																"id": 425,
																"name": "x",
																"kind": 1024,
																"kindString": "Property",
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "number"
																},
																"defaultValue": "0.2"
															},
															{
																"id": 426,
																"name": "y",
																"kind": 1024,
																"kindString": "Property",
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "number"
																},
																"defaultValue": "0.25"
															}
														],
														"groups": [
															{
																"title": "Properties",
																"kind": 1024,
																"children": [
																	425,
																	426
																]
															}
														]
													}
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 420,
											"name": "duration",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "2000"
										},
										{
											"id": 430,
											"name": "height",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'100%'"
										},
										{
											"id": 428,
											"name": "instructions",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'\\\nPlease keep your head still throughout the assessment.\\n\\n\\\nAs each dot appears, immediately look at the dot and continue to stare at it until a new dot appears.\\n\\n\\\nDouble tap the screen to begin.'"
										},
										{
											"id": 427,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'Calibration'"
										},
										{
											"id": 421,
											"name": "radius",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "15"
										},
										{
											"id": 429,
											"name": "width",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'100%'"
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												419,
												422,
												423,
												420,
												430,
												428,
												427,
												421,
												429
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								417
							]
						}
					]
				},
				{
					"id": 431,
					"name": "CalibrationProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "components/tasks/Calibration.tsx",
							"line": 11,
							"character": 28
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"id": 572,
								"name": "TaskProps"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 432,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 434,
											"name": "delay",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"tags": [
													{
														"tag": "deprecated",
														"text": "since version 0.4.0"
													}
												]
											},
											"sources": [
												{
													"fileName": "components/tasks/Calibration.tsx",
													"line": 15,
													"character": 7
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 436,
											"name": "dotColor",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Defines the color of the dots."
											},
											"sources": [
												{
													"fileName": "components/tasks/Calibration.tsx",
													"line": 19,
													"character": 10
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 437,
											"name": "dotSequence",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Determines the sequence of xy coordinates of the dots."
											},
											"sources": [
												{
													"fileName": "components/tasks/Calibration.tsx",
													"line": 21,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 560,
													"name": "Point"
												}
											}
										},
										{
											"id": 433,
											"name": "duration",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Amount of time (milliseconds) a dot is displayed on-screen."
											},
											"sources": [
												{
													"fileName": "components/tasks/Calibration.tsx",
													"line": 13,
													"character": 10
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 435,
											"name": "radius",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Defines the radius of the dots."
											},
											"sources": [
												{
													"fileName": "components/tasks/Calibration.tsx",
													"line": 17,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												434,
												436,
												437,
												433,
												435
											]
										}
									],
									"sources": [
										{
											"fileName": "components/tasks/Calibration.tsx",
											"line": 11,
											"character": 42
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 413,
					"name": "default",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "components/tasks/Calibration.tsx",
							"line": 28,
							"character": 35
						}
					],
					"signatures": [
						{
							"id": 414,
							"name": "default",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "This task is used to calibrate the gaze tracking system to provide accurate\ngaze information used to assess behavior in the other tasks."
							},
							"parameters": [
								{
									"id": 415,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 431,
										"name": "CalibrationProps"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"kind": 2,
					"children": [
						416
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						431
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						413
					]
				}
			],
			"sources": [
				{
					"fileName": "components/tasks/Calibration.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 438,
			"name": "components/tasks/Plr",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 442,
					"name": "default",
					"kind": 2,
					"kindString": "Namespace",
					"flags": {},
					"children": [
						{
							"id": 443,
							"name": "defaultProps",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 444,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 445,
											"name": "background",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'#000000'"
										},
										{
											"id": 446,
											"name": "colorSequence",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 450,
											"name": "duration",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "5000"
										},
										{
											"id": 448,
											"name": "fixationLength",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "40"
										},
										{
											"id": 449,
											"name": "fixationOutlineSize",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "4"
										},
										{
											"id": 447,
											"name": "fixationWidth",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "16"
										},
										{
											"id": 454,
											"name": "height",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'100%'"
										},
										{
											"id": 452,
											"name": "instructions",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'\\\nPlease keep your head still throughout the assessment.\\n\\n\\\nContinue to look at the cross in the center of the screen as the background changes from gray to black to white to black.\\n\\n\\\nDouble tap the screen to begin.'"
										},
										{
											"id": 451,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'PLR'"
										},
										{
											"id": 453,
											"name": "width",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'100%'"
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												445,
												446,
												450,
												448,
												449,
												447,
												454,
												452,
												451,
												453
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								443
							]
						}
					]
				},
				{
					"id": 455,
					"name": "PlrProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "components/tasks/Plr.tsx",
							"line": 7,
							"character": 20
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"id": 572,
								"name": "TaskProps"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 456,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 457,
											"name": "colorSequence",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The color sequence of the background."
											},
											"sources": [
												{
													"fileName": "components/tasks/Plr.tsx",
													"line": 9,
													"character": 15
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "number"
														}
													}
												]
											}
										},
										{
											"id": 461,
											"name": "duration",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The amount of time (milliseconds) to display each background color."
											},
											"sources": [
												{
													"fileName": "components/tasks/Plr.tsx",
													"line": 17,
													"character": 10
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 459,
											"name": "fixationLength",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The center cross length."
											},
											"sources": [
												{
													"fileName": "components/tasks/Plr.tsx",
													"line": 13,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 460,
											"name": "fixationOutlineSize",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The thickness of the center cross outline. Set to 0 to make the outline disappear."
											},
											"sources": [
												{
													"fileName": "components/tasks/Plr.tsx",
													"line": 15,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 458,
											"name": "fixationWidth",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The center cross width."
											},
											"sources": [
												{
													"fileName": "components/tasks/Plr.tsx",
													"line": 11,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												457,
												461,
												459,
												460,
												458
											]
										}
									],
									"sources": [
										{
											"fileName": "components/tasks/Plr.tsx",
											"line": 7,
											"character": 34
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 439,
					"name": "default",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "components/tasks/Plr.tsx",
							"line": 21,
							"character": 27
						}
					],
					"signatures": [
						{
							"id": 440,
							"name": "default",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Measures pupillary light reflex by manipulating the luminance of the screen."
							},
							"parameters": [
								{
									"id": 441,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 455,
										"name": "PlrProps"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"kind": 2,
					"children": [
						442
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						455
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						439
					]
				}
			],
			"sources": [
				{
					"fileName": "components/tasks/Plr.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 462,
			"name": "components/tasks/SmoothPursuit",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 466,
					"name": "default",
					"kind": 2,
					"kindString": "Namespace",
					"flags": {},
					"children": [
						{
							"id": 467,
							"name": "defaultProps",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 468,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 469,
											"name": "background",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'#000000'"
										},
										{
											"id": 471,
											"name": "cycles",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "3"
										},
										{
											"id": 475,
											"name": "delay",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "3000"
										},
										{
											"id": 470,
											"name": "duration",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "3000"
										},
										{
											"id": 482,
											"name": "fixationColor",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'#FFFFFF'"
										},
										{
											"id": 481,
											"name": "fixationRadius",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "10"
										},
										{
											"id": 485,
											"name": "height",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'100%'"
										},
										{
											"id": 483,
											"name": "instructions",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'\\\nPlease keep your head still throughout the assessment.\\n\\n\\\nStare at the dot at the center of the screen. When a target appears, follow the target with your eyes as it moves around in a circle. When the target disappears, stare at the center dot again.\\n\\n\\\nDouble tap the screen to begin.'"
										},
										{
											"id": 472,
											"name": "iterations",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "3"
										},
										{
											"id": 486,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'Smooth Pursuit'"
										},
										{
											"id": 474,
											"name": "offset",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "150"
										},
										{
											"id": 473,
											"name": "speed",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0.05"
										},
										{
											"id": 476,
											"name": "startAngle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "..."
										},
										{
											"id": 478,
											"name": "targetColor",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'#FF0000'"
										},
										{
											"id": 480,
											"name": "targetOutlineColor",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'#FFFFFF'"
										},
										{
											"id": 479,
											"name": "targetOutlineRadius",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "14"
										},
										{
											"id": 477,
											"name": "targetRadius",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "7"
										},
										{
											"id": 484,
											"name": "width",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'100%'"
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												469,
												471,
												475,
												470,
												482,
												481,
												485,
												483,
												472,
												486,
												474,
												473,
												476,
												478,
												480,
												479,
												477,
												484
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								467
							]
						}
					]
				},
				{
					"id": 487,
					"name": "SmoothPursuitProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "components/tasks/SmoothPursuit.tsx",
							"line": 11,
							"character": 30
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"id": 572,
								"name": "TaskProps"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 488,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 489,
											"name": "cycles",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Defines the number of times in an iteration the target will circle around the fixation point."
											},
											"sources": [
												{
													"fileName": "components/tasks/SmoothPursuit.tsx",
													"line": 13,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 493,
											"name": "delay",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Defines the amount of time (milliseconds) the moving target will disappear and pause between each iteration."
											},
											"sources": [
												{
													"fileName": "components/tasks/SmoothPursuit.tsx",
													"line": 24,
													"character": 7
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 500,
											"name": "fixationColor",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Defines the color of the fixed center point."
											},
											"sources": [
												{
													"fileName": "components/tasks/SmoothPursuit.tsx",
													"line": 45,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 499,
											"name": "fixationRadius",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Defines the radius of the fixed center point."
											},
											"sources": [
												{
													"fileName": "components/tasks/SmoothPursuit.tsx",
													"line": 43,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 490,
											"name": "iterations",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Defines the number of times the target will appear and perform its cycles."
											},
											"sources": [
												{
													"fileName": "components/tasks/SmoothPursuit.tsx",
													"line": 15,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 492,
											"name": "offset",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Defines the radial distance between the target and the fixation point."
											},
											"sources": [
												{
													"fileName": "components/tasks/SmoothPursuit.tsx",
													"line": 22,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 491,
											"name": "speed",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Defines how fast the target will circle around the fixation point. A positive value will\nmove the target in a counterclockwise direction, whereas a negative value will move it clockwise."
											},
											"sources": [
												{
													"fileName": "components/tasks/SmoothPursuit.tsx",
													"line": 20,
													"character": 7
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 494,
											"name": "startAngle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Defines the starting angle, measured in radians, of the target for each cycle/iteration.\nAt `0`, the target's starting position will lie on the positive x-axis. As the value increases,\nthe position will shift in a counterclockwise direction."
											},
											"sources": [
												{
													"fileName": "components/tasks/SmoothPursuit.tsx",
													"line": 30,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 497,
											"name": "targetColor",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Defines the color of the moving target."
											},
											"sources": [
												{
													"fileName": "components/tasks/SmoothPursuit.tsx",
													"line": 39,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 498,
											"name": "targetOutlineColor",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Defines the color of the moving target's outline."
											},
											"sources": [
												{
													"fileName": "components/tasks/SmoothPursuit.tsx",
													"line": 41,
													"character": 20
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 496,
											"name": "targetOutlineRadius",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Defines the size of the moving target's outline. The outline is drawn as a circle behind the target itself,\ni.e. set this less than or equal to `targetRadius` to make the outline disappear."
											},
											"sources": [
												{
													"fileName": "components/tasks/SmoothPursuit.tsx",
													"line": 37,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 495,
											"name": "targetRadius",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Defines the size of the moving target."
											},
											"sources": [
												{
													"fileName": "components/tasks/SmoothPursuit.tsx",
													"line": 32,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												489,
												493,
												500,
												499,
												490,
												492,
												491,
												494,
												497,
												498,
												496,
												495
											]
										}
									],
									"sources": [
										{
											"fileName": "components/tasks/SmoothPursuit.tsx",
											"line": 11,
											"character": 44
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 463,
					"name": "default",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "components/tasks/SmoothPursuit.tsx",
							"line": 49,
							"character": 37
						}
					],
					"signatures": [
						{
							"id": 464,
							"name": "default",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Smooth pursuit assessment. Displays a target that the participant follows with their eyes."
							},
							"parameters": [
								{
									"id": 465,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 487,
										"name": "SmoothPursuitProps"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"kind": 2,
					"children": [
						466
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						487
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						463
					]
				}
			],
			"sources": [
				{
					"fileName": "components/tasks/SmoothPursuit.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 502,
			"name": "index",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 725,
					"name": "CalibrationProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 33,
							"character": 25
						}
					],
					"target": 695
				},
				{
					"id": 731,
					"name": "ComputeJobInitResponse",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 519
				},
				{
					"id": 732,
					"name": "ComputeJobResponse",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 522
				},
				{
					"id": 743,
					"name": "Constants",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "utils/index.ts",
							"line": 184,
							"character": 11
						}
					],
					"target": 587
				},
				{
					"id": 730,
					"name": "DataResponse",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 504
				},
				{
					"id": 734,
					"name": "Datum",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 539
				},
				{
					"id": 728,
					"name": "DemographicSurveyProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 37,
							"character": 31
						}
					],
					"target": 698
				},
				{
					"id": 735,
					"name": "EventData",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 540
				},
				{
					"id": 721,
					"name": "FaceOutline",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 27,
							"character": 13
						}
					],
					"target": 691
				},
				{
					"id": 722,
					"name": "FaceOutlineProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 28,
							"character": 18
						}
					],
					"target": 692
				},
				{
					"id": 706,
					"name": "Models",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "api/index.ts",
							"line": 4,
							"character": 33
						}
					],
					"target": 672
				},
				{
					"id": 726,
					"name": "PlrProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 34,
							"character": 17
						}
					],
					"target": 696
				},
				{
					"id": 740,
					"name": "Point",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 560
				},
				{
					"id": 733,
					"name": "PredictionResult",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 528
				},
				{
					"id": 739,
					"name": "RecorderStatusChangeEvent",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 556
				},
				{
					"id": 738,
					"name": "RecordingStartEvent",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 549
				},
				{
					"id": 719,
					"name": "SenseyeAlert",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 25,
							"character": 14
						}
					],
					"target": 689
				},
				{
					"id": 720,
					"name": "SenseyeAlertProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 26,
							"character": 19
						}
					],
					"target": 690
				},
				{
					"id": 705,
					"name": "SenseyeApiClient",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "api/index.ts",
							"line": 4,
							"character": 25
						}
					],
					"target": 671
				},
				{
					"id": 711,
					"name": "SenseyeButton",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 17,
							"character": 15
						}
					],
					"target": 681
				},
				{
					"id": 712,
					"name": "SenseyeButtonProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 18,
							"character": 20
						}
					],
					"target": 682
				},
				{
					"id": 713,
					"name": "SenseyeCalendar",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 19,
							"character": 17
						}
					],
					"target": 683
				},
				{
					"id": 714,
					"name": "SenseyeCalendarProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 20,
							"character": 22
						}
					],
					"target": 684
				},
				{
					"id": 715,
					"name": "SenseyePicker",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 21,
							"character": 15
						}
					],
					"target": 685
				},
				{
					"id": 716,
					"name": "SenseyePickerProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 22,
							"character": 20
						}
					],
					"target": 686
				},
				{
					"id": 717,
					"name": "SenseyeTextInput",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 23,
							"character": 18
						}
					],
					"target": 687
				},
				{
					"id": 718,
					"name": "SenseyeTextInputProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 24,
							"character": 23
						}
					],
					"target": 688
				},
				{
					"id": 736,
					"name": "SessionCondition",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 547
				},
				{
					"id": 727,
					"name": "SmoothPursuitProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 35,
							"character": 27
						}
					],
					"target": 697
				},
				{
					"id": 737,
					"name": "SurveyType",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 548
				},
				{
					"id": 724,
					"name": "Surveys",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 30,
							"character": 9
						}
					],
					"target": 694
				},
				{
					"id": 742,
					"name": "TaskProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 572
				},
				{
					"id": 707,
					"name": "TaskRunner",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 13,
							"character": 12
						}
					],
					"target": 677
				},
				{
					"id": 708,
					"name": "TaskRunnerProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 14,
							"character": 17
						}
					],
					"target": 678
				},
				{
					"id": 723,
					"name": "Tasks",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 29,
							"character": 7
						}
					],
					"target": 693
				},
				{
					"id": 729,
					"name": "ValidationSurveyProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 38,
							"character": 30
						}
					],
					"target": 699
				},
				{
					"id": 709,
					"name": "VideoRecorder",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 15,
							"character": 15
						}
					],
					"target": 679
				},
				{
					"id": 741,
					"name": "VideoRecorderObject",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 564
				},
				{
					"id": 710,
					"name": "VideoRecorderProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "components/index.ts",
							"line": 16,
							"character": 20
						}
					],
					"target": 680
				},
				{
					"id": 748,
					"name": "backArrow",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 222
				},
				{
					"id": 749,
					"name": "checkmarkIcon",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 223
				},
				{
					"id": 750,
					"name": "forwardArrow",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 224
				},
				{
					"id": 752,
					"name": "gearSpinner",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 226
				},
				{
					"id": 744,
					"name": "getCurrentTimestamp",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "utils/index.ts",
							"line": 185,
							"character": 21
						}
					],
					"target": 626
				},
				{
					"id": 745,
					"name": "getMimeFromExtension",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "utils/index.ts",
							"line": 186,
							"character": 22
						}
					],
					"target": 628
				},
				{
					"id": 754,
					"name": "gradientLogo",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 228
				},
				{
					"id": 751,
					"name": "insufficientIcon",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 225
				},
				{
					"id": 746,
					"name": "isNonEmptyString",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "utils/index.ts",
							"line": 187,
							"character": 18
						}
					],
					"target": 631
				},
				{
					"id": 755,
					"name": "ormCheckLogo",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 229
				},
				{
					"id": 753,
					"name": "pictorialGradientLogo",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 227
				},
				{
					"id": 747,
					"name": "validationSchema",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "utils/index.ts",
							"line": 188,
							"character": 18
						}
					],
					"target": 634
				},
				{
					"id": 757,
					"name": "warningIcon",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 231
				},
				{
					"id": 756,
					"name": "whiteLogo",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 230
				},
				{
					"id": 758,
					"name": "xIcon",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 232
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						725,
						731,
						732,
						743,
						730,
						734,
						728,
						735,
						721,
						722,
						706,
						726,
						740,
						733,
						739,
						738,
						719,
						720,
						705,
						711,
						712,
						713,
						714,
						715,
						716,
						717,
						718,
						736,
						727,
						737,
						724,
						742,
						707,
						708,
						723,
						729,
						709,
						741,
						710,
						748,
						749,
						750,
						752,
						744,
						745,
						754,
						751,
						746,
						755,
						753,
						747,
						757,
						756,
						758
					]
				}
			],
			"sources": [
				{
					"fileName": "index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 503,
			"name": "types",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 519,
					"name": "ComputeJobInitResponse",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Response body from Senseye's Compute API when a compute job is submitted."
					},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 29,
							"character": 34
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 520,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 521,
									"name": "id",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "UUID of the queued job."
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 31,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										521
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 29,
									"character": 36
								}
							]
						}
					}
				},
				{
					"id": 522,
					"name": "ComputeJobResponse",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Response body from Senseye's Compute API when polling for a job's status and/or result.\n`result` and `timestamp` are present only if `status = JobStatus.COMPLETED`."
					},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 38,
							"character": 30
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 523,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 524,
									"name": "id",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "UUID of the job."
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 40,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 526,
									"name": "result",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 43,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 525,
									"name": "status",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Possible values: `in_queue` | `in_progress` | `completed` | `failed`"
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 42,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 527,
									"name": "timestamp",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Datetime of when the job completed."
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 45,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										524,
										526,
										525,
										527
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 38,
									"character": 32
								}
							]
						}
					}
				},
				{
					"id": 504,
					"name": "DataResponse",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Response body from Senseye's Data API endpoints (i.e. `/data/*`).\nWill contain one of either `data` or `error` depending on success, except for\nPUT requests, which will never return `data` and will be empty on success."
					},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 10,
							"character": 24
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 505,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 506,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "On success, will contain the requested response data."
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 12,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 507,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "types/index.ts",
													"line": 12,
													"character": 8
												}
											],
											"indexSignature": {
												"id": 508,
												"name": "__index",
												"kind": 8192,
												"kindString": "Index signature",
												"flags": {},
												"parameters": [
													{
														"id": 509,
														"name": "key",
														"kind": 32768,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									}
								},
								{
									"id": 510,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "On error, will contain information regarding the error."
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 14,
											"character": 7
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 511,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 512,
													"name": "code",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 15,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 513,
													"name": "description",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 16,
															"character": 15
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 514,
													"name": "message",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 17,
															"character": 11
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 515,
													"name": "root",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Propagated information of the root error."
													},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 19,
															"character": 8
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 516,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 518,
																	"name": "description",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "types/index.ts",
																			"line": 21,
																			"character": 17
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 517,
																	"name": "type",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "types/index.ts",
																			"line": 20,
																			"character": 10
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		518,
																		517
																	]
																}
															],
															"sources": [
																{
																	"fileName": "types/index.ts",
																	"line": 19,
																	"character": 10
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														512,
														513,
														514,
														515
													]
												}
											],
											"sources": [
												{
													"fileName": "types/index.ts",
													"line": 14,
													"character": 9
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										506,
										510
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 10,
									"character": 26
								}
							]
						}
					}
				},
				{
					"id": 539,
					"name": "Datum",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 71,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "literal",
								"value": null
							}
						]
					}
				},
				{
					"id": 540,
					"name": "EventData",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 73,
							"character": 21
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 541,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 543,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 75,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 544,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "types/index.ts",
													"line": 75,
													"character": 7
												}
											],
											"indexSignature": {
												"id": 545,
												"name": "__index",
												"kind": 8192,
												"kindString": "Index signature",
												"flags": {},
												"parameters": [
													{
														"id": 546,
														"name": "key",
														"kind": 32768,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									}
								},
								{
									"id": 542,
									"name": "timestamp",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 74,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										543,
										542
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 73,
									"character": 23
								}
							]
						}
					}
				},
				{
					"id": 560,
					"name": "Point",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 95,
							"character": 17
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 561,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 562,
									"name": "x",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 96,
											"character": 3
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 563,
									"name": "y",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 97,
											"character": 3
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										562,
										563
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 95,
									"character": 19
								}
							]
						}
					}
				},
				{
					"id": 528,
					"name": "PredictionResult",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 48,
							"character": 28
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 529,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 538,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 68,
											"character": 7
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 531,
									"name": "prediction",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 50,
											"character": 12
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 532,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 533,
													"name": "fatigue",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "[0-1] Value closer to 1 indicate higher probability of fatigue."
													},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 52,
															"character": 11
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												},
												{
													"id": 534,
													"name": "intoxication",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "[0-1] Value closer to 1 indicate higher probability of intoxication."
													},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 54,
															"character": 16
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												},
												{
													"id": 537,
													"name": "processing_time",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Total processing time of the prediction job"
													},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 66,
															"character": 19
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 536,
													"name": "state",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Predicted state of the subject in the analyzed video(s).\nPossible values: 0 | 1 | -1"
													},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 64,
															"character": 9
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 535,
													"name": "threshold",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Can be specified during the initial predict request, and is compared against\n`fatigue` and `intoxication` to determine `state`. Defaults to 0.5"
													},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 59,
															"character": 13
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														533,
														534,
														537,
														536,
														535
													]
												}
											],
											"sources": [
												{
													"fileName": "types/index.ts",
													"line": 50,
													"character": 13
												}
											]
										}
									}
								},
								{
									"id": 530,
									"name": "version",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 49,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										538,
										531,
										530
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 48,
									"character": 30
								}
							]
						}
					}
				},
				{
					"id": 556,
					"name": "RecorderStatusChangeEvent",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 90,
							"character": 37
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 557,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 558,
									"name": "cameraStatus",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 91,
											"character": 14
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "READY"
											},
											{
												"type": "literal",
												"value": "PENDING_AUTHORIZATION"
											},
											{
												"type": "literal",
												"value": "NOT_AUTHORIZED"
											}
										]
									}
								},
								{
									"id": 559,
									"name": "recordAudioPermissionStatus",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 92,
											"character": 29
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "AUTHORIZED"
											},
											{
												"type": "literal",
												"value": "PENDING_AUTHORIZATION"
											},
											{
												"type": "literal",
												"value": "NOT_AUTHORIZED"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										558,
										559
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 90,
									"character": 39
								}
							]
						}
					}
				},
				{
					"id": 549,
					"name": "RecordingStartEvent",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 82,
							"character": 31
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 550,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 551,
									"name": "nativeEvent",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 83,
											"character": 13
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 552,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 555,
													"name": "deviceOrientation",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 86,
															"character": 21
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 553,
													"name": "uri",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 84,
															"character": 7
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 554,
													"name": "videoOrientation",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 85,
															"character": 20
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														555,
														553,
														554
													]
												}
											],
											"sources": [
												{
													"fileName": "types/index.ts",
													"line": 83,
													"character": 14
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										551
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 82,
									"character": 33
								}
							]
						}
					}
				},
				{
					"id": 547,
					"name": "SessionCondition",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 78,
							"character": 28
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "GOOD"
							},
							{
								"type": "literal",
								"value": "BAD"
							},
							{
								"type": "literal",
								"value": "TEST"
							},
							{
								"type": "literal",
								"value": "UNENDED"
							},
							{
								"type": "literal",
								"value": "UNSPECIFIED"
							}
						]
					}
				},
				{
					"id": 548,
					"name": "SurveyType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 80,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "demographic"
							},
							{
								"type": "literal",
								"value": "validation"
							}
						]
					}
				},
				{
					"id": 572,
					"name": "TaskProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 119,
							"character": 21
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 573,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 576,
									"name": "background",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Background color of task."
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 125,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 578,
									"name": "height",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Use to adjust the height of canvas."
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 129,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 575,
									"name": "instructions",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Instructions to follow during the task."
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 123,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 574,
									"name": "name",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Name of the task."
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 121,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 577,
									"name": "width",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Use to adjust the width of canvas."
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 127,
											"character": 7
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 581,
									"name": "onEnd",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 582,
											"name": "onEnd",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Function called on task end."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 579,
									"name": "onStart",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 580,
											"name": "onStart",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Function called on task start."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 583,
									"name": "onUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 584,
											"name": "onUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Function called on an animation update or event during the task."
											},
											"parameters": [
												{
													"id": 585,
													"name": "data",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 540,
														"name": "EventData"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										576,
										578,
										575,
										574,
										577
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										581,
										579,
										583
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 119,
									"character": 23
								}
							]
						}
					}
				},
				{
					"id": 564,
					"name": "VideoRecorderObject",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Reference object produced by {@link VideoRecoder}."
					},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 103,
							"character": 31
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 565,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 566,
									"name": "startRecording",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 567,
											"name": "startRecording",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Starts a video recording. Do not call this if another recording is already in progress\nor until after `VideoRecorder.onRecordingEnd`.",
												"returns": "A `Promise` that will produce an uninitialized {@link Video} populated with metadata during the recording.\n"
											},
											"parameters": [
												{
													"id": 568,
													"name": "name",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Name to assign to a {@link Video} that will be produced by this function."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 569,
													"name": "recordOptions",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "https://react-native-camera.github.io/react-native-camera/docs/rncamera#recordasync-options-promise"
													},
													"type": {
														"type": "reference",
														"name": "RecordOptions"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 163,
														"name": "default"
													}
												],
												"name": "Promise"
											}
										}
									]
								},
								{
									"id": 570,
									"name": "stopRecording",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 571,
											"name": "stopRecording",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Stops the video recording."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										566,
										570
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 103,
									"character": 33
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						519,
						522,
						504,
						539,
						540,
						560,
						528,
						556,
						549,
						547,
						548,
						572,
						564
					]
				}
			],
			"sources": [
				{
					"fileName": "types/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 586,
			"name": "utils",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 587,
					"name": "Constants",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Senseye constants."
					},
					"sources": [
						{
							"fileName": "utils/index.ts",
							"line": 86,
							"character": 15
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 588,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 590,
									"name": "API_BASE_PATH",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "''"
								},
								{
									"id": 589,
									"name": "API_HOST",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "'api.senseye.co'"
								},
								{
									"id": 622,
									"name": "CalibrationPatterns",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "array",
											"elementType": {
												"type": "reflection",
												"declaration": {
													"id": 623,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 624,
															"name": "x",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															},
															"defaultValue": "0.2"
														},
														{
															"id": 625,
															"name": "y",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															},
															"defaultValue": "0.25"
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																624,
																625
															]
														}
													]
												}
											}
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 604,
									"name": "FormData",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 605,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 610,
													"name": "EYE",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 611,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 613,
																	"name": "labels",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 612,
																	"name": "values",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		613,
																		612
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 614,
													"name": "FATIGUE",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 615,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 617,
																	"name": "labels",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 616,
																	"name": "values",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "number"
																		}
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		617,
																		616
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 606,
													"name": "GENDER",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 607,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 609,
																	"name": "labels",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 608,
																	"name": "values",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		609,
																		608
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 618,
													"name": "MERIDIEM",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 619,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 621,
																	"name": "labels",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 620,
																	"name": "values",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		621,
																		620
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														610,
														614,
														606,
														618
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 598,
									"name": "JobStatus",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 599,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 602,
													"name": "COMPLETED",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'completed'"
												},
												{
													"id": 603,
													"name": "FAILED",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'failed'"
												},
												{
													"id": 600,
													"name": "QUEUED",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'in_queue'"
												},
												{
													"id": 601,
													"name": "STARTED",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'in_progress'"
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														602,
														603,
														600,
														601
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 593,
									"name": "PredictedState",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 594,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 595,
													"name": "SAFE",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													},
													"defaultValue": "0"
												},
												{
													"id": 597,
													"name": "UNKNOWN",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													},
													"defaultValue": "-1"
												},
												{
													"id": 596,
													"name": "UNSAFE",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													},
													"defaultValue": "1"
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														595,
														597,
														596
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 591,
									"name": "SessionCondition",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 547,
												"name": "SessionCondition"
											}
										],
										"name": "Record"
									},
									"defaultValue": "..."
								},
								{
									"id": 592,
									"name": "SurveyType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 548,
												"name": "SurveyType"
											}
										],
										"name": "Record"
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										590,
										589,
										622,
										604,
										598,
										593,
										591,
										592
									]
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 634,
					"name": "validationSchema",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "utils/index.ts",
							"line": 123,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "AnySchema"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "default"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Lazy"
													}
												]
											}
										],
										"name": "Record"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 635,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 636,
													"name": "age",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Record"
															}
														],
														"name": "RequiredNumberSchema"
													},
													"defaultValue": "..."
												},
												{
													"id": 643,
													"name": "bedDate",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "reference",
																		"name": "Date"
																	}
																]
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Record"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "reference",
																		"name": "Date"
																	}
																]
															}
														],
														"name": "default"
													},
													"defaultValue": "..."
												},
												{
													"id": 641,
													"name": "bedHour",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Record"
															}
														],
														"name": "RequiredNumberSchema"
													},
													"defaultValue": "..."
												},
												{
													"id": 642,
													"name": "bedMin",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Record"
															}
														],
														"name": "RequiredNumberSchema"
													},
													"defaultValue": "..."
												},
												{
													"id": 638,
													"name": "eyeColor",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Record"
															}
														],
														"name": "RequiredStringSchema"
													},
													"defaultValue": "..."
												},
												{
													"id": 639,
													"name": "fatigueLevel",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Record"
															}
														],
														"name": "RequiredNumberSchema"
													},
													"defaultValue": "..."
												},
												{
													"id": 637,
													"name": "gender",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Record"
															}
														],
														"name": "RequiredStringSchema"
													},
													"defaultValue": "..."
												},
												{
													"id": 640,
													"name": "uniqueId",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Record"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "default"
													},
													"defaultValue": "..."
												},
												{
													"id": 646,
													"name": "wakeDate",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "reference",
																		"name": "Date"
																	}
																]
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Record"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "reference",
																		"name": "Date"
																	}
																]
															}
														],
														"name": "default"
													},
													"defaultValue": "..."
												},
												{
													"id": 644,
													"name": "wakeHour",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Record"
															}
														],
														"name": "RequiredNumberSchema"
													},
													"defaultValue": "..."
												},
												{
													"id": 645,
													"name": "wakeMin",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Record"
															}
														],
														"name": "RequiredNumberSchema"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														636,
														643,
														641,
														642,
														638,
														639,
														637,
														640,
														646,
														644,
														645
													]
												}
											]
										}
									}
								],
								"name": "Assign"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "AnySchema"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "default"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Lazy"
															}
														]
													}
												],
												"name": "Record"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 647,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 648,
															"name": "age",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			}
																		]
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "Record"
																	}
																],
																"name": "RequiredNumberSchema"
															},
															"defaultValue": "..."
														},
														{
															"id": 655,
															"name": "bedDate",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "reference",
																				"name": "Date"
																			}
																		]
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "Record"
																	},
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "reference",
																				"name": "Date"
																			}
																		]
																	}
																],
																"name": "default"
															},
															"defaultValue": "..."
														},
														{
															"id": 653,
															"name": "bedHour",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			}
																		]
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "Record"
																	}
																],
																"name": "RequiredNumberSchema"
															},
															"defaultValue": "..."
														},
														{
															"id": 654,
															"name": "bedMin",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			}
																		]
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "Record"
																	}
																],
																"name": "RequiredNumberSchema"
															},
															"defaultValue": "..."
														},
														{
															"id": 650,
															"name": "eyeColor",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "Record"
																	}
																],
																"name": "RequiredStringSchema"
															},
															"defaultValue": "..."
														},
														{
															"id": 651,
															"name": "fatigueLevel",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			}
																		]
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "Record"
																	}
																],
																"name": "RequiredNumberSchema"
															},
															"defaultValue": "..."
														},
														{
															"id": 649,
															"name": "gender",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "Record"
																	}
																],
																"name": "RequiredStringSchema"
															},
															"defaultValue": "..."
														},
														{
															"id": 652,
															"name": "uniqueId",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "Record"
																	},
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"name": "default"
															},
															"defaultValue": "..."
														},
														{
															"id": 658,
															"name": "wakeDate",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "reference",
																				"name": "Date"
																			}
																		]
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "Record"
																	},
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "reference",
																				"name": "Date"
																			}
																		]
																	}
																],
																"name": "default"
															},
															"defaultValue": "..."
														},
														{
															"id": 656,
															"name": "wakeHour",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			}
																		]
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "Record"
																	}
																],
																"name": "RequiredNumberSchema"
															},
															"defaultValue": "..."
														},
														{
															"id": 657,
															"name": "wakeMin",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			}
																		]
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "Record"
																	}
																],
																"name": "RequiredNumberSchema"
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																648,
																655,
																653,
																654,
																650,
																651,
																649,
																652,
																658,
																656,
																657
															]
														}
													]
												}
											}
										],
										"name": "Assign"
									}
								],
								"name": "TypeOfShape"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "AnySchema"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "default"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Lazy"
															}
														]
													}
												],
												"name": "Record"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 659,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 660,
															"name": "age",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			}
																		]
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "Record"
																	}
																],
																"name": "RequiredNumberSchema"
															},
															"defaultValue": "..."
														},
														{
															"id": 667,
															"name": "bedDate",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "reference",
																				"name": "Date"
																			}
																		]
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "Record"
																	},
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "reference",
																				"name": "Date"
																			}
																		]
																	}
																],
																"name": "default"
															},
															"defaultValue": "..."
														},
														{
															"id": 665,
															"name": "bedHour",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			}
																		]
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "Record"
																	}
																],
																"name": "RequiredNumberSchema"
															},
															"defaultValue": "..."
														},
														{
															"id": 666,
															"name": "bedMin",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			}
																		]
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "Record"
																	}
																],
																"name": "RequiredNumberSchema"
															},
															"defaultValue": "..."
														},
														{
															"id": 662,
															"name": "eyeColor",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "Record"
																	}
																],
																"name": "RequiredStringSchema"
															},
															"defaultValue": "..."
														},
														{
															"id": 663,
															"name": "fatigueLevel",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			}
																		]
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "Record"
																	}
																],
																"name": "RequiredNumberSchema"
															},
															"defaultValue": "..."
														},
														{
															"id": 661,
															"name": "gender",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "Record"
																	}
																],
																"name": "RequiredStringSchema"
															},
															"defaultValue": "..."
														},
														{
															"id": 664,
															"name": "uniqueId",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "Record"
																	},
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"name": "default"
															},
															"defaultValue": "..."
														},
														{
															"id": 670,
															"name": "wakeDate",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "reference",
																				"name": "Date"
																			}
																		]
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "Record"
																	},
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "reference",
																				"name": "Date"
																			}
																		]
																	}
																],
																"name": "default"
															},
															"defaultValue": "..."
														},
														{
															"id": 668,
															"name": "wakeHour",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			}
																		]
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "Record"
																	}
																],
																"name": "RequiredNumberSchema"
															},
															"defaultValue": "..."
														},
														{
															"id": 669,
															"name": "wakeMin",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			}
																		]
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "Record"
																	}
																],
																"name": "RequiredNumberSchema"
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																660,
																667,
																665,
																666,
																662,
																663,
																661,
																664,
																670,
																668,
																669
															]
														}
													]
												}
											}
										],
										"name": "Assign"
									}
								],
								"name": "AssertsShape"
							}
						],
						"name": "default"
					},
					"defaultValue": "..."
				},
				{
					"id": 626,
					"name": "getCurrentTimestamp",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "utils/index.ts",
							"line": 7,
							"character": 28
						}
					],
					"signatures": [
						{
							"id": 627,
							"name": "getCurrentTimestamp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"returns": "The number of milliseconds elapsed since January 1, 1970 00:00:00 UTC.\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 628,
					"name": "getMimeFromExtension",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "utils/index.ts",
							"line": 16,
							"character": 29
						}
					],
					"signatures": [
						{
							"id": 629,
							"name": "getMimeFromExtension",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"returns": "The corresponding MIME type. Defaults to `application/octet-stream`\n             if the extension is not recognized.\n"
							},
							"parameters": [
								{
									"id": 630,
									"name": "ext",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "File extension."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "video/x-msvideo"
									},
									{
										"type": "literal",
										"value": "video/x-matroska"
									},
									{
										"type": "literal",
										"value": "video/mp4"
									},
									{
										"type": "literal",
										"value": "video/quicktime"
									},
									{
										"type": "literal",
										"value": "application/json"
									},
									{
										"type": "literal",
										"value": "application/octet-stream"
									}
								]
							}
						}
					]
				},
				{
					"id": 631,
					"name": "isNonEmptyString",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "utils/index.ts",
							"line": 37,
							"character": 25
						}
					],
					"signatures": [
						{
							"id": 632,
							"name": "isNonEmptyString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"returns": "`true` if the value is a non-empty string. Otherwise, `false`.\n"
							},
							"parameters": [
								{
									"id": 633,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Value to check."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						587,
						634
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						626,
						628,
						631
					]
				}
			],
			"sources": [
				{
					"fileName": "utils/index.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"kind": 1,
			"children": [
				1,
				54,
				2,
				220,
				55,
				91,
				123,
				162,
				221,
				391,
				233,
				248,
				261,
				271,
				288,
				320,
				351,
				365,
				411,
				392,
				401,
				501,
				412,
				438,
				462,
				502,
				503,
				586
			]
		}
	]
}