{
	"id": 0,
	"name": "react-native-senseye-sdk",
	"kind": 0,
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 1,
			"name": "__tests__/index.test",
			"kind": 1,
			"kindString": "Module",
			"flags": {}
		},
		{
			"id": 54,
			"name": "api",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 375,
					"name": "Models",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 205
				},
				{
					"id": 374,
					"name": "SenseyeApiClient",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 3
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						375,
						374
					]
				}
			],
			"sources": [
				{
					"fileName": "api/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2,
			"name": "api/ApiClient",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3,
					"name": "default",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Client that interfaces with Senseye's REST API. Provides wrapper functions for\nstandard GET, DELETE, POST and PUT requests, as well as specific Senseye endpoints."
					},
					"children": [
						{
							"id": 4,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 5,
									"name": "new default",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 6,
											"name": "host",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Domain name or IP address of the API host. e.g. api.senseye.co[:80]"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 7,
											"name": "basePath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "URL path prefix that'll be appended to `host`."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 8,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Authentication token or API key.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3,
										"name": "default"
									}
								}
							]
						},
						{
							"id": 9,
							"name": "axios",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/ApiClient.ts",
									"line": 12,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "AxiosInstance"
							}
						},
						{
							"id": 48,
							"name": "cancelComputeTask",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/ApiClient.ts",
									"line": 114,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 49,
									"name": "cancelComputeTask",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Stops a running compute task.",
										"returns": "A `Promise` that will produce a `ComputeTaskResponse`.\n"
									},
									"parameters": [
										{
											"id": 50,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Task ID. Can be obtained from `ComputeTaskResponse.id`."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 277,
														"name": "ComputeTaskResponse"
													}
												],
												"name": "AxiosResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 19,
							"name": "delete",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/ApiClient.ts",
									"line": 50,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 20,
									"name": "delete",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 21,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"parameters": [
										{
											"id": 22,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 23,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "AxiosRequestConfig"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "AxiosResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 14,
							"name": "get",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/ApiClient.ts",
									"line": 47,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 15,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 16,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"parameters": [
										{
											"id": 17,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 18,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "AxiosRequestConfig"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "AxiosResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 51,
							"name": "getComputeResult",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/ApiClient.ts",
									"line": 125,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 52,
									"name": "getComputeResult",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetches the results of a compute task. Note this may timeout if the task\nhasn't successfully completed yet. See {SenseyeApiClient.getComputeTask}.",
										"returns": "A `Promise` that will produce a `ComputeResultResponse`.\n"
									},
									"parameters": [
										{
											"id": 53,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Task ID. Can be obtained from `ComputeTaskResponse.id`."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 270,
														"name": "ComputeResultResponse"
													}
												],
												"name": "AxiosResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 45,
							"name": "getComputeTask",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/ApiClient.ts",
									"line": 104,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 46,
									"name": "getComputeTask",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetches the latest status of a compute task. Use this to poll for `SUCCESS`\nbefore calling {@link SenseyeApiClient.getComputeResult}.",
										"returns": "A `Promise` that will produce a `ComputeTaskResponse`, containing\n             the task's most recent status.\n"
									},
									"parameters": [
										{
											"id": 47,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Task ID. Can be obtained from `ComputeTaskResponse.id`."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 277,
														"name": "ComputeTaskResponse"
													}
												],
												"name": "AxiosResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 24,
							"name": "post",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/ApiClient.ts",
									"line": 53,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 25,
									"name": "post",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 26,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"parameters": [
										{
											"id": 27,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 28,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 29,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "AxiosRequestConfig"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "AxiosResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 39,
							"name": "predictBAC",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/ApiClient.ts",
									"line": 78,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 40,
									"name": "predictBAC",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Initiates a compute task to predict intoxication probability of the participant in a given video.",
										"returns": "A `Promise` that will produce a `ComputeTaskResponse`.\n"
									},
									"parameters": [
										{
											"id": 41,
											"name": "uri",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "URI to a video containing a participant."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 277,
														"name": "ComputeTaskResponse"
													}
												],
												"name": "AxiosResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 42,
							"name": "predictCognitiveLoad",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/ApiClient.ts",
									"line": 90,
									"character": 29
								}
							],
							"signatures": [
								{
									"id": 43,
									"name": "predictCognitiveLoad",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Initiates a compute task to predict cognitive load probability of the participant in a given video.",
										"returns": "A `Promise` that will produce a `ComputeTaskResponse`.\n"
									},
									"parameters": [
										{
											"id": 44,
											"name": "uri",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "URI to a video containing a participant."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 277,
														"name": "ComputeTaskResponse"
													}
												],
												"name": "AxiosResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 36,
							"name": "predictFatigue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/ApiClient.ts",
									"line": 66,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 37,
									"name": "predictFatigue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Initiates a compute task to predict fatigue probability of the participant in a given video.",
										"returns": "A `Promise` that will produce a `ComputeTaskResponse`.\n"
									},
									"parameters": [
										{
											"id": 38,
											"name": "uri",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "URI to a video containing a participant."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 277,
														"name": "ComputeTaskResponse"
													}
												],
												"name": "AxiosResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 30,
							"name": "put",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/ApiClient.ts",
									"line": 56,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 31,
									"name": "put",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 32,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"parameters": [
										{
											"id": 33,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 34,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 35,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "AxiosRequestConfig"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "AxiosResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 10,
							"name": "request",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/ApiClient.ts",
									"line": 35,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 11,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 12,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"parameters": [
										{
											"id": 13,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AxiosRequestConfig"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "AxiosResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								9
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								48,
								19,
								14,
								51,
								45,
								24,
								39,
								42,
								36,
								30,
								10
							]
						}
					],
					"sources": [
						{
							"fileName": "api/ApiClient.ts",
							"line": 11,
							"character": 37
						},
						{
							"fileName": "api/index.ts",
							"line": 4,
							"character": 25
						},
						{
							"fileName": "api/index.ts",
							"line": 4,
							"character": 25
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3
					]
				}
			],
			"sources": [
				{
					"fileName": "api/ApiClient.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 205,
			"name": "api/models",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 376,
					"name": "Session",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 57
				},
				{
					"id": 377,
					"name": "Survey",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 105
				},
				{
					"id": 378,
					"name": "Video",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 149
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						376,
						377,
						378
					]
				}
			],
			"sources": [
				{
					"fileName": "api/models/index.ts",
					"line": 1,
					"character": 0
				},
				{
					"fileName": "api/index.ts",
					"line": 4,
					"character": 33
				},
				{
					"fileName": "api/index.ts",
					"line": 4,
					"character": 33
				}
			]
		},
		{
			"id": 55,
			"name": "api/models/Session",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 57,
					"name": "default",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Class that models a session, facilitating the gathering and association of event\nand video data generated during a participant's interaction with on-screen\nstimuli, i.e. experiment or series of experiments."
					},
					"children": [
						{
							"id": 58,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 59,
									"name": "new default",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 60,
											"name": "bufferLimit",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The max number of {@link ExperimentData} that can be held\n                       within any one group by the buffer. If the limit is reached,\n                       a data flush will be automatically triggered ({@link Session.flushData}).\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1000"
										}
									],
									"type": {
										"type": "reference",
										"id": 57,
										"name": "default"
									}
								}
							]
						},
						{
							"id": 61,
							"name": "apiClient",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "api/models/Session.ts",
									"line": 36,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 3,
										"name": "default"
									}
								]
							}
						},
						{
							"id": 72,
							"name": "bufferLimit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "api/models/Session.ts",
									"line": 41,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 71,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "api/models/Session.ts",
									"line": 40,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"id": 303,
								"name": "SessionData"
							}
						},
						{
							"id": 62,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "api/models/Session.ts",
									"line": 37,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 63,
							"name": "metadata",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "api/models/Session.ts",
									"line": 38,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 64,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 65,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 66,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							}
						},
						{
							"id": 67,
							"name": "user",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "api/models/Session.ts",
									"line": 39,
									"character": 14
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 68,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 69,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 70,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							}
						},
						{
							"id": 73,
							"name": "videos",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "api/models/Session.ts",
									"line": 42,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 149,
									"name": "default"
								}
							}
						},
						{
							"id": 87,
							"name": "addExperimentData",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Session.ts",
									"line": 212,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 88,
									"name": "addExperimentData",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Adds experiment data into a buffer and groups them according to the specified key.\nIf any grouping reaches the {@link Session.bufferLimit}, a data flush will\nbe automatically triggered ({@link Session.flushData}))."
									},
									"parameters": [
										{
											"id": 89,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "This should ideally be the name of the experiment the data originated from."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 90,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Data generated during an experiment.\n"
											},
											"type": {
												"type": "reference",
												"id": 296,
												"name": "ExperimentData"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 91,
							"name": "flushData",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Session.ts",
									"line": 224,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 92,
									"name": "flushData",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Uploads all accumulated data and flushes them from memory.",
										"returns": "A `Promise` that will produce a boolean specifying whether the operaton succeeded.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 101,
							"name": "getId",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Session.ts",
									"line": 303,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 102,
									"name": "getId",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "`Session.id`, or `undefined` if the instance hasn't been successfully\n           initialized yet ({@link Session.init}).\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							]
						},
						{
							"id": 99,
							"name": "getVideos",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Session.ts",
									"line": 295,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 100,
									"name": "getVideos",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "An array of {@link Video} tracked by the session.\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 149,
											"name": "default"
										}
									}
								}
							]
						},
						{
							"id": 74,
							"name": "init",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Session.ts",
									"line": 71,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 75,
									"name": "init",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a session model with the specified parameters. Note this should only be\ndone once per instance. Ensure initialization is successful before executing\ncertain functions within this class, otherwise errors may be encountered.",
										"returns": "A `Promise` that will produce the created session's metadata.\n"
									},
									"parameters": [
										{
											"id": 76,
											"name": "apiClient",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Client configured to communicate with Senseye's API."
											},
											"type": {
												"type": "reference",
												"id": 3,
												"name": "default"
											}
										},
										{
											"id": 77,
											"name": "userId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Custom username or ID of the participant. Must be unique to the\n                     participant within the context of the API token/key of the client."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 78,
											"name": "surveyId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "ID of a {@link Survey} to associate to the session. Will ideally be\n                     the `demographic` survey pertaining to the partcipant."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 79,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 80,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 81,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 93,
							"name": "pushSurvey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Session.ts",
									"line": 256,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 94,
									"name": "pushSurvey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Initializes the provided survey ({@link Survey.init}), if not done so already,\nand associates it with the session."
									},
									"parameters": [
										{
											"id": 95,
											"name": "survey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Instance of a {@link Survey}.\n"
											},
											"type": {
												"type": "reference",
												"id": 105,
												"name": "default"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 96,
							"name": "pushVideo",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Session.ts",
									"line": 283,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 97,
									"name": "pushVideo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Initializes the provided video ({@link Video.init}), which associates it with the session."
									},
									"parameters": [
										{
											"id": 98,
											"name": "video",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Instance of an uninitialized {@link Video}.\n"
											},
											"type": {
												"type": "reference",
												"id": 149,
												"name": "default"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 82,
							"name": "start",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Session.ts",
									"line": 166,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 83,
									"name": "start",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Starts the current session. Note a session cannot be started again once it\nis started or stopped. If necessary, a new `Session` must be created."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 84,
							"name": "stop",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Session.ts",
									"line": 184,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 85,
									"name": "stop",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Stops the current session and flushes all accumulated/remaining data."
									},
									"parameters": [
										{
											"id": 86,
											"name": "condition",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A condition describing the session upon stopping.\n                     See Constants.Condition for valid values.\n"
											},
											"type": {
												"type": "reference",
												"id": 307,
												"name": "SessionConditionType"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								58
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								61,
								72,
								71,
								62,
								63,
								67,
								73
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								87,
								91,
								101,
								99,
								74,
								93,
								96,
								82,
								84
							]
						}
					],
					"sources": [
						{
							"fileName": "api/models/Session.ts",
							"line": 35,
							"character": 28
						},
						{
							"fileName": "api/models/index.ts",
							"line": 5,
							"character": 16
						}
					]
				},
				{
					"id": 56,
					"name": "Conditions",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Valid session conditions."
					},
					"sources": [
						{
							"fileName": "api/models/Session.ts",
							"line": 22,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"id": 307,
								"name": "SessionConditionType"
							}
						],
						"name": "Record"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						57
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						56
					]
				}
			],
			"sources": [
				{
					"fileName": "api/models/Session.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 103,
			"name": "api/models/Survey",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 105,
					"name": "default",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Class that models a survey, facilitating the collection of a participant's responses\nto survey questions."
					},
					"children": [
						{
							"id": 106,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 107,
									"name": "new default",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 108,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Survey type, e.g. `demographic`, `validation`."
											},
											"type": {
												"type": "reference",
												"id": 308,
												"name": "SurveyType"
											}
										},
										{
											"id": 109,
											"name": "entryMap",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Map of keys to a tuple containing the corresponding question and response.\n                     e.g. { 'eye_color': ['What color are you eyes?', 'Brown'] }"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 110,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 111,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 112,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "tuple",
															"elements": [
																{
																	"type": "reference",
																	"id": 295,
																	"name": "Datum"
																},
																{
																	"type": "reference",
																	"id": 295,
																	"name": "Datum"
																}
															]
														}
													}
												}
											}
										},
										{
											"id": 113,
											"name": "info",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Any extra information or metadata.\n"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 114,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 115,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 116,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"id": 105,
										"name": "default"
									}
								}
							]
						},
						{
							"id": 117,
							"name": "apiClient",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "api/models/Survey.ts",
									"line": 15,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 3,
										"name": "default"
									}
								]
							}
						},
						{
							"id": 118,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "api/models/Survey.ts",
									"line": 16,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 119,
							"name": "metadata",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "api/models/Survey.ts",
									"line": 17,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 120,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 121,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 122,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							}
						},
						{
							"id": 129,
							"name": "addEntry",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Survey.ts",
									"line": 85,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 130,
									"name": "addEntry",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Adds an entry for a question and its corresponding response. If `key` already\nexists, the previous entry values will be overwritten."
									},
									"parameters": [
										{
											"id": 131,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Key used to associate `question` and `response`."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 132,
											"name": "question",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Question or prompt value."
											},
											"type": {
												"type": "reference",
												"id": 295,
												"name": "Datum"
											}
										},
										{
											"id": 133,
											"name": "response",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Response value to `question`.\n"
											},
											"type": {
												"type": "reference",
												"id": 295,
												"name": "Datum"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 146,
							"name": "getEntries",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Survey.ts",
									"line": 133,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 147,
									"name": "getEntries",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "A tuple containing question and response entries, respectively.\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							]
						},
						{
							"id": 142,
							"name": "getId",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Survey.ts",
									"line": 119,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 143,
									"name": "getId",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "The survey's ID, or `undefined` if the instance hasn't been successfully\n           initialized yet ({@link Survey.init}).\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							]
						},
						{
							"id": 144,
							"name": "getType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Survey.ts",
									"line": 126,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 145,
									"name": "getType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "The survey's type.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 123,
							"name": "init",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Survey.ts",
									"line": 57,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 124,
									"name": "init",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Initializes a survey model through Senseye's API. Note this should only be\ndone once per instance. Ensure initialization is successful before executing\ncertain functions within this class, otherwise errors may be encountered.",
										"returns": "A `Promise` that will produce the created survey's metadata.\n"
									},
									"parameters": [
										{
											"id": 125,
											"name": "apiClient",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Client configured to communicate with Senseye's API."
											},
											"type": {
												"type": "reference",
												"id": 3,
												"name": "default"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 126,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 127,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 128,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 140,
							"name": "pushUpdates",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Survey.ts",
									"line": 104,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 141,
									"name": "pushUpdates",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Pushes the survey's most recent metadata values to Senseye's API.",
										"returns": "A `Promise` that will produce an `AxiosResponse`.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 255,
														"name": "DataResponse"
													}
												],
												"name": "AxiosResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 134,
							"name": "updateInfo",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Survey.ts",
									"line": 95,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 135,
									"name": "updateInfo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Updates the survey's `info` metadata."
									},
									"parameters": [
										{
											"id": 136,
											"name": "info",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Metadata to be merged on top of any previous `info` metadata.\n"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 137,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 138,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 139,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								106
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								117,
								118,
								119
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								129,
								146,
								142,
								144,
								123,
								140,
								134
							]
						}
					],
					"sources": [
						{
							"fileName": "api/models/Survey.ts",
							"line": 14,
							"character": 27
						},
						{
							"fileName": "api/models/index.ts",
							"line": 5,
							"character": 24
						}
					]
				},
				{
					"id": 104,
					"name": "Types",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Valid survey types."
					},
					"sources": [
						{
							"fileName": "api/models/Survey.ts",
							"line": 5,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"id": 308,
								"name": "SurveyType"
							}
						],
						"name": "Record"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						105
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						104
					]
				}
			],
			"sources": [
				{
					"fileName": "api/models/Survey.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 148,
			"name": "api/models/Video",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 149,
					"name": "default",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Class that models a session video, facilitating the logging of pertinent\nmetadata and provides the ability to upload recorded video."
					},
					"children": [
						{
							"id": 150,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 151,
									"name": "new default",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 152,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the video. Must be unique within the context of `sessionId`."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 153,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Camera and/or recording configurations."
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 154,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 155,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 156,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 157,
											"name": "info",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Any extra information or metadata."
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 158,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 159,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 160,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 161,
											"name": "uri",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Video file URI. (Android) Ensure it is prefixed with `file://`.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "''"
										}
									],
									"type": {
										"type": "reference",
										"id": 149,
										"name": "default"
									}
								}
							]
						},
						{
							"id": 162,
							"name": "apiClient",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 13,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 3,
										"name": "default"
									}
								]
							}
						},
						{
							"id": 163,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 14,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 164,
							"name": "metadata",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 15,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 165,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 166,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 167,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							}
						},
						{
							"id": 169,
							"name": "uploadProgress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 17,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 168,
							"name": "uri",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 16,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 201,
							"name": "getId",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 189,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 202,
									"name": "getId",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "The video's ID, or `undefined` if the instance hasn't been successfully\n           initialized yet ({@link Video.init}).\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							]
						},
						{
							"id": 203,
							"name": "getName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 196,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 204,
									"name": "getName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "The video's name.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 199,
							"name": "getUploadProgress",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 181,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 200,
									"name": "getUploadProgress",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Use this to track upload progress after calling {@link Video.uploadFile}.",
										"returns": "The upload percentage as a number from 0 to 100, and -1 if\n           `uploadFile()` has not been executed yet.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						},
						{
							"id": 170,
							"name": "init",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 51,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 171,
									"name": "init",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Initializes a video model through Senseye's API. Note this should only be\ndone once per instance. Ensure initialization is successful before executing\ncertain functions within this class, otherwise errors may be encountered.",
										"returns": "A `Promise` that will produce the created video's metadata.\n"
									},
									"parameters": [
										{
											"id": 172,
											"name": "apiClient",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Client configured to communicate with Senseye's API."
											},
											"type": {
												"type": "reference",
												"id": 3,
												"name": "default"
											}
										},
										{
											"id": 173,
											"name": "sessionId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ID of a {@link Session} to associate with."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 174,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 175,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 176,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 189,
							"name": "pushUpdates",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 112,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 190,
									"name": "pushUpdates",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Pushes the video's most recent metadata values to Senseye's API.",
										"returns": "A `Promise` that will produce an `AxiosResponse`.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 255,
														"name": "DataResponse"
													}
												],
												"name": "AxiosResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 177,
							"name": "recordStartTime",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 80,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 178,
									"name": "recordStartTime",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Records the video's start timestamp."
									},
									"parameters": [
										{
											"id": 179,
											"name": "timestamp",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Start time of the video's recording. Should be in UTC seconds.\n                     If left unspecified, current UTC will be used.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 180,
							"name": "recordStopTime",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 92,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 181,
									"name": "recordStopTime",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Records the video's stop timestamp."
									},
									"parameters": [
										{
											"id": 182,
											"name": "timestamp",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Stop time of the video's recording. Should be in UTC seconds.\n                     If left unspecified, current UTC will be used.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 191,
							"name": "setUri",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 128,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 192,
									"name": "setUri",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the URI to a local file."
									},
									"parameters": [
										{
											"id": 193,
											"name": "uri",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Video file URI. (Android) Ensure it is prefixed with `file://`.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 183,
							"name": "updateInfo",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 103,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 184,
									"name": "updateInfo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Updates the video's `info` metadata."
									},
									"parameters": [
										{
											"id": 185,
											"name": "info",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Metadata to be merged on top of any previous `info` metadata.\n"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 186,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 187,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 188,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 194,
							"name": "uploadFile",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 141,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 195,
									"name": "uploadFile",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Uploads a file and associates it with the video model.",
										"returns": "A `Promise` that will produce the video's updated metadata.\n"
									},
									"parameters": [
										{
											"id": 196,
											"name": "uri",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Video file URI. (Android) Ensure it is prefixed with `file://`.\n                     Defaults to `Video.uri` ({@link Video.setUri})."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 197,
											"name": "codec",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Specifies the codec of the video file."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'mp4'"
										},
										{
											"id": 198,
											"name": "overwrite",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Specifies whether to overwrite a previously uploaded file."
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "false"
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								150
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								162,
								163,
								164,
								169,
								168
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								201,
								203,
								199,
								170,
								189,
								177,
								180,
								191,
								183,
								194
							]
						}
					],
					"sources": [
						{
							"fileName": "api/models/Video.ts",
							"line": 12,
							"character": 26
						},
						{
							"fileName": "api/models/index.ts",
							"line": 5,
							"character": 31
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						149
					]
				}
			],
			"sources": [
				{
					"fileName": "api/models/Video.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 242,
			"name": "components",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 382,
					"name": "ExperimentRunner",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 207
				},
				{
					"id": 387,
					"name": "Experiments",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 241
				},
				{
					"id": 384,
					"name": "SenseyeButton",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 211
				},
				{
					"id": 385,
					"name": "SenseyePicker",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 215
				},
				{
					"id": 386,
					"name": "SenseyeTextInput",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 220
				},
				{
					"id": 388,
					"name": "Surveys",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 251
				},
				{
					"id": 383,
					"name": "VideoRecorder",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 225
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						382,
						387,
						384,
						385,
						386,
						388,
						383
					]
				}
			],
			"sources": [
				{
					"fileName": "components/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 206,
			"name": "components/ExperimentRunner",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 207,
					"name": "default",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "components/ExperimentRunner.tsx",
							"line": 18,
							"character": 40
						},
						{
							"fileName": "components/index.ts",
							"line": 10,
							"character": 18
						},
						{
							"fileName": "components/index.ts",
							"line": 10,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 208,
							"name": "default",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 209,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ExperimentRunnerProps"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						207
					]
				}
			],
			"sources": [
				{
					"fileName": "components/ExperimentRunner.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 210,
			"name": "components/SenseyeButton",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 211,
					"name": "default",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "components/SenseyeButton.tsx",
							"line": 10,
							"character": 37
						},
						{
							"fileName": "components/index.ts",
							"line": 12,
							"character": 15
						},
						{
							"fileName": "components/index.ts",
							"line": 12,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 212,
							"name": "default",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 213,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "SenseyeButtonProps"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						211
					]
				}
			],
			"sources": [
				{
					"fileName": "components/SenseyeButton.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 214,
			"name": "components/SenseyePicker",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 218,
					"name": "default",
					"kind": 2,
					"kindString": "Namespace",
					"flags": {}
				},
				{
					"id": 215,
					"name": "default",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "components/SenseyePicker.tsx",
							"line": 17,
							"character": 37
						},
						{
							"fileName": "components/index.ts",
							"line": 13,
							"character": 15
						},
						{
							"fileName": "components/index.ts",
							"line": 13,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 216,
							"name": "default",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 217,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "SenseyePickerProps"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"kind": 2,
					"children": [
						218
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						215
					]
				}
			],
			"sources": [
				{
					"fileName": "components/SenseyePicker.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 219,
			"name": "components/SenseyeTextInput",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 223,
					"name": "default",
					"kind": 2,
					"kindString": "Namespace",
					"flags": {}
				},
				{
					"id": 220,
					"name": "default",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "components/SenseyeTextInput.tsx",
							"line": 15,
							"character": 40
						},
						{
							"fileName": "components/index.ts",
							"line": 14,
							"character": 18
						},
						{
							"fileName": "components/index.ts",
							"line": 14,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 221,
							"name": "default",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 222,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "SenseyeTextInputProps"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"kind": 2,
					"children": [
						223
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						220
					]
				}
			],
			"sources": [
				{
					"fileName": "components/SenseyeTextInput.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 224,
			"name": "components/VideoRecorder",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 225,
					"name": "default",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Component that uses RNCamera to record videos. Since this mainly acts as a wrapper\naround RNCamera, more information regarding some of its properties may be found here:\nhttps://react-native-camera.github.io/react-native-camera/docs/rncamera#properties.",
						"text": "Passing in a `ref` callback will provide a reference to this component with\nthe following functions: `startRecording()` and `stopRecording()`, which calls\n`RNCamera.recordAsync(props.recordOptions)` and `RNCamera.stopRecording()`, respectively.\n"
					},
					"sources": [
						{
							"fileName": "components/VideoRecorder.tsx",
							"line": 74,
							"character": 19
						},
						{
							"fileName": "components/index.ts",
							"line": 11,
							"character": 15
						},
						{
							"fileName": "components/index.ts",
							"line": 11,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "VideoRecorderProps"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "RefAttributes"
									}
								]
							}
						],
						"name": "ForwardRefExoticComponent"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						225
					]
				}
			],
			"sources": [
				{
					"fileName": "components/VideoRecorder.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 241,
			"name": "components/experiments",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 379,
					"name": "Calibration",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 227
				},
				{
					"id": 380,
					"name": "Nystagmus",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 232
				},
				{
					"id": 381,
					"name": "Plr",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 237
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						379,
						380,
						381
					]
				}
			],
			"sources": [
				{
					"fileName": "components/experiments/index.ts",
					"line": 1,
					"character": 0
				},
				{
					"fileName": "components/index.ts",
					"line": 15,
					"character": 13
				},
				{
					"fileName": "components/index.ts",
					"line": 15,
					"character": 13
				}
			]
		},
		{
			"id": 226,
			"name": "components/experiments/Calibration",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 230,
					"name": "default",
					"kind": 2,
					"kindString": "Namespace",
					"flags": {}
				},
				{
					"id": 227,
					"name": "default",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "components/experiments/Calibration.tsx",
							"line": 28,
							"character": 35
						},
						{
							"fileName": "components/experiments/index.ts",
							"line": 5,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 228,
							"name": "default",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "This experiment is used to calibrate the gaze tracking system to provide accurate\ngaze information used to assess behavior in the other tasks."
							},
							"parameters": [
								{
									"id": 229,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "CalibrationProps"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"kind": 2,
					"children": [
						230
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						227
					]
				}
			],
			"sources": [
				{
					"fileName": "components/experiments/Calibration.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 231,
			"name": "components/experiments/Nystagmus",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 235,
					"name": "default",
					"kind": 2,
					"kindString": "Namespace",
					"flags": {}
				},
				{
					"id": 232,
					"name": "default",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "components/experiments/Nystagmus.tsx",
							"line": 24,
							"character": 33
						},
						{
							"fileName": "components/experiments/index.ts",
							"line": 5,
							"character": 31
						}
					],
					"signatures": [
						{
							"id": 233,
							"name": "default",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 234,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NystagmusProps"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"kind": 2,
					"children": [
						235
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						232
					]
				}
			],
			"sources": [
				{
					"fileName": "components/experiments/Nystagmus.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 236,
			"name": "components/experiments/Plr",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 240,
					"name": "default",
					"kind": 2,
					"kindString": "Namespace",
					"flags": {}
				},
				{
					"id": 237,
					"name": "default",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "components/experiments/Plr.tsx",
							"line": 25,
							"character": 27
						},
						{
							"fileName": "components/experiments/index.ts",
							"line": 5,
							"character": 36
						}
					],
					"signatures": [
						{
							"id": 238,
							"name": "default",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Measures pupillary light reflex by manipulating the luminance of the screen"
							},
							"parameters": [
								{
									"id": 239,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "PlrProps"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"kind": 2,
					"children": [
						240
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						237
					]
				}
			],
			"sources": [
				{
					"fileName": "components/experiments/Plr.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 251,
			"name": "components/surveys",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 389,
					"name": "Demographic",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 244
				},
				{
					"id": 390,
					"name": "Validation",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 248
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						389,
						390
					]
				}
			],
			"sources": [
				{
					"fileName": "components/surveys/index.ts",
					"line": 1,
					"character": 0
				},
				{
					"fileName": "components/index.ts",
					"line": 16,
					"character": 9
				},
				{
					"fileName": "components/index.ts",
					"line": 16,
					"character": 9
				}
			]
		},
		{
			"id": 243,
			"name": "components/surveys/Demographic",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 244,
					"name": "default",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "components/surveys/Demographic.tsx",
							"line": 22,
							"character": 41
						},
						{
							"fileName": "components/surveys/index.ts",
							"line": 4,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 245,
							"name": "default",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 246,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "DemographicSurveyProps"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						244
					]
				}
			],
			"sources": [
				{
					"fileName": "components/surveys/Demographic.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 247,
			"name": "components/surveys/Validation",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 248,
					"name": "default",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "components/surveys/Validation.tsx",
							"line": 26,
							"character": 40
						},
						{
							"fileName": "components/surveys/index.ts",
							"line": 4,
							"character": 32
						}
					],
					"signatures": [
						{
							"id": 249,
							"name": "default",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 250,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ValidationSurveyProps"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						248
					]
				}
			],
			"sources": [
				{
					"fileName": "components/surveys/Validation.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 252,
			"name": "index",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 393,
					"name": "ExperimentRunner",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 207
				},
				{
					"id": 398,
					"name": "Experiments",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 241
				},
				{
					"id": 392,
					"name": "Models",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 205
				},
				{
					"id": 391,
					"name": "SenseyeApiClient",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 3
				},
				{
					"id": 395,
					"name": "SenseyeButton",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 211
				},
				{
					"id": 396,
					"name": "SenseyePicker",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 215
				},
				{
					"id": 397,
					"name": "SenseyeTextInput",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 220
				},
				{
					"id": 399,
					"name": "Surveys",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 251
				},
				{
					"id": 394,
					"name": "VideoRecorder",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 225
				},
				{
					"id": 426,
					"name": "ComputeResult",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 50,
							"character": 25
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 427,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 428,
									"name": "eye_features",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 51,
											"character": 14
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 429,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "types/index.ts",
													"line": 51,
													"character": 15
												}
											],
											"indexSignature": {
												"id": 430,
												"name": "__index",
												"kind": 8192,
												"kindString": "Index signature",
												"flags": {},
												"parameters": [
													{
														"id": 431,
														"name": "key",
														"kind": 32768,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										}
									}
								},
								{
									"id": 432,
									"name": "prediction",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 52,
											"character": 12
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 433,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 435,
													"name": "bac_prediction",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "[0-1] Value closer to 1 indicate higher probability the participant is drunk."
													},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 56,
															"character": 18
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 436,
													"name": "cog_load_prediction",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "[0-1] Value closer to 1 indicate higher probability of high cognitive load."
													},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 58,
															"character": 23
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 434,
													"name": "fatigue_prediction",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "[0-1] Value closer to 1 indicate higher probability of fatigue."
													},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 54,
															"character": 22
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 437,
													"name": "predicted_state",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Final predicted state of subject in analyzed video.\nPossible values: `Ready` | `Not Ready: Fatigued` | `Not Ready: Drunk`"
													},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 63,
															"character": 19
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														435,
														436,
														434,
														437
													]
												}
											],
											"sources": [
												{
													"fileName": "types/index.ts",
													"line": 52,
													"character": 13
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										428,
										432
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 50,
									"character": 27
								}
							]
						}
					}
				},
				{
					"id": 415,
					"name": "ComputeResultResponse",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Response body from Senseye Compute API endpoints that return a computed result,\ne.g. `/GetVideoResult`.\nWill contain either `results` or `error` depending on success."
					},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 27,
							"character": 33
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 416,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 418,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 30,
											"character": 7
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 419,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 420,
													"name": "code",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 31,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 421,
													"name": "message",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 32,
															"character": 11
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														420,
														421
													]
												}
											],
											"sources": [
												{
													"fileName": "types/index.ts",
													"line": 30,
													"character": 9
												}
											]
										}
									}
								},
								{
									"id": 417,
									"name": "results",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "An array of results, though may typically contain only one entry."
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 29,
											"character": 9
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 281,
											"name": "ComputeResult"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										418,
										417
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 27,
									"character": 35
								}
							]
						}
					}
				},
				{
					"id": 422,
					"name": "ComputeTaskResponse",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Response body from Senseye Compute API endpoints that create or monitor tasks,\ne.g. `/PredictFatigue`, `/GetVideoTask`"
					},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 40,
							"character": 31
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 423,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 424,
									"name": "id",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "ID of the task."
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 42,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 425,
									"name": "status",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Current state of the task.\nPossible values: `PENDING` | `RECEIVED` | `STARTED` | `SUCCESS` | `FAILURE` | `REVOKED` | `RETRY`"
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 47,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										424,
										425
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 40,
									"character": 33
								}
							]
						}
					}
				},
				{
					"id": 400,
					"name": "DataResponse",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Response body from Senseye Data API endpoints (`/data/*`).\nWill contain either `data` or `error` depending on success. Note `data` may also\nnot be present for PUT requests."
					},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 6,
							"character": 24
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 401,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 402,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "On success, will contain the requested response data."
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 8,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 403,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "types/index.ts",
													"line": 8,
													"character": 8
												}
											],
											"indexSignature": {
												"id": 404,
												"name": "__index",
												"kind": 8192,
												"kindString": "Index signature",
												"flags": {},
												"parameters": [
													{
														"id": 405,
														"name": "key",
														"kind": 32768,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									}
								},
								{
									"id": 406,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "On error, will contain information regarding the error."
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 10,
											"character": 7
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 407,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 408,
													"name": "code",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 11,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 409,
													"name": "description",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 12,
															"character": 15
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 410,
													"name": "message",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 13,
															"character": 11
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 411,
													"name": "root",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Propagated information of the root error."
													},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 15,
															"character": 8
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 412,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 414,
																	"name": "description",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "types/index.ts",
																			"line": 17,
																			"character": 17
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 413,
																	"name": "type",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "types/index.ts",
																			"line": 16,
																			"character": 10
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		414,
																		413
																	]
																}
															],
															"sources": [
																{
																	"fileName": "types/index.ts",
																	"line": 15,
																	"character": 10
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														408,
														409,
														410,
														411
													]
												}
											],
											"sources": [
												{
													"fileName": "types/index.ts",
													"line": 10,
													"character": 9
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										402,
										406
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 6,
									"character": 26
								}
							]
						}
					}
				},
				{
					"id": 440,
					"name": "Datum",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 81,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 441,
					"name": "ExperimentData",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 83,
							"character": 26
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 442,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 444,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 85,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 445,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "types/index.ts",
													"line": 85,
													"character": 7
												}
											],
											"indexSignature": {
												"id": 446,
												"name": "__index",
												"kind": 8192,
												"kindString": "Index signature",
												"flags": {},
												"parameters": [
													{
														"id": 447,
														"name": "key",
														"kind": 32768,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									}
								},
								{
									"id": 443,
									"name": "timestamp",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 84,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										444,
										443
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 83,
									"character": 28
								}
							]
						}
					}
				},
				{
					"id": 469,
					"name": "ExperimentProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 119,
							"character": 27
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 470,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 472,
									"name": "background",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Background color of experiment."
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 123,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 474,
									"name": "height",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Use to adjust the height of canvas."
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 127,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 471,
									"name": "instructions",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Instructions to follow during the experiment."
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 121,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 473,
									"name": "width",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Use to adjust the width of canvas."
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 125,
											"character": 7
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 476,
									"name": "onEnd",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									}
								},
								{
									"id": 475,
									"name": "onStart",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									}
								},
								{
									"id": 477,
									"name": "onUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										472,
										474,
										471,
										473
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										476,
										475,
										477
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 119,
									"character": 29
								}
							]
						}
					}
				},
				{
					"id": 465,
					"name": "Point",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 114,
							"character": 17
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 466,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 467,
									"name": "x",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 115,
											"character": 3
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 468,
									"name": "y",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 116,
											"character": 3
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										467,
										468
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 114,
									"character": 19
								}
							]
						}
					}
				},
				{
					"id": 438,
					"name": "PredictedState",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 67,
							"character": 26
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "Ready"
							},
							{
								"type": "literal",
								"value": "Not Ready: Fatigued"
							},
							{
								"type": "literal",
								"value": "Not Ready: Drunk"
							}
						]
					}
				},
				{
					"id": 461,
					"name": "RecorderStatusChangeEvent",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 106,
							"character": 37
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 462,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 463,
									"name": "cameraStatus",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 107,
											"character": 14
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "READY"
											},
											{
												"type": "literal",
												"value": "PENDING_AUTHORIZATION"
											},
											{
												"type": "literal",
												"value": "NOT_AUTHORIZED"
											}
										]
									}
								},
								{
									"id": 464,
									"name": "recordAudioPermissionStatus",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 108,
											"character": 29
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "AUTHORIZED"
											},
											{
												"type": "literal",
												"value": "PENDING_AUTHORIZATION"
											},
											{
												"type": "literal",
												"value": "NOT_AUTHORIZED"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										463,
										464
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 106,
									"character": 39
								}
							]
						}
					}
				},
				{
					"id": 454,
					"name": "RecordingStartEvent",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 98,
							"character": 31
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 455,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 456,
									"name": "nativeEvent",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 99,
											"character": 13
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 457,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 460,
													"name": "deviceOrientation",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 102,
															"character": 21
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 458,
													"name": "uri",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 100,
															"character": 7
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 459,
													"name": "videoOrientation",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 101,
															"character": 20
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														460,
														458,
														459
													]
												}
											],
											"sources": [
												{
													"fileName": "types/index.ts",
													"line": 99,
													"character": 14
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										456
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 98,
									"character": 33
								}
							]
						}
					}
				},
				{
					"id": 452,
					"name": "SessionConditionType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 89,
							"character": 32
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "GOOD"
							},
							{
								"type": "literal",
								"value": "BAD"
							},
							{
								"type": "literal",
								"value": "TEST"
							},
							{
								"type": "literal",
								"value": "UNENDED"
							},
							{
								"type": "literal",
								"value": "UNSPECIFIED"
							}
						]
					}
				},
				{
					"id": 448,
					"name": "SessionData",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 87,
							"character": 23
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 449,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 87,
									"character": 25
								}
							],
							"indexSignature": {
								"id": 450,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 451,
										"name": "key",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"id": 296,
										"name": "ExperimentData"
									}
								}
							}
						}
					}
				},
				{
					"id": 453,
					"name": "SurveyType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 96,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "demographic"
							},
							{
								"type": "literal",
								"value": "validation"
							}
						]
					}
				},
				{
					"id": 439,
					"name": "TaskStatus",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 72,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "PENDING"
							},
							{
								"type": "literal",
								"value": "RECEIVED"
							},
							{
								"type": "literal",
								"value": "STARTED"
							},
							{
								"type": "literal",
								"value": "SUCCESS"
							},
							{
								"type": "literal",
								"value": "FAILURE"
							},
							{
								"type": "literal",
								"value": "REVOKED"
							},
							{
								"type": "literal",
								"value": "RETRY"
							}
						]
					}
				},
				{
					"id": 253,
					"name": "default",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "SenseyeSdkType"
					}
				},
				{
					"id": 480,
					"name": "Constants",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Senseye constants."
					},
					"sources": [
						{
							"fileName": "utils/index.ts",
							"line": 14,
							"character": 22
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 481,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 483,
									"name": "API_BASE_PATH",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "'/v1'"
								},
								{
									"id": 482,
									"name": "API_HOST",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "'api.senseye.co'"
								},
								{
									"id": 500,
									"name": "FormData",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 501,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 506,
													"name": "EYE",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 507,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 509,
																	"name": "labels",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 508,
																	"name": "values",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		509,
																		508
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 510,
													"name": "FATIGUE",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 511,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 513,
																	"name": "labels",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 512,
																	"name": "values",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"name": "ReactText"
																		}
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		513,
																		512
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 502,
													"name": "GENDER",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 503,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 505,
																	"name": "labels",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 504,
																	"name": "values",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		505,
																		504
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 514,
													"name": "MERIDIEM",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 515,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 517,
																	"name": "labels",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 516,
																	"name": "values",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		517,
																		516
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														506,
														510,
														502,
														514
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 486,
									"name": "PredictedState",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 487,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 490,
													"name": "NOT_READY_BAC",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'Not Ready: Drunk'"
												},
												{
													"id": 489,
													"name": "NOT_READY_FATIGUE",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'Not Ready: Fatigued'"
												},
												{
													"id": 488,
													"name": "READY",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'Ready'"
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														490,
														489,
														488
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 484,
									"name": "SessionCondition",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 307,
												"name": "SessionConditionType"
											}
										],
										"name": "Record"
									},
									"defaultValue": "..."
								},
								{
									"id": 485,
									"name": "SurveyType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 308,
												"name": "SurveyType"
											}
										],
										"name": "Record"
									},
									"defaultValue": "..."
								},
								{
									"id": 491,
									"name": "TaskStatus",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 492,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 497,
													"name": "FAILURE",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'FAILURE'"
												},
												{
													"id": 493,
													"name": "PENDING",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'PENDING'"
												},
												{
													"id": 494,
													"name": "RECEIVED",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'RECEIVED'"
												},
												{
													"id": 499,
													"name": "RETRY",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'RETRY'"
												},
												{
													"id": 498,
													"name": "REVOKED",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'REVOKED'"
												},
												{
													"id": 495,
													"name": "STARTED",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'STARTED'"
												},
												{
													"id": 496,
													"name": "SUCCESS",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'SUCCESS'"
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														497,
														493,
														494,
														499,
														498,
														495,
														496
													]
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										483,
										482,
										500,
										486,
										484,
										485,
										491
									]
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 478,
					"name": "getCurrentTimestamp",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "utils/index.ts",
							"line": 7,
							"character": 35
						}
					],
					"signatures": [
						{
							"id": 479,
							"name": "getCurrentTimestamp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"returns": "The number of seconds elapsed since January 1, 1970 00:00:00 UTC.\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						393,
						398,
						392,
						391,
						395,
						396,
						397,
						399,
						394
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						426,
						415,
						422,
						400,
						440,
						441,
						469,
						465,
						438,
						461,
						454,
						452,
						448,
						453,
						439
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						253
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						480
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						478
					]
				}
			],
			"sources": [
				{
					"fileName": "index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 254,
			"name": "types",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 281,
					"name": "ComputeResult",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 50,
							"character": 25
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 282,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 283,
									"name": "eye_features",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 51,
											"character": 14
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 284,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "types/index.ts",
													"line": 51,
													"character": 15
												}
											],
											"indexSignature": {
												"id": 285,
												"name": "__index",
												"kind": 8192,
												"kindString": "Index signature",
												"flags": {},
												"parameters": [
													{
														"id": 286,
														"name": "key",
														"kind": 32768,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										}
									}
								},
								{
									"id": 287,
									"name": "prediction",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 52,
											"character": 12
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 288,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 290,
													"name": "bac_prediction",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "[0-1] Value closer to 1 indicate higher probability the participant is drunk."
													},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 56,
															"character": 18
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 291,
													"name": "cog_load_prediction",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "[0-1] Value closer to 1 indicate higher probability of high cognitive load."
													},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 58,
															"character": 23
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 289,
													"name": "fatigue_prediction",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "[0-1] Value closer to 1 indicate higher probability of fatigue."
													},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 54,
															"character": 22
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 292,
													"name": "predicted_state",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Final predicted state of subject in analyzed video.\nPossible values: `Ready` | `Not Ready: Fatigued` | `Not Ready: Drunk`"
													},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 63,
															"character": 19
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														290,
														291,
														289,
														292
													]
												}
											],
											"sources": [
												{
													"fileName": "types/index.ts",
													"line": 52,
													"character": 13
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										283,
										287
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 50,
									"character": 27
								}
							]
						}
					}
				},
				{
					"id": 270,
					"name": "ComputeResultResponse",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Response body from Senseye Compute API endpoints that return a computed result,\ne.g. `/GetVideoResult`.\nWill contain either `results` or `error` depending on success."
					},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 27,
							"character": 33
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 271,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 273,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 30,
											"character": 7
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 274,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 275,
													"name": "code",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 31,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 276,
													"name": "message",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 32,
															"character": 11
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														275,
														276
													]
												}
											],
											"sources": [
												{
													"fileName": "types/index.ts",
													"line": 30,
													"character": 9
												}
											]
										}
									}
								},
								{
									"id": 272,
									"name": "results",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "An array of results, though may typically contain only one entry."
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 29,
											"character": 9
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 281,
											"name": "ComputeResult"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										273,
										272
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 27,
									"character": 35
								}
							]
						}
					}
				},
				{
					"id": 277,
					"name": "ComputeTaskResponse",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Response body from Senseye Compute API endpoints that create or monitor tasks,\ne.g. `/PredictFatigue`, `/GetVideoTask`"
					},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 40,
							"character": 31
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 278,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 279,
									"name": "id",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "ID of the task."
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 42,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 280,
									"name": "status",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Current state of the task.\nPossible values: `PENDING` | `RECEIVED` | `STARTED` | `SUCCESS` | `FAILURE` | `REVOKED` | `RETRY`"
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 47,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										279,
										280
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 40,
									"character": 33
								}
							]
						}
					}
				},
				{
					"id": 255,
					"name": "DataResponse",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Response body from Senseye Data API endpoints (`/data/*`).\nWill contain either `data` or `error` depending on success. Note `data` may also\nnot be present for PUT requests."
					},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 6,
							"character": 24
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 256,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 257,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "On success, will contain the requested response data."
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 8,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 258,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "types/index.ts",
													"line": 8,
													"character": 8
												}
											],
											"indexSignature": {
												"id": 259,
												"name": "__index",
												"kind": 8192,
												"kindString": "Index signature",
												"flags": {},
												"parameters": [
													{
														"id": 260,
														"name": "key",
														"kind": 32768,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									}
								},
								{
									"id": 261,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "On error, will contain information regarding the error."
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 10,
											"character": 7
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 262,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 263,
													"name": "code",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 11,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 264,
													"name": "description",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 12,
															"character": 15
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 265,
													"name": "message",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 13,
															"character": 11
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 266,
													"name": "root",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Propagated information of the root error."
													},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 15,
															"character": 8
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 267,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 269,
																	"name": "description",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "types/index.ts",
																			"line": 17,
																			"character": 17
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 268,
																	"name": "type",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "types/index.ts",
																			"line": 16,
																			"character": 10
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		269,
																		268
																	]
																}
															],
															"sources": [
																{
																	"fileName": "types/index.ts",
																	"line": 15,
																	"character": 10
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														263,
														264,
														265,
														266
													]
												}
											],
											"sources": [
												{
													"fileName": "types/index.ts",
													"line": 10,
													"character": 9
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										257,
										261
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 6,
									"character": 26
								}
							]
						}
					}
				},
				{
					"id": 295,
					"name": "Datum",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 81,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 296,
					"name": "ExperimentData",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 83,
							"character": 26
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 297,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 299,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 85,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 300,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "types/index.ts",
													"line": 85,
													"character": 7
												}
											],
											"indexSignature": {
												"id": 301,
												"name": "__index",
												"kind": 8192,
												"kindString": "Index signature",
												"flags": {},
												"parameters": [
													{
														"id": 302,
														"name": "key",
														"kind": 32768,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									}
								},
								{
									"id": 298,
									"name": "timestamp",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 84,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										299,
										298
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 83,
									"character": 28
								}
							]
						}
					}
				},
				{
					"id": 324,
					"name": "ExperimentProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 119,
							"character": 27
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 325,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 327,
									"name": "background",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Background color of experiment."
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 123,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 329,
									"name": "height",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Use to adjust the height of canvas."
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 127,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 326,
									"name": "instructions",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Instructions to follow during the experiment."
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 121,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 328,
									"name": "width",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Use to adjust the width of canvas."
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 125,
											"character": 7
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 331,
									"name": "onEnd",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									}
								},
								{
									"id": 330,
									"name": "onStart",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									}
								},
								{
									"id": 332,
									"name": "onUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										327,
										329,
										326,
										328
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										331,
										330,
										332
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 119,
									"character": 29
								}
							]
						}
					}
				},
				{
					"id": 320,
					"name": "Point",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 114,
							"character": 17
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 321,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 322,
									"name": "x",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 115,
											"character": 3
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 323,
									"name": "y",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 116,
											"character": 3
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										322,
										323
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 114,
									"character": 19
								}
							]
						}
					}
				},
				{
					"id": 293,
					"name": "PredictedState",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 67,
							"character": 26
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "Ready"
							},
							{
								"type": "literal",
								"value": "Not Ready: Fatigued"
							},
							{
								"type": "literal",
								"value": "Not Ready: Drunk"
							}
						]
					}
				},
				{
					"id": 316,
					"name": "RecorderStatusChangeEvent",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 106,
							"character": 37
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 317,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 318,
									"name": "cameraStatus",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 107,
											"character": 14
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "READY"
											},
											{
												"type": "literal",
												"value": "PENDING_AUTHORIZATION"
											},
											{
												"type": "literal",
												"value": "NOT_AUTHORIZED"
											}
										]
									}
								},
								{
									"id": 319,
									"name": "recordAudioPermissionStatus",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 108,
											"character": 29
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "AUTHORIZED"
											},
											{
												"type": "literal",
												"value": "PENDING_AUTHORIZATION"
											},
											{
												"type": "literal",
												"value": "NOT_AUTHORIZED"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										318,
										319
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 106,
									"character": 39
								}
							]
						}
					}
				},
				{
					"id": 309,
					"name": "RecordingStartEvent",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 98,
							"character": 31
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 310,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 311,
									"name": "nativeEvent",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 99,
											"character": 13
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 312,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 315,
													"name": "deviceOrientation",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 102,
															"character": 21
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 313,
													"name": "uri",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 100,
															"character": 7
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 314,
													"name": "videoOrientation",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 101,
															"character": 20
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														315,
														313,
														314
													]
												}
											],
											"sources": [
												{
													"fileName": "types/index.ts",
													"line": 99,
													"character": 14
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										311
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 98,
									"character": 33
								}
							]
						}
					}
				},
				{
					"id": 307,
					"name": "SessionConditionType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 89,
							"character": 32
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "GOOD"
							},
							{
								"type": "literal",
								"value": "BAD"
							},
							{
								"type": "literal",
								"value": "TEST"
							},
							{
								"type": "literal",
								"value": "UNENDED"
							},
							{
								"type": "literal",
								"value": "UNSPECIFIED"
							}
						]
					}
				},
				{
					"id": 303,
					"name": "SessionData",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 87,
							"character": 23
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 304,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 87,
									"character": 25
								}
							],
							"indexSignature": {
								"id": 305,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 306,
										"name": "key",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"id": 296,
										"name": "ExperimentData"
									}
								}
							}
						}
					}
				},
				{
					"id": 308,
					"name": "SurveyType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 96,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "demographic"
							},
							{
								"type": "literal",
								"value": "validation"
							}
						]
					}
				},
				{
					"id": 294,
					"name": "TaskStatus",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 72,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "PENDING"
							},
							{
								"type": "literal",
								"value": "RECEIVED"
							},
							{
								"type": "literal",
								"value": "STARTED"
							},
							{
								"type": "literal",
								"value": "SUCCESS"
							},
							{
								"type": "literal",
								"value": "FAILURE"
							},
							{
								"type": "literal",
								"value": "REVOKED"
							},
							{
								"type": "literal",
								"value": "RETRY"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						281,
						270,
						277,
						255,
						295,
						296,
						324,
						320,
						293,
						316,
						309,
						307,
						303,
						308,
						294
					]
				}
			],
			"sources": [
				{
					"fileName": "types/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 333,
			"name": "utils",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 336,
					"name": "Constants",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Senseye constants."
					},
					"sources": [
						{
							"fileName": "utils/index.ts",
							"line": 14,
							"character": 22
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 337,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 339,
									"name": "API_BASE_PATH",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "'/v1'"
								},
								{
									"id": 338,
									"name": "API_HOST",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "'api.senseye.co'"
								},
								{
									"id": 356,
									"name": "FormData",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 357,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 362,
													"name": "EYE",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 363,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 365,
																	"name": "labels",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 364,
																	"name": "values",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		365,
																		364
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 366,
													"name": "FATIGUE",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 367,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 369,
																	"name": "labels",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 368,
																	"name": "values",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"name": "ReactText"
																		}
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		369,
																		368
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 358,
													"name": "GENDER",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 359,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 361,
																	"name": "labels",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 360,
																	"name": "values",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		361,
																		360
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 370,
													"name": "MERIDIEM",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 371,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 373,
																	"name": "labels",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 372,
																	"name": "values",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		373,
																		372
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														362,
														366,
														358,
														370
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 342,
									"name": "PredictedState",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 343,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 346,
													"name": "NOT_READY_BAC",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'Not Ready: Drunk'"
												},
												{
													"id": 345,
													"name": "NOT_READY_FATIGUE",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'Not Ready: Fatigued'"
												},
												{
													"id": 344,
													"name": "READY",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'Ready'"
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														346,
														345,
														344
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 340,
									"name": "SessionCondition",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 307,
												"name": "SessionConditionType"
											}
										],
										"name": "Record"
									},
									"defaultValue": "..."
								},
								{
									"id": 341,
									"name": "SurveyType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 308,
												"name": "SurveyType"
											}
										],
										"name": "Record"
									},
									"defaultValue": "..."
								},
								{
									"id": 347,
									"name": "TaskStatus",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 348,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 353,
													"name": "FAILURE",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'FAILURE'"
												},
												{
													"id": 349,
													"name": "PENDING",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'PENDING'"
												},
												{
													"id": 350,
													"name": "RECEIVED",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'RECEIVED'"
												},
												{
													"id": 355,
													"name": "RETRY",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'RETRY'"
												},
												{
													"id": 354,
													"name": "REVOKED",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'REVOKED'"
												},
												{
													"id": 351,
													"name": "STARTED",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'STARTED'"
												},
												{
													"id": 352,
													"name": "SUCCESS",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'SUCCESS'"
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														353,
														349,
														350,
														355,
														354,
														351,
														352
													]
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										339,
										338,
										356,
										342,
										340,
										341,
										347
									]
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 334,
					"name": "getCurrentTimestamp",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "utils/index.ts",
							"line": 7,
							"character": 35
						}
					],
					"signatures": [
						{
							"id": 335,
							"name": "getCurrentTimestamp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"returns": "The number of seconds elapsed since January 1, 1970 00:00:00 UTC.\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						336
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						334
					]
				}
			],
			"sources": [
				{
					"fileName": "utils/index.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"kind": 1,
			"children": [
				1,
				54,
				2,
				205,
				55,
				103,
				148,
				242,
				206,
				210,
				214,
				219,
				224,
				241,
				226,
				231,
				236,
				251,
				243,
				247,
				252,
				254,
				333
			]
		}
	]
}