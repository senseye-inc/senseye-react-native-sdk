{
	"id": 0,
	"name": "@senseyeinc/react-native-senseye-sdk",
	"kind": 0,
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 1,
			"name": "__tests__/index.test",
			"kind": 1,
			"kindString": "Module",
			"flags": {}
		},
		{
			"id": 54,
			"name": "api",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 480,
					"name": "Models",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 205
				},
				{
					"id": 479,
					"name": "SenseyeApiClient",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 3
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						480,
						479
					]
				}
			],
			"sources": [
				{
					"fileName": "api/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2,
			"name": "api/ApiClient",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3,
					"name": "default",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Client that interfaces with Senseye's REST API. Provides wrapper functions for\nstandard GET, DELETE, POST and PUT requests, as well as specific Senseye endpoints."
					},
					"children": [
						{
							"id": 4,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 5,
									"name": "new default",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 6,
											"name": "host",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Domain name or IP address of the API host. e.g. api.senseye.co[:80]"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 7,
											"name": "basePath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "URL path prefix that'll be appended to `host`."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 8,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Authentication token or API key.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3,
										"name": "default"
									}
								}
							]
						},
						{
							"id": 9,
							"name": "axios",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "api/ApiClient.ts",
									"line": 15,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "AxiosInstance"
							}
						},
						{
							"id": 48,
							"name": "cancelComputeTask",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/ApiClient.ts",
									"line": 117,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 49,
									"name": "cancelComputeTask",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Stops a running compute task.",
										"returns": "A `Promise` that will produce a {@link ComputeTaskResponse}.\n"
									},
									"parameters": [
										{
											"id": 50,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Task ID. Can be obtained from a {@link ComputeTaskResponse}."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 373,
														"name": "ComputeTaskResponse"
													}
												],
												"name": "AxiosResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 19,
							"name": "delete",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/ApiClient.ts",
									"line": 53,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 20,
									"name": "delete",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 21,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"parameters": [
										{
											"id": 22,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 23,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "AxiosRequestConfig"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "AxiosResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 14,
							"name": "get",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/ApiClient.ts",
									"line": 50,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 15,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 16,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"parameters": [
										{
											"id": 17,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 18,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "AxiosRequestConfig"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "AxiosResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 51,
							"name": "getComputeResult",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/ApiClient.ts",
									"line": 128,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 52,
									"name": "getComputeResult",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetches the results of a compute task. Note this may timeout if the task\nhasn't successfully completed yet. See {@link getComputeTask | getComputeTask()}.",
										"returns": "A `Promise` that will produce a {@link ComputeResultResponse}.\n"
									},
									"parameters": [
										{
											"id": 53,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Task ID. Can be obtained from a {@link ComputeTaskResponse}."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 366,
														"name": "ComputeResultResponse"
													}
												],
												"name": "AxiosResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 45,
							"name": "getComputeTask",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/ApiClient.ts",
									"line": 107,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 46,
									"name": "getComputeTask",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetches the latest status of a compute task. Use this to poll for `SUCCESS`\nbefore calling {@link getComputeResult | getComputeResult()}.",
										"returns": "A `Promise` that will produce a {@link ComputeTaskResponse}, containing\n             the task's most recent status.\n"
									},
									"parameters": [
										{
											"id": 47,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Task ID. Can be obtained from a {@link ComputeTaskResponse}."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 373,
														"name": "ComputeTaskResponse"
													}
												],
												"name": "AxiosResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 24,
							"name": "post",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/ApiClient.ts",
									"line": 56,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 25,
									"name": "post",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 26,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"parameters": [
										{
											"id": 27,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 28,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 29,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "AxiosRequestConfig"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "AxiosResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 39,
							"name": "predictBAC",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/ApiClient.ts",
									"line": 81,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 40,
									"name": "predictBAC",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Initiates a compute task to predict intoxication probability of the participant in a given video.",
										"returns": "A `Promise` that will produce a {@link ComputeTaskResponse}.\n"
									},
									"parameters": [
										{
											"id": 41,
											"name": "uri",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "URI to a video containing a participant."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 373,
														"name": "ComputeTaskResponse"
													}
												],
												"name": "AxiosResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 42,
							"name": "predictCognitiveLoad",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/ApiClient.ts",
									"line": 93,
									"character": 29
								}
							],
							"signatures": [
								{
									"id": 43,
									"name": "predictCognitiveLoad",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Initiates a compute task to predict cognitive load probability of the participant in a given video.",
										"returns": "A `Promise` that will produce a {@link ComputeTaskResponse}.\n"
									},
									"parameters": [
										{
											"id": 44,
											"name": "uri",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "URI to a video containing a participant."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 373,
														"name": "ComputeTaskResponse"
													}
												],
												"name": "AxiosResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 36,
							"name": "predictFatigue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/ApiClient.ts",
									"line": 69,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 37,
									"name": "predictFatigue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Initiates a compute task to predict fatigue probability of the participant in a given video.",
										"returns": "A `Promise` that will produce a {@link ComputeTaskResponse}.\n"
									},
									"parameters": [
										{
											"id": 38,
											"name": "uri",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "URI to a video containing a participant."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 373,
														"name": "ComputeTaskResponse"
													}
												],
												"name": "AxiosResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 30,
							"name": "put",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/ApiClient.ts",
									"line": 59,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 31,
									"name": "put",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 32,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"parameters": [
										{
											"id": 33,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 34,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 35,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "AxiosRequestConfig"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "AxiosResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 10,
							"name": "request",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/ApiClient.ts",
									"line": 38,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 11,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 12,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"parameters": [
										{
											"id": 13,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AxiosRequestConfig"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "AxiosResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								9
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								48,
								19,
								14,
								51,
								45,
								24,
								39,
								42,
								36,
								30,
								10
							]
						}
					],
					"sources": [
						{
							"fileName": "api/ApiClient.ts",
							"line": 14,
							"character": 37
						},
						{
							"fileName": "api/index.ts",
							"line": 4,
							"character": 25
						},
						{
							"fileName": "api/index.ts",
							"line": 4,
							"character": 25
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3
					]
				}
			],
			"sources": [
				{
					"fileName": "api/ApiClient.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 205,
			"name": "api/models",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 481,
					"name": "Session",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 56
				},
				{
					"id": 482,
					"name": "Survey",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 103
				},
				{
					"id": 483,
					"name": "Video",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 147
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						481,
						482,
						483
					]
				}
			],
			"sources": [
				{
					"fileName": "api/models/index.ts",
					"line": 1,
					"character": 0
				},
				{
					"fileName": "api/index.ts",
					"line": 4,
					"character": 33
				},
				{
					"fileName": "api/index.ts",
					"line": 4,
					"character": 33
				}
			]
		},
		{
			"id": 55,
			"name": "api/models/Session",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 56,
					"name": "default",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Class that models a session, facilitating the gathering and association of event\nand video data generated during a participant's interaction with on-screen\nstimuli, i.e. experiment or series of experiments."
					},
					"children": [
						{
							"id": 57,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 58,
									"name": "new default",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 59,
											"name": "bufferLimit",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The max number of {@link ExperimentData} that can be held\n                       within any one group by the buffer. If the limit is reached,\n                       {@link flushData | flushData()} will be automatically triggered.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1000"
										}
									],
									"type": {
										"type": "reference",
										"id": 56,
										"name": "default"
									}
								}
							]
						},
						{
							"id": 60,
							"name": "apiClient",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "api/models/Session.ts",
									"line": 30,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 3,
										"name": "default"
									}
								]
							}
						},
						{
							"id": 71,
							"name": "bufferLimit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "api/models/Session.ts",
									"line": 35,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 70,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "api/models/Session.ts",
									"line": 34,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"id": 399,
								"name": "SessionData"
							}
						},
						{
							"id": 61,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "api/models/Session.ts",
									"line": 31,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 62,
							"name": "metadata",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "api/models/Session.ts",
									"line": 32,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 63,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 64,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 65,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							}
						},
						{
							"id": 66,
							"name": "user",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "api/models/Session.ts",
									"line": 33,
									"character": 14
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 67,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 68,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 69,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							}
						},
						{
							"id": 72,
							"name": "videos",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "api/models/Session.ts",
									"line": 36,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 147,
									"name": "default"
								}
							}
						},
						{
							"id": 86,
							"name": "addExperimentData",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Session.ts",
									"line": 207,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 87,
									"name": "addExperimentData",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Adds experiment data into a buffer and groups them according to the specified `key`.\nIf any grouping reaches the {@link bufferLimit}, {@link flushData | flushData()}\nwill be automatically triggered."
									},
									"parameters": [
										{
											"id": 88,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "This should ideally be the name of the experiment the data originated from."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 89,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Data generated during an experiment.\n"
											},
											"type": {
												"type": "reference",
												"id": 392,
												"name": "ExperimentData"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 90,
							"name": "flushData",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Session.ts",
									"line": 219,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 91,
									"name": "flushData",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Uploads all accumulated data and flushes them from memory.",
										"returns": "A `Promise` that will produce a boolean specifying whether the operaton succeeded.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 100,
							"name": "getId",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Session.ts",
									"line": 297,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 101,
									"name": "getId",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "{@link id}, or `undefined` if the instance hasn't succesfully {@link init | initialized} yet.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							]
						},
						{
							"id": 98,
							"name": "getVideos",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Session.ts",
									"line": 290,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 99,
									"name": "getVideos",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "An array of videos associated with the session.\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 147,
											"name": "default"
										}
									}
								}
							]
						},
						{
							"id": 73,
							"name": "init",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Session.ts",
									"line": 65,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 74,
									"name": "init",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a session model with the specified parameters. Note this should only be\ndone once per instance. Ensure initialization is successful before executing\ncertain functions within this class, otherwise errors may be thrown..",
										"returns": "A `Promise` that will produce the created session's metadata.\n"
									},
									"parameters": [
										{
											"id": 75,
											"name": "apiClient",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Client configured to communicate with Senseye's API."
											},
											"type": {
												"type": "reference",
												"id": 3,
												"name": "default"
											}
										},
										{
											"id": 76,
											"name": "uniqueId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Custom username or ID of the participant. Must be unique to the\n                     participant within the context of the API token/key passed into the client."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 77,
											"name": "surveyId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "ID of a {@link Survey} to associate to the session. Will ideally be\n                     the demographic survey pertaining to the participant."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 78,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 79,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 80,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 92,
							"name": "pushSurvey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Session.ts",
									"line": 250,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 93,
									"name": "pushSurvey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Initializes the provided survey if not done so already, and associates it with the session."
									},
									"parameters": [
										{
											"id": 94,
											"name": "survey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Instance of a `Survey`.\n"
											},
											"type": {
												"type": "reference",
												"id": 103,
												"name": "default"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 95,
							"name": "pushVideo",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Session.ts",
									"line": 278,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 96,
									"name": "pushVideo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Initializes the provided video, which associates it with the session.\nSee {@link getVideos | getVideos()}."
									},
									"parameters": [
										{
											"id": 97,
											"name": "video",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Instance of an uninitialized `Video`.\n"
											},
											"type": {
												"type": "reference",
												"id": 147,
												"name": "default"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 81,
							"name": "start",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Session.ts",
									"line": 160,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 82,
									"name": "start",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Starts the current session. Note a session cannot be started again once it\nis started or stopped. If necessary, a new `Session` must be created."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 83,
							"name": "stop",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Session.ts",
									"line": 177,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 84,
									"name": "stop",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Stops the current session and flushes all accumulated/remaining data."
									},
									"parameters": [
										{
											"id": 85,
											"name": "condition",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A condition describing the session upon stopping.\n"
											},
											"type": {
												"type": "reference",
												"id": 403,
												"name": "SessionConditionType"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								57
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								60,
								71,
								70,
								61,
								62,
								66,
								72
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								86,
								90,
								100,
								98,
								73,
								92,
								95,
								81,
								83
							]
						}
					],
					"sources": [
						{
							"fileName": "api/models/Session.ts",
							"line": 29,
							"character": 28
						},
						{
							"fileName": "api/models/index.ts",
							"line": 5,
							"character": 16
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						56
					]
				}
			],
			"sources": [
				{
					"fileName": "api/models/Session.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 102,
			"name": "api/models/Survey",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 103,
					"name": "default",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Class that models a survey, facilitating the collection of a participant's responses\nto survey questions."
					},
					"children": [
						{
							"id": 104,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 105,
									"name": "new default",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 106,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Survey type, e.g. `demographic`, `validation`."
											},
											"type": {
												"type": "reference",
												"id": 404,
												"name": "SurveyType"
											}
										},
										{
											"id": 107,
											"name": "entryMap",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Map of keys to a tuple containing a corresponding question and response.\n                     e.g. { 'eye_color': ['What color are you eyes?', 'Brown'] }"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 108,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 109,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 110,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "tuple",
															"elements": [
																{
																	"type": "reference",
																	"id": 391,
																	"name": "Datum"
																},
																{
																	"type": "reference",
																	"id": 391,
																	"name": "Datum"
																}
															]
														}
													}
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 111,
											"name": "info",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Any extra information or metadata.\n"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 112,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 113,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 114,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"id": 103,
										"name": "default"
									}
								}
							]
						},
						{
							"id": 115,
							"name": "apiClient",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "api/models/Survey.ts",
									"line": 13,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 3,
										"name": "default"
									}
								]
							}
						},
						{
							"id": 116,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "api/models/Survey.ts",
									"line": 14,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 117,
							"name": "metadata",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "api/models/Survey.ts",
									"line": 15,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 118,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 119,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 120,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							}
						},
						{
							"id": 127,
							"name": "addEntry",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Survey.ts",
									"line": 83,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 128,
									"name": "addEntry",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Adds an entry for a question and its corresponding response. If `key` already\nexists, the previous entry values will be overwritten."
									},
									"parameters": [
										{
											"id": 129,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Key used to associate `question` and `response`."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 130,
											"name": "question",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Question or prompt value."
											},
											"type": {
												"type": "reference",
												"id": 391,
												"name": "Datum"
											}
										},
										{
											"id": 131,
											"name": "response",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Response value to `question`.\n"
											},
											"type": {
												"type": "reference",
												"id": 391,
												"name": "Datum"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 144,
							"name": "getEntries",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Survey.ts",
									"line": 130,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 145,
									"name": "getEntries",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "A tuple containing question and response entries, respectively.\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							]
						},
						{
							"id": 140,
							"name": "getId",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Survey.ts",
									"line": 116,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 141,
									"name": "getId",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "{@link id}, or `undefined` if the instance hasn't succesfully {@link init | initialized} yet.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							]
						},
						{
							"id": 142,
							"name": "getType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Survey.ts",
									"line": 123,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 143,
									"name": "getType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "The survey's type.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 121,
							"name": "init",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Survey.ts",
									"line": 55,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 122,
									"name": "init",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Initializes a survey model through Senseye's API. Note this should only be\ndone once per instance. Ensure initialization is successful before executing\ncertain functions within this class, otherwise errors may be thrown..",
										"returns": "A `Promise` that will produce the created survey's metadata.\n"
									},
									"parameters": [
										{
											"id": 123,
											"name": "apiClient",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Client configured to communicate with Senseye's API."
											},
											"type": {
												"type": "reference",
												"id": 3,
												"name": "default"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 124,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 125,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 126,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 138,
							"name": "pushUpdates",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Survey.ts",
									"line": 102,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 139,
									"name": "pushUpdates",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Pushes the survey's most recent metadata values to Senseye's API.",
										"returns": "A `Promise` that will produce an `AxiosResponse`.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 351,
														"name": "DataResponse"
													}
												],
												"name": "AxiosResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 132,
							"name": "updateInfo",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Survey.ts",
									"line": 93,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 133,
									"name": "updateInfo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Updates the survey's {@link info} metadata."
									},
									"parameters": [
										{
											"id": 134,
											"name": "info",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Metadata to be merged on top of any prior {@link info} metadata.\n"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 135,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 136,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 137,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								104
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								115,
								116,
								117
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								127,
								144,
								140,
								142,
								121,
								138,
								132
							]
						}
					],
					"sources": [
						{
							"fileName": "api/models/Survey.ts",
							"line": 12,
							"character": 27
						},
						{
							"fileName": "api/models/index.ts",
							"line": 5,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						103
					]
				}
			],
			"sources": [
				{
					"fileName": "api/models/Survey.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 146,
			"name": "api/models/Video",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 147,
					"name": "default",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Class that models a session video, facilitating the logging of pertinent\nmetadata and provides the ability to upload recorded video."
					},
					"children": [
						{
							"id": 148,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 149,
									"name": "new default",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 150,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the video. Must be unique within the context of a {@link Session}."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 151,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Camera and/or recording configurations."
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 152,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 153,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 154,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 155,
											"name": "info",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Any extra information or metadata."
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 156,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 157,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 158,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 159,
											"name": "uri",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Video file URI. (Android) Ensure it is prefixed with `file://`.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "''"
										}
									],
									"type": {
										"type": "reference",
										"id": 147,
										"name": "default"
									}
								}
							]
						},
						{
							"id": 160,
							"name": "apiClient",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 15,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 3,
										"name": "default"
									}
								]
							}
						},
						{
							"id": 161,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 16,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 162,
							"name": "metadata",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 17,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 163,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 164,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 165,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							}
						},
						{
							"id": 167,
							"name": "uploadProgress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 19,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 166,
							"name": "uri",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 18,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 199,
							"name": "getId",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 190,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 200,
									"name": "getId",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "{@link id}, or `undefined` if the instance hasn't succesfully {@link init | initialized} yet.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							]
						},
						{
							"id": 201,
							"name": "getName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 197,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 202,
									"name": "getName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "The video's assigned name.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 197,
							"name": "getUploadProgress",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 183,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 198,
									"name": "getUploadProgress",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Use this to track upload progress after calling {@link uploadFile | uploadFile()}.",
										"returns": "The upload percentage as a number from 0 to 100, and -1 if\n           {@link uploadFile | uploadFile()} has not been executed yet.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						},
						{
							"id": 203,
							"name": "getUri",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 204,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 204,
									"name": "getUri",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "The video's file uri.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 168,
							"name": "init",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 53,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 169,
									"name": "init",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Initializes a video model through Senseye's API. Note this should only be\ndone once per instance. Ensure initialization is successful before executing\ncertain functions within this class, otherwise errors may be thrown..",
										"returns": "A `Promise` that will produce the created video's metadata.\n"
									},
									"parameters": [
										{
											"id": 170,
											"name": "apiClient",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Client configured to communicate with Senseye's API."
											},
											"type": {
												"type": "reference",
												"id": 3,
												"name": "default"
											}
										},
										{
											"id": 171,
											"name": "sessionId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ID of a {@link Session} to associate with."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 172,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 173,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 174,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 187,
							"name": "pushUpdates",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 114,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 188,
									"name": "pushUpdates",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Pushes the video's most recent metadata values to Senseye's API.",
										"returns": "A `Promise` that will produce an `AxiosResponse`.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 351,
														"name": "DataResponse"
													}
												],
												"name": "AxiosResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 175,
							"name": "recordStartTime",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 82,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 176,
									"name": "recordStartTime",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Records the video's start timestamp."
									},
									"parameters": [
										{
											"id": 177,
											"name": "timestamp",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Start time of the video's recording. Should be in UTC seconds.\n                     If left unspecified, current UTC will be used.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 178,
							"name": "recordStopTime",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 94,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 179,
									"name": "recordStopTime",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Records the video's stop timestamp."
									},
									"parameters": [
										{
											"id": 180,
											"name": "timestamp",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Stop time of the video's recording. Should be in UTC seconds.\n                     If left unspecified, current UTC will be used.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189,
							"name": "setUri",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 130,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 190,
									"name": "setUri",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the URI to a local file."
									},
									"parameters": [
										{
											"id": 191,
											"name": "uri",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Video file URI. (Android) Ensure it is prefixed with `file://`.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 181,
							"name": "updateInfo",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 105,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 182,
									"name": "updateInfo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Updates the video's {@link info} metadata."
									},
									"parameters": [
										{
											"id": 183,
											"name": "info",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Metadata to be merged on top of any prior {@link info} metadata.\n"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 184,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 185,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 186,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 192,
							"name": "uploadFile",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/models/Video.ts",
									"line": 143,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 193,
									"name": "uploadFile",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Uploads a file and associates it with the video model.",
										"returns": "A `Promise` that will produce the video's updated metadata.\n"
									},
									"parameters": [
										{
											"id": 194,
											"name": "uri",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Video file URI. (Android) Ensure it is prefixed with `file://`.\n                     Defaults to {@link uri} (see {@link setUri | setUri()})."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 195,
											"name": "codec",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Specifies the codec of the video file."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'mp4'"
										},
										{
											"id": 196,
											"name": "overwrite",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Specifies whether to overwrite a previously uploaded file."
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "false"
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								148
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								160,
								161,
								162,
								167,
								166
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								199,
								201,
								197,
								203,
								168,
								187,
								175,
								178,
								189,
								181,
								192
							]
						}
					],
					"sources": [
						{
							"fileName": "api/models/Video.ts",
							"line": 14,
							"character": 26
						},
						{
							"fileName": "api/models/index.ts",
							"line": 5,
							"character": 31
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						147
					]
				}
			],
			"sources": [
				{
					"fileName": "api/models/Video.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 331,
			"name": "components",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 500,
					"name": "CalibrationProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 279
				},
				{
					"id": 504,
					"name": "DemographicSurveyProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 336
				},
				{
					"id": 488,
					"name": "ExperimentRunner",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 216
				},
				{
					"id": 489,
					"name": "ExperimentRunnerProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 207
				},
				{
					"id": 498,
					"name": "Experiments",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 330
				},
				{
					"id": 501,
					"name": "NystagmusProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 291
				},
				{
					"id": 502,
					"name": "PlrProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 305
				},
				{
					"id": 492,
					"name": "SenseyeButton",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 218
				},
				{
					"id": 493,
					"name": "SenseyeButtonProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 221
				},
				{
					"id": 494,
					"name": "SenseyePicker",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 227
				},
				{
					"id": 495,
					"name": "SenseyePickerProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 231
				},
				{
					"id": 496,
					"name": "SenseyeTextInput",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 243
				},
				{
					"id": 497,
					"name": "SenseyeTextInputProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 247
				},
				{
					"id": 503,
					"name": "SmoothPursuitProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 317
				},
				{
					"id": 499,
					"name": "Surveys",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 347
				},
				{
					"id": 505,
					"name": "ValidationSurveyProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 343
				},
				{
					"id": 490,
					"name": "VideoRecorder",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 273
				},
				{
					"id": 491,
					"name": "VideoRecorderProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 258
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						500,
						504,
						488,
						489,
						498,
						501,
						502,
						492,
						493,
						494,
						495,
						496,
						497,
						503,
						499,
						505,
						490,
						491
					]
				}
			],
			"sources": [
				{
					"fileName": "components/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 206,
			"name": "components/ExperimentRunner",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 207,
					"name": "ExperimentRunnerProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "components/ExperimentRunner.tsx",
							"line": 11,
							"character": 33
						},
						{
							"fileName": "components/index.ts",
							"line": 11,
							"character": 23
						},
						{
							"fileName": "components/index.ts",
							"line": 11,
							"character": 23
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 208,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 209,
									"name": "sessionConfig",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Specifying this will prompt the runner to initialize a {@link Session} and\nperform data collection using Senseye's API (requires an internet connection)."
									},
									"sources": [
										{
											"fileName": "components/ExperimentRunner.tsx",
											"line": 16,
											"character": 15
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 210,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 211,
													"name": "apiClient",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Client configured to communicate with Senseye's API."
													},
													"sources": [
														{
															"fileName": "components/ExperimentRunner.tsx",
															"line": 18,
															"character": 13
														}
													],
													"type": {
														"type": "reference",
														"id": 3,
														"name": "SenseyeApiClient"
													}
												},
												{
													"id": 213,
													"name": "demographicSurvey",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Demographic survey of the particpant."
													},
													"sources": [
														{
															"fileName": "components/ExperimentRunner.tsx",
															"line": 25,
															"character": 21
														}
													],
													"type": {
														"type": "reference",
														"id": 103,
														"name": "Models.Survey"
													}
												},
												{
													"id": 212,
													"name": "uniqueId",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Custom username or ID of the participant. Must be unique to the participant\nwithin the context of the API token/key passed into the client."
													},
													"sources": [
														{
															"fileName": "components/ExperimentRunner.tsx",
															"line": 23,
															"character": 12
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														211,
														213,
														212
													]
												}
											],
											"sources": [
												{
													"fileName": "components/ExperimentRunner.tsx",
													"line": 16,
													"character": 17
												}
											]
										}
									}
								},
								{
									"id": 214,
									"name": "onEnd",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									}
								},
								{
									"id": 215,
									"name": "onInitializationError",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										209
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										214,
										215
									]
								}
							],
							"sources": [
								{
									"fileName": "components/ExperimentRunner.tsx",
									"line": 11,
									"character": 35
								}
							]
						}
					}
				},
				{
					"id": 216,
					"name": "default",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Component that executes a series of {@link Experiments} passed in as children elements (`props.children`).\nOrchestrates video recording and data collection throughout the experiments (one video per experiment)."
					},
					"sources": [
						{
							"fileName": "components/ExperimentRunner.tsx",
							"line": 45,
							"character": 22
						},
						{
							"fileName": "components/index.ts",
							"line": 10,
							"character": 18
						},
						{
							"fileName": "components/index.ts",
							"line": 10,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 207,
								"name": "ExperimentRunnerProps"
							}
						],
						"name": "React.FunctionComponent"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						207
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						216
					]
				}
			],
			"sources": [
				{
					"fileName": "components/ExperimentRunner.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 217,
			"name": "components/SenseyeButton",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 221,
					"name": "SenseyeButtonProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "components/SenseyeButton.tsx",
							"line": 4,
							"character": 30
						},
						{
							"fileName": "components/index.ts",
							"line": 15,
							"character": 20
						},
						{
							"fileName": "components/index.ts",
							"line": 15,
							"character": 20
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 222,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 223,
									"name": "title",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "components/SenseyeButton.tsx",
											"line": 5,
											"character": 7
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 224,
									"name": "type",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "components/SenseyeButton.tsx",
											"line": 6,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 225,
									"name": "onPress",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										223,
										224
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										225
									]
								}
							],
							"sources": [
								{
									"fileName": "components/SenseyeButton.tsx",
									"line": 4,
									"character": 32
								}
							]
						}
					}
				},
				{
					"id": 218,
					"name": "default",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "components/SenseyeButton.tsx",
							"line": 10,
							"character": 37
						},
						{
							"fileName": "components/index.ts",
							"line": 14,
							"character": 15
						},
						{
							"fileName": "components/index.ts",
							"line": 14,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 219,
							"name": "default",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 220,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 221,
										"name": "SenseyeButtonProps"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						221
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						218
					]
				}
			],
			"sources": [
				{
					"fileName": "components/SenseyeButton.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 226,
			"name": "components/SenseyePicker",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 230,
					"name": "default",
					"kind": 2,
					"kindString": "Namespace",
					"flags": {}
				},
				{
					"id": 231,
					"name": "SenseyePickerProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "components/SenseyePicker.tsx",
							"line": 5,
							"character": 30
						},
						{
							"fileName": "components/index.ts",
							"line": 17,
							"character": 20
						},
						{
							"fileName": "components/index.ts",
							"line": 17,
							"character": 20
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 232,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 237,
									"name": "label",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "components/SenseyePicker.tsx",
											"line": 10,
											"character": 7
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 239,
									"name": "marginBottom",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "components/SenseyePicker.tsx",
											"line": 12,
											"character": 14
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 233,
									"name": "options",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "components/SenseyePicker.tsx",
											"line": 6,
											"character": 9
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 234,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 235,
													"name": "labels",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "components/SenseyePicker.tsx",
															"line": 7,
															"character": 10
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												},
												{
													"id": 236,
													"name": "values",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "components/SenseyePicker.tsx",
															"line": 8,
															"character": 10
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "React.ReactText"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														235,
														236
													]
												}
											],
											"sources": [
												{
													"fileName": "components/SenseyePicker.tsx",
													"line": 6,
													"character": 10
												}
											]
										}
									}
								},
								{
									"id": 240,
									"name": "selectedValue",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "components/SenseyePicker.tsx",
											"line": 13,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 238,
									"name": "width",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "components/SenseyePicker.tsx",
											"line": 11,
											"character": 7
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 241,
									"name": "onChangeValue",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										237,
										239,
										233,
										240,
										238
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										241
									]
								}
							],
							"sources": [
								{
									"fileName": "components/SenseyePicker.tsx",
									"line": 5,
									"character": 32
								}
							]
						}
					}
				},
				{
					"id": 227,
					"name": "default",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "components/SenseyePicker.tsx",
							"line": 17,
							"character": 37
						},
						{
							"fileName": "components/index.ts",
							"line": 16,
							"character": 15
						},
						{
							"fileName": "components/index.ts",
							"line": 16,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 228,
							"name": "default",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 229,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 231,
										"name": "SenseyePickerProps"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"kind": 2,
					"children": [
						230
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						231
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						227
					]
				}
			],
			"sources": [
				{
					"fileName": "components/SenseyePicker.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 242,
			"name": "components/SenseyeTextInput",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 246,
					"name": "default",
					"kind": 2,
					"kindString": "Namespace",
					"flags": {}
				},
				{
					"id": 247,
					"name": "SenseyeTextInputProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "components/SenseyeTextInput.tsx",
							"line": 4,
							"character": 33
						},
						{
							"fileName": "components/index.ts",
							"line": 19,
							"character": 23
						},
						{
							"fileName": "components/index.ts",
							"line": 19,
							"character": 23
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 248,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 254,
									"name": "height",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "components/SenseyeTextInput.tsx",
											"line": 10,
											"character": 8
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 250,
									"name": "keyboardType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "components/SenseyeTextInput.tsx",
											"line": 6,
											"character": 14
										}
									],
									"type": {
										"type": "reference",
										"name": "KeyboardType"
									}
								},
								{
									"id": 249,
									"name": "label",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "components/SenseyeTextInput.tsx",
											"line": 5,
											"character": 7
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 251,
									"name": "placeholderText",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "components/SenseyeTextInput.tsx",
											"line": 7,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 252,
									"name": "placeholderTextColor",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "components/SenseyeTextInput.tsx",
											"line": 8,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 253,
									"name": "value",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "components/SenseyeTextInput.tsx",
											"line": 9,
											"character": 7
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 255,
									"name": "width",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "components/SenseyeTextInput.tsx",
											"line": 11,
											"character": 7
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 256,
									"name": "onChangeText",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										254,
										250,
										249,
										251,
										252,
										253,
										255
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										256
									]
								}
							],
							"sources": [
								{
									"fileName": "components/SenseyeTextInput.tsx",
									"line": 4,
									"character": 35
								}
							]
						}
					}
				},
				{
					"id": 243,
					"name": "default",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "components/SenseyeTextInput.tsx",
							"line": 15,
							"character": 40
						},
						{
							"fileName": "components/index.ts",
							"line": 18,
							"character": 18
						},
						{
							"fileName": "components/index.ts",
							"line": 18,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 244,
							"name": "default",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 245,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 247,
										"name": "SenseyeTextInputProps"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"kind": 2,
					"children": [
						246
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						247
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						243
					]
				}
			],
			"sources": [
				{
					"fileName": "components/SenseyeTextInput.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 257,
			"name": "components/VideoRecorder",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 258,
					"name": "VideoRecorderProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "components/VideoRecorder.tsx",
							"line": 21,
							"character": 30
						},
						{
							"fileName": "components/index.ts",
							"line": 13,
							"character": 20
						},
						{
							"fileName": "components/index.ts",
							"line": 13,
							"character": 20
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 259,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 263,
									"name": "androidCameraPermissionOptions",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "(Android) Configuration options for permissions request for camera."
									},
									"sources": [
										{
											"fileName": "components/VideoRecorder.tsx",
											"line": 29,
											"character": 32
										}
									],
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "androidCameraPermissionOptions"
										},
										"objectType": {
											"type": "reference",
											"name": "RNCameraProps"
										}
									}
								},
								{
									"id": 264,
									"name": "androidRecordAudioPermissionOptions",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "(Android) Configuration options for permissions request for recording audio."
									},
									"sources": [
										{
											"fileName": "components/VideoRecorder.tsx",
											"line": 31,
											"character": 37
										}
									],
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "androidRecordAudioPermissionOptions"
										},
										"objectType": {
											"type": "reference",
											"name": "RNCameraProps"
										}
									}
								},
								{
									"id": 261,
									"name": "cameraId",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "(Android) Overrides the `type` property and uses the camera specified by its id."
									},
									"sources": [
										{
											"fileName": "components/VideoRecorder.tsx",
											"line": 25,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 265,
									"name": "captureAudio",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Whether audio recording permissions should be requested."
									},
									"sources": [
										{
											"fileName": "components/VideoRecorder.tsx",
											"line": 33,
											"character": 14
										}
									],
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "captureAudio"
										},
										"objectType": {
											"type": "reference",
											"name": "RNCameraProps"
										}
									}
								},
								{
									"id": 266,
									"name": "showPreview",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Whether to show camera preview."
									},
									"sources": [
										{
											"fileName": "components/VideoRecorder.tsx",
											"line": 35,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 260,
									"name": "type",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Type of camera to use. Possible values: 'front' | 'back'"
									},
									"sources": [
										{
											"fileName": "components/VideoRecorder.tsx",
											"line": 23,
											"character": 6
										}
									],
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "type"
										},
										"objectType": {
											"type": "reference",
											"name": "RNCameraProps"
										}
									}
								},
								{
									"id": 262,
									"name": "useCamera2Api",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "(Android) Whether to use Android's Camera2 API."
									},
									"sources": [
										{
											"fileName": "components/VideoRecorder.tsx",
											"line": 27,
											"character": 15
										}
									],
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "useCamera2Api"
										},
										"objectType": {
											"type": "reference",
											"name": "RNCameraProps"
										}
									}
								},
								{
									"id": 267,
									"name": "onCameraReady",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									}
								},
								{
									"id": 272,
									"name": "onDoubleTap",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									}
								},
								{
									"id": 268,
									"name": "onMountError",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									}
								},
								{
									"id": 271,
									"name": "onRecordingEnd",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									}
								},
								{
									"id": 270,
									"name": "onRecordingStart",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									}
								},
								{
									"id": 269,
									"name": "onStatusChange",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										263,
										264,
										261,
										265,
										266,
										260,
										262
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										267,
										272,
										268,
										271,
										270,
										269
									]
								}
							],
							"sources": [
								{
									"fileName": "components/VideoRecorder.tsx",
									"line": 21,
									"character": 32
								}
							]
						}
					}
				},
				{
					"id": 273,
					"name": "default",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Component that uses RNCamera to record videos. Since this mainly acts as a wrapper\naround RNCamera, more information regarding some properties may be found\n{@link https://react-native-camera.github.io/react-native-camera/docs/rncamera#properties | here}.",
						"text": "Passing in a `ref` callback will produce a {@link VideoRecorderObject}.\n"
					},
					"sources": [
						{
							"fileName": "components/VideoRecorder.tsx",
							"line": 75,
							"character": 19
						},
						{
							"fileName": "components/index.ts",
							"line": 12,
							"character": 15
						},
						{
							"fileName": "components/index.ts",
							"line": 12,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 258,
										"name": "VideoRecorderProps"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 420,
												"name": "VideoRecorderObject"
											}
										],
										"name": "RefAttributes"
									}
								]
							}
						],
						"name": "ForwardRefExoticComponent"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						258
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						273
					]
				}
			],
			"sources": [
				{
					"fileName": "components/VideoRecorder.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 330,
			"name": "components/experiments",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 484,
					"name": "Calibration",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 275
				},
				{
					"id": 485,
					"name": "Nystagmus",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 287
				},
				{
					"id": 486,
					"name": "Plr",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 301
				},
				{
					"id": 487,
					"name": "SmoothPursuit",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 313
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						484,
						485,
						486,
						487
					]
				}
			],
			"sources": [
				{
					"fileName": "components/experiments/index.ts",
					"line": 1,
					"character": 0
				},
				{
					"fileName": "components/index.ts",
					"line": 20,
					"character": 13
				},
				{
					"fileName": "components/index.ts",
					"line": 20,
					"character": 13
				}
			]
		},
		{
			"id": 274,
			"name": "components/experiments/Calibration",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 278,
					"name": "default",
					"kind": 2,
					"kindString": "Namespace",
					"flags": {}
				},
				{
					"id": 279,
					"name": "CalibrationProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "components/experiments/Calibration.tsx",
							"line": 11,
							"character": 28
						},
						{
							"fileName": "components/index.ts",
							"line": 24,
							"character": 25
						},
						{
							"fileName": "components/index.ts",
							"line": 24,
							"character": 25
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"id": 428,
								"name": "ExperimentProps"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 280,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 282,
											"name": "delay",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Delay (milliseconds) between render of old dot and new dot."
											},
											"sources": [
												{
													"fileName": "components/experiments/Calibration.tsx",
													"line": 15,
													"character": 7
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 284,
											"name": "dot_color",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Defines the color of the dots."
											},
											"sources": [
												{
													"fileName": "components/experiments/Calibration.tsx",
													"line": 19,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 285,
											"name": "dot_points",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Determines the x,y coordinates of the sequence of dots on the screen."
											},
											"sources": [
												{
													"fileName": "components/experiments/Calibration.tsx",
													"line": 21,
													"character": 12
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "tuple",
													"elements": [
														{
															"type": "intrinsic",
															"name": "number"
														},
														{
															"type": "intrinsic",
															"name": "number"
														}
													]
												}
											}
										},
										{
											"id": 281,
											"name": "duration",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Amount of time (milliseconds) a dot is displayed on-screen."
											},
											"sources": [
												{
													"fileName": "components/experiments/Calibration.tsx",
													"line": 13,
													"character": 10
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 283,
											"name": "radius",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Defines the radius of the dots."
											},
											"sources": [
												{
													"fileName": "components/experiments/Calibration.tsx",
													"line": 17,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												282,
												284,
												285,
												281,
												283
											]
										}
									],
									"sources": [
										{
											"fileName": "components/experiments/Calibration.tsx",
											"line": 11,
											"character": 48
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 275,
					"name": "default",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "components/experiments/Calibration.tsx",
							"line": 28,
							"character": 35
						},
						{
							"fileName": "components/experiments/index.ts",
							"line": 6,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 276,
							"name": "default",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "This experiment is used to calibrate the gaze tracking system to provide accurate\ngaze information used to assess behavior in the other tasks."
							},
							"parameters": [
								{
									"id": 277,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 279,
										"name": "CalibrationProps"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"kind": 2,
					"children": [
						278
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						279
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						275
					]
				}
			],
			"sources": [
				{
					"fileName": "components/experiments/Calibration.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 286,
			"name": "components/experiments/Nystagmus",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 290,
					"name": "default",
					"kind": 2,
					"kindString": "Namespace",
					"flags": {}
				},
				{
					"id": 291,
					"name": "NystagmusProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "components/experiments/Nystagmus.tsx",
							"line": 7,
							"character": 26
						},
						{
							"fileName": "components/index.ts",
							"line": 25,
							"character": 23
						},
						{
							"fileName": "components/index.ts",
							"line": 25,
							"character": 23
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"id": 428,
								"name": "ExperimentProps"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 292,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 299,
											"name": "initialX",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "initial x-position of the focal point in the experiment."
											},
											"sources": [
												{
													"fileName": "components/experiments/Nystagmus.tsx",
													"line": 21,
													"character": 10
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 295,
											"name": "iterations",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Defines how many times the target will repeat its cycle. One cycle is when the target moves from the far right side of the screen, to the left, back to the right."
											},
											"sources": [
												{
													"fileName": "components/experiments/Nystagmus.tsx",
													"line": 13,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 293,
											"name": "pause_time",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The amount of time (milliseconds) the focal point pauses when at the far left and far right side of screen."
											},
											"sources": [
												{
													"fileName": "components/experiments/Nystagmus.tsx",
													"line": 9,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 296,
											"name": "speed",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Defines how fast the moving target moves across the screen."
											},
											"sources": [
												{
													"fileName": "components/experiments/Nystagmus.tsx",
													"line": 15,
													"character": 7
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 294,
											"name": "start_pause_time",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The amount of time (milliseconds) to wait before the assessment starts."
											},
											"sources": [
												{
													"fileName": "components/experiments/Nystagmus.tsx",
													"line": 11,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 298,
											"name": "targetColor",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The color of the moving focal point."
											},
											"sources": [
												{
													"fileName": "components/experiments/Nystagmus.tsx",
													"line": 19,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 297,
											"name": "targetSize",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Defines the width and height of the focal point."
											},
											"sources": [
												{
													"fileName": "components/experiments/Nystagmus.tsx",
													"line": 17,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												299,
												295,
												293,
												296,
												294,
												298,
												297
											]
										}
									],
									"sources": [
										{
											"fileName": "components/experiments/Nystagmus.tsx",
											"line": 7,
											"character": 46
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 287,
					"name": "default",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "components/experiments/Nystagmus.tsx",
							"line": 24,
							"character": 33
						},
						{
							"fileName": "components/experiments/index.ts",
							"line": 6,
							"character": 31
						}
					],
					"signatures": [
						{
							"id": 288,
							"name": "default",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 289,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 291,
										"name": "NystagmusProps"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"kind": 2,
					"children": [
						290
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						291
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						287
					]
				}
			],
			"sources": [
				{
					"fileName": "components/experiments/Nystagmus.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 300,
			"name": "components/experiments/Plr",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 304,
					"name": "default",
					"kind": 2,
					"kindString": "Namespace",
					"flags": {}
				},
				{
					"id": 305,
					"name": "PlrProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "components/experiments/Plr.tsx",
							"line": 7,
							"character": 20
						},
						{
							"fileName": "components/index.ts",
							"line": 26,
							"character": 17
						},
						{
							"fileName": "components/index.ts",
							"line": 26,
							"character": 17
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"id": 428,
								"name": "ExperimentProps"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 306,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 307,
											"name": "color_values",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Dictates the color sequence of the background."
											},
											"sources": [
												{
													"fileName": "components/experiments/Plr.tsx",
													"line": 9,
													"character": 14
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "number"
														}
													}
												]
											}
										},
										{
											"id": 311,
											"name": "duration",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Defines the amount of time (milliseconds) to display each background color."
											},
											"sources": [
												{
													"fileName": "components/experiments/Plr.tsx",
													"line": 17,
													"character": 10
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 309,
											"name": "fixation_length",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Defines the centered cross length."
											},
											"sources": [
												{
													"fileName": "components/experiments/Plr.tsx",
													"line": 13,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 310,
											"name": "fixation_outline_size",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Defines how thick the outline on the centered cross, set to 0 to make outline disappear."
											},
											"sources": [
												{
													"fileName": "components/experiments/Plr.tsx",
													"line": 15,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 308,
											"name": "fixation_width",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The centered cross width."
											},
											"sources": [
												{
													"fileName": "components/experiments/Plr.tsx",
													"line": 11,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												307,
												311,
												309,
												310,
												308
											]
										}
									],
									"sources": [
										{
											"fileName": "components/experiments/Plr.tsx",
											"line": 7,
											"character": 40
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 301,
					"name": "default",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "components/experiments/Plr.tsx",
							"line": 21,
							"character": 27
						},
						{
							"fileName": "components/experiments/index.ts",
							"line": 6,
							"character": 36
						}
					],
					"signatures": [
						{
							"id": 302,
							"name": "default",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Measures pupillary light reflex by manipulating the luminance of the screen."
							},
							"parameters": [
								{
									"id": 303,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 305,
										"name": "PlrProps"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"kind": 2,
					"children": [
						304
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						305
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						301
					]
				}
			],
			"sources": [
				{
					"fileName": "components/experiments/Plr.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 312,
			"name": "components/experiments/SmoothPursuit",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 316,
					"name": "default",
					"kind": 2,
					"kindString": "Namespace",
					"flags": {}
				},
				{
					"id": 317,
					"name": "SmoothPursuitProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "components/experiments/SmoothPursuit.tsx",
							"line": 11,
							"character": 30
						},
						{
							"fileName": "components/index.ts",
							"line": 27,
							"character": 27
						},
						{
							"fileName": "components/index.ts",
							"line": 27,
							"character": 27
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"id": 428,
								"name": "ExperimentProps"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 318,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 329,
											"name": "bullseyeColor",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Defines the color of the stationary target."
											},
											"sources": [
												{
													"fileName": "components/experiments/SmoothPursuit.tsx",
													"line": 36,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 328,
											"name": "bullseyeRadius",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Defines the radius on the stationary target."
											},
											"sources": [
												{
													"fileName": "components/experiments/SmoothPursuit.tsx",
													"line": 34,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 319,
											"name": "cycles",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Defines the number of cycles in an iteration the moving target will circle around the stationary target."
											},
											"sources": [
												{
													"fileName": "components/experiments/SmoothPursuit.tsx",
													"line": 13,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 320,
											"name": "iterations",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Defines the number of times the moving target will appear and perform its cycles."
											},
											"sources": [
												{
													"fileName": "components/experiments/SmoothPursuit.tsx",
													"line": 15,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 322,
											"name": "offset",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Defines how far away the moving target will be from the stationary target."
											},
											"sources": [
												{
													"fileName": "components/experiments/SmoothPursuit.tsx",
													"line": 19,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 321,
											"name": "speed",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Defines how fast the moving target circles around the centered focal point."
											},
											"sources": [
												{
													"fileName": "components/experiments/SmoothPursuit.tsx",
													"line": 17,
													"character": 7
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 326,
											"name": "targetColor",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Defines the color of the moving target."
											},
											"sources": [
												{
													"fileName": "components/experiments/SmoothPursuit.tsx",
													"line": 30,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 323,
											"name": "targetDelay",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Defines the amount of time (milliseconds) the moving target will disappear and pause between each iteration."
											},
											"sources": [
												{
													"fileName": "components/experiments/SmoothPursuit.tsx",
													"line": 21,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 327,
											"name": "targetOutlineColor",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Defines the color of the moving target's outline."
											},
											"sources": [
												{
													"fileName": "components/experiments/SmoothPursuit.tsx",
													"line": 32,
													"character": 20
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 325,
											"name": "targetOutlineRadius",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Defines the size of the moving target's outline. The outline is drawn as a circle behind the target itself,\ni.e. set this less than or equal to `targetRadius` to make the outline disappear."
											},
											"sources": [
												{
													"fileName": "components/experiments/SmoothPursuit.tsx",
													"line": 28,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 324,
											"name": "targetRadius",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Defines the size of the moving target."
											},
											"sources": [
												{
													"fileName": "components/experiments/SmoothPursuit.tsx",
													"line": 23,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												329,
												328,
												319,
												320,
												322,
												321,
												326,
												323,
												327,
												325,
												324
											]
										}
									],
									"sources": [
										{
											"fileName": "components/experiments/SmoothPursuit.tsx",
											"line": 11,
											"character": 50
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 313,
					"name": "default",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "components/experiments/SmoothPursuit.tsx",
							"line": 40,
							"character": 37
						},
						{
							"fileName": "components/experiments/index.ts",
							"line": 6,
							"character": 51
						}
					],
					"signatures": [
						{
							"id": 314,
							"name": "default",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Smooth pursuit assessment. Displays a target that the participant follows with their eyes."
							},
							"parameters": [
								{
									"id": 315,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 317,
										"name": "SmoothPursuitProps"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"kind": 2,
					"children": [
						316
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						317
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						313
					]
				}
			],
			"sources": [
				{
					"fileName": "components/experiments/SmoothPursuit.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 347,
			"name": "components/surveys",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 506,
					"name": "Demographic",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 333
				},
				{
					"id": 507,
					"name": "Validation",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 340
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						506,
						507
					]
				}
			],
			"sources": [
				{
					"fileName": "components/surveys/index.ts",
					"line": 1,
					"character": 0
				},
				{
					"fileName": "components/index.ts",
					"line": 21,
					"character": 9
				},
				{
					"fileName": "components/index.ts",
					"line": 21,
					"character": 9
				}
			]
		},
		{
			"id": 332,
			"name": "components/surveys/Demographic",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 336,
					"name": "DemographicSurveyProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "components/surveys/Demographic.tsx",
							"line": 22,
							"character": 34
						},
						{
							"fileName": "components/index.ts",
							"line": 29,
							"character": 31
						},
						{
							"fileName": "components/index.ts",
							"line": 29,
							"character": 31
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 337,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 338,
									"name": "onComplete",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									}
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										338
									]
								}
							],
							"sources": [
								{
									"fileName": "components/surveys/Demographic.tsx",
									"line": 22,
									"character": 36
								}
							]
						}
					}
				},
				{
					"id": 333,
					"name": "default",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "components/surveys/Demographic.tsx",
							"line": 26,
							"character": 41
						},
						{
							"fileName": "components/surveys/index.ts",
							"line": 4,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 334,
							"name": "default",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 335,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 336,
										"name": "DemographicSurveyProps"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						336
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						333
					]
				}
			],
			"sources": [
				{
					"fileName": "components/surveys/Demographic.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 339,
			"name": "components/surveys/Validation",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 343,
					"name": "ValidationSurveyProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "components/surveys/Validation.tsx",
							"line": 23,
							"character": 33
						},
						{
							"fileName": "components/index.ts",
							"line": 30,
							"character": 30
						},
						{
							"fileName": "components/index.ts",
							"line": 30,
							"character": 30
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 344,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 345,
									"name": "results",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "components/surveys/Validation.tsx",
											"line": 24,
											"character": 9
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 377,
											"name": "ComputeResult"
										}
									}
								},
								{
									"id": 346,
									"name": "onComplete",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										345
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										346
									]
								}
							],
							"sources": [
								{
									"fileName": "components/surveys/Validation.tsx",
									"line": 23,
									"character": 35
								}
							]
						}
					}
				},
				{
					"id": 340,
					"name": "default",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "components/surveys/Validation.tsx",
							"line": 28,
							"character": 40
						},
						{
							"fileName": "components/surveys/index.ts",
							"line": 4,
							"character": 32
						}
					],
					"signatures": [
						{
							"id": 341,
							"name": "default",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 342,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 343,
										"name": "ValidationSurveyProps"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						343
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						340
					]
				}
			],
			"sources": [
				{
					"fileName": "components/surveys/Validation.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 348,
			"name": "index",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 522,
					"name": "CalibrationProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 279
				},
				{
					"id": 526,
					"name": "DemographicSurveyProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 336
				},
				{
					"id": 510,
					"name": "ExperimentRunner",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 216
				},
				{
					"id": 511,
					"name": "ExperimentRunnerProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 207
				},
				{
					"id": 520,
					"name": "Experiments",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 330
				},
				{
					"id": 509,
					"name": "Models",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 205
				},
				{
					"id": 523,
					"name": "NystagmusProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 291
				},
				{
					"id": 524,
					"name": "PlrProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 305
				},
				{
					"id": 508,
					"name": "SenseyeApiClient",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 3
				},
				{
					"id": 514,
					"name": "SenseyeButton",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 218
				},
				{
					"id": 515,
					"name": "SenseyeButtonProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 221
				},
				{
					"id": 516,
					"name": "SenseyePicker",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 227
				},
				{
					"id": 517,
					"name": "SenseyePickerProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 231
				},
				{
					"id": 518,
					"name": "SenseyeTextInput",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 243
				},
				{
					"id": 519,
					"name": "SenseyeTextInputProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 247
				},
				{
					"id": 525,
					"name": "SmoothPursuitProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 317
				},
				{
					"id": 521,
					"name": "Surveys",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 347
				},
				{
					"id": 527,
					"name": "ValidationSurveyProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 343
				},
				{
					"id": 512,
					"name": "VideoRecorder",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 273
				},
				{
					"id": 513,
					"name": "VideoRecorderProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 258
				},
				{
					"id": 554,
					"name": "ComputeResult",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 54,
							"character": 25
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 555,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 556,
									"name": "eye_features",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 55,
											"character": 14
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 557,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "types/index.ts",
													"line": 55,
													"character": 15
												}
											],
											"indexSignature": {
												"id": 558,
												"name": "__index",
												"kind": 8192,
												"kindString": "Index signature",
												"flags": {},
												"parameters": [
													{
														"id": 559,
														"name": "key",
														"kind": 32768,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										}
									}
								},
								{
									"id": 560,
									"name": "prediction",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 56,
											"character": 12
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 561,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 563,
													"name": "bac_prediction",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "[0-1] Value closer to 1 indicate higher probability the participant is drunk."
													},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 60,
															"character": 18
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 564,
													"name": "cog_load_prediction",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "[0-1] Value closer to 1 indicate higher probability of high cognitive load."
													},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 62,
															"character": 23
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 562,
													"name": "fatigue_prediction",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "[0-1] Value closer to 1 indicate higher probability of fatigue."
													},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 58,
															"character": 22
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 565,
													"name": "predicted_state",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Final predicted state of subject in analyzed video.\nPossible values: `Ready` | `Not Ready: Fatigued` | `Not Ready: Drunk`"
													},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 67,
															"character": 19
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														563,
														564,
														562,
														565
													]
												}
											],
											"sources": [
												{
													"fileName": "types/index.ts",
													"line": 56,
													"character": 13
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										556,
										560
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 54,
									"character": 27
								}
							]
						}
					}
				},
				{
					"id": 543,
					"name": "ComputeResultResponse",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Response body from Senseye Compute API endpoints that return a computed result,\ne.g. `/GetVideoResult`.\nWill contain either `results` or `error` depending on success."
					},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 31,
							"character": 33
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 544,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 546,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 34,
											"character": 7
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 547,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 548,
													"name": "code",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 35,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 549,
													"name": "message",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 36,
															"character": 11
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														548,
														549
													]
												}
											],
											"sources": [
												{
													"fileName": "types/index.ts",
													"line": 34,
													"character": 9
												}
											]
										}
									}
								},
								{
									"id": 545,
									"name": "results",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "An array of results, though may typically contain only one entry."
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 33,
											"character": 9
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 377,
											"name": "ComputeResult"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										546,
										545
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 31,
									"character": 35
								}
							]
						}
					}
				},
				{
					"id": 550,
					"name": "ComputeTaskResponse",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Response body from Senseye Compute API endpoints that create or monitor tasks,\ne.g. `/PredictFatigue`, `/GetVideoTask`"
					},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 44,
							"character": 31
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 551,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 552,
									"name": "id",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "ID of the task."
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 46,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 553,
									"name": "status",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Current state of the task.\nPossible values: `PENDING` | `RECEIVED` | `STARTED` | `SUCCESS` | `FAILURE` | `REVOKED` | `RETRY`"
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 51,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										552,
										553
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 44,
									"character": 33
								}
							]
						}
					}
				},
				{
					"id": 528,
					"name": "DataResponse",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Response body from Senseye Data API endpoints (`/data/*`).\nWill contain either `data` or `error` depending on success. Note `data` may also\nnot be present for PUT requests."
					},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 10,
							"character": 24
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 529,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 530,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "On success, will contain the requested response data."
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 12,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 531,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "types/index.ts",
													"line": 12,
													"character": 8
												}
											],
											"indexSignature": {
												"id": 532,
												"name": "__index",
												"kind": 8192,
												"kindString": "Index signature",
												"flags": {},
												"parameters": [
													{
														"id": 533,
														"name": "key",
														"kind": 32768,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									}
								},
								{
									"id": 534,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "On error, will contain information regarding the error."
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 14,
											"character": 7
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 535,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 536,
													"name": "code",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 15,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 537,
													"name": "description",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 16,
															"character": 15
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 538,
													"name": "message",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 17,
															"character": 11
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 539,
													"name": "root",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Propagated information of the root error."
													},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 19,
															"character": 8
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 540,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 542,
																	"name": "description",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "types/index.ts",
																			"line": 21,
																			"character": 17
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 541,
																	"name": "type",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "types/index.ts",
																			"line": 20,
																			"character": 10
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		542,
																		541
																	]
																}
															],
															"sources": [
																{
																	"fileName": "types/index.ts",
																	"line": 19,
																	"character": 10
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														536,
														537,
														538,
														539
													]
												}
											],
											"sources": [
												{
													"fileName": "types/index.ts",
													"line": 14,
													"character": 9
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										530,
										534
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 10,
									"character": 26
								}
							]
						}
					}
				},
				{
					"id": 568,
					"name": "Datum",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 85,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 569,
					"name": "ExperimentData",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 87,
							"character": 26
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 570,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 572,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 89,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 573,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "types/index.ts",
													"line": 89,
													"character": 7
												}
											],
											"indexSignature": {
												"id": 574,
												"name": "__index",
												"kind": 8192,
												"kindString": "Index signature",
												"flags": {},
												"parameters": [
													{
														"id": 575,
														"name": "key",
														"kind": 32768,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									}
								},
								{
									"id": 571,
									"name": "timestamp",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 88,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										572,
										571
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 87,
									"character": 28
								}
							]
						}
					}
				},
				{
					"id": 605,
					"name": "ExperimentProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 145,
							"character": 27
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 606,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 609,
									"name": "background",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Background color of experiment."
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 151,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 611,
									"name": "height",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Use to adjust the height of canvas."
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 155,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 608,
									"name": "instructions",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Instructions to follow during the experiment."
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 149,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 607,
									"name": "name",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Name of the experiment."
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 147,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 610,
									"name": "width",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Use to adjust the width of canvas."
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 153,
											"character": 7
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 613,
									"name": "onEnd",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									}
								},
								{
									"id": 612,
									"name": "onStart",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									}
								},
								{
									"id": 614,
									"name": "onUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										609,
										611,
										608,
										607,
										610
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										613,
										612,
										614
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 145,
									"character": 29
								}
							]
						}
					}
				},
				{
					"id": 593,
					"name": "Point",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 118,
							"character": 17
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 594,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 595,
									"name": "x",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 119,
											"character": 3
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 596,
									"name": "y",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 120,
											"character": 3
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										595,
										596
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 118,
									"character": 19
								}
							]
						}
					}
				},
				{
					"id": 566,
					"name": "PredictedState",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 71,
							"character": 26
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "Ready"
							},
							{
								"type": "literal",
								"value": "Not Ready: Fatigued"
							},
							{
								"type": "literal",
								"value": "Not Ready: Drunk"
							}
						]
					}
				},
				{
					"id": 589,
					"name": "RecorderStatusChangeEvent",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 110,
							"character": 37
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 590,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 591,
									"name": "cameraStatus",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 111,
											"character": 14
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "READY"
											},
											{
												"type": "literal",
												"value": "PENDING_AUTHORIZATION"
											},
											{
												"type": "literal",
												"value": "NOT_AUTHORIZED"
											}
										]
									}
								},
								{
									"id": 592,
									"name": "recordAudioPermissionStatus",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 112,
											"character": 29
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "AUTHORIZED"
											},
											{
												"type": "literal",
												"value": "PENDING_AUTHORIZATION"
											},
											{
												"type": "literal",
												"value": "NOT_AUTHORIZED"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										591,
										592
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 110,
									"character": 39
								}
							]
						}
					}
				},
				{
					"id": 582,
					"name": "RecordingStartEvent",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 102,
							"character": 31
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 583,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 584,
									"name": "nativeEvent",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 103,
											"character": 13
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 585,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 588,
													"name": "deviceOrientation",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 106,
															"character": 21
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 586,
													"name": "uri",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 104,
															"character": 7
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 587,
													"name": "videoOrientation",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 105,
															"character": 20
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														588,
														586,
														587
													]
												}
											],
											"sources": [
												{
													"fileName": "types/index.ts",
													"line": 103,
													"character": 14
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										584
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 102,
									"character": 33
								}
							]
						}
					}
				},
				{
					"id": 580,
					"name": "SessionConditionType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 93,
							"character": 32
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "GOOD"
							},
							{
								"type": "literal",
								"value": "BAD"
							},
							{
								"type": "literal",
								"value": "TEST"
							},
							{
								"type": "literal",
								"value": "UNENDED"
							},
							{
								"type": "literal",
								"value": "UNSPECIFIED"
							}
						]
					}
				},
				{
					"id": 576,
					"name": "SessionData",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 91,
							"character": 23
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 577,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 91,
									"character": 25
								}
							],
							"indexSignature": {
								"id": 578,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 579,
										"name": "key",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"id": 392,
										"name": "ExperimentData"
									}
								}
							}
						}
					}
				},
				{
					"id": 581,
					"name": "SurveyType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 100,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "demographic"
							},
							{
								"type": "literal",
								"value": "validation"
							}
						]
					}
				},
				{
					"id": 567,
					"name": "TaskStatus",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 76,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "PENDING"
							},
							{
								"type": "literal",
								"value": "RECEIVED"
							},
							{
								"type": "literal",
								"value": "STARTED"
							},
							{
								"type": "literal",
								"value": "SUCCESS"
							},
							{
								"type": "literal",
								"value": "FAILURE"
							},
							{
								"type": "literal",
								"value": "REVOKED"
							},
							{
								"type": "literal",
								"value": "RETRY"
							}
						]
					}
				},
				{
					"id": 597,
					"name": "VideoRecorderObject",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Reference object produced by {@link VideoRecoder}."
					},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 126,
							"character": 31
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 598,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 599,
									"name": "startRecording",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 600,
											"name": "startRecording",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Starts a video recording. Do not call this if another recording is already in progress\nor until after `VideoRecorder.onRecordingEnd`.",
												"returns": "A `Promise` that will produce an uninitialized {@link Video} populated with metadata during the recording.\n"
											},
											"parameters": [
												{
													"id": 601,
													"name": "name",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Name to assign to a {@link Video} that will be produced by this function."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 602,
													"name": "recordOptions",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "https://react-native-camera.github.io/react-native-camera/docs/rncamera#recordasync-options-promise"
													},
													"type": {
														"type": "reference",
														"name": "RecordOptions"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 147,
														"name": "default"
													}
												],
												"name": "Promise"
											}
										}
									]
								},
								{
									"id": 603,
									"name": "stopRecording",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 604,
											"name": "stopRecording",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Stops the video recording."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										599,
										603
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 126,
									"character": 33
								}
							]
						}
					}
				},
				{
					"id": 349,
					"name": "default",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "SenseyeSdkType"
					}
				},
				{
					"id": 617,
					"name": "Constants",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Senseye constants."
					},
					"sources": [
						{
							"fileName": "utils/index.ts",
							"line": 31,
							"character": 22
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 618,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 620,
									"name": "API_BASE_PATH",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "'/v1'"
								},
								{
									"id": 619,
									"name": "API_HOST",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "'api.senseye.co'"
								},
								{
									"id": 637,
									"name": "FormData",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 638,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 643,
													"name": "EYE",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 644,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 646,
																	"name": "labels",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 645,
																	"name": "values",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		646,
																		645
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 647,
													"name": "FATIGUE",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 648,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 650,
																	"name": "labels",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 649,
																	"name": "values",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"name": "ReactText"
																		}
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		650,
																		649
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 639,
													"name": "GENDER",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 640,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 642,
																	"name": "labels",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 641,
																	"name": "values",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		642,
																		641
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 651,
													"name": "MERIDIEM",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 652,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 654,
																	"name": "labels",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 653,
																	"name": "values",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		654,
																		653
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														643,
														647,
														639,
														651
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 623,
									"name": "PredictedState",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 624,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 627,
													"name": "NOT_READY_BAC",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'Not Ready: Drunk'"
												},
												{
													"id": 626,
													"name": "NOT_READY_FATIGUE",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'Not Ready: Fatigued'"
												},
												{
													"id": 625,
													"name": "READY",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'Ready'"
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														627,
														626,
														625
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 621,
									"name": "SessionCondition",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 403,
												"name": "SessionConditionType"
											}
										],
										"name": "Record"
									},
									"defaultValue": "..."
								},
								{
									"id": 622,
									"name": "SurveyType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 404,
												"name": "SurveyType"
											}
										],
										"name": "Record"
									},
									"defaultValue": "..."
								},
								{
									"id": 628,
									"name": "TaskStatus",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 629,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 634,
													"name": "FAILURE",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'FAILURE'"
												},
												{
													"id": 630,
													"name": "PENDING",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'PENDING'"
												},
												{
													"id": 631,
													"name": "RECEIVED",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'RECEIVED'"
												},
												{
													"id": 636,
													"name": "RETRY",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'RETRY'"
												},
												{
													"id": 635,
													"name": "REVOKED",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'REVOKED'"
												},
												{
													"id": 632,
													"name": "STARTED",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'STARTED'"
												},
												{
													"id": 633,
													"name": "SUCCESS",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'SUCCESS'"
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														634,
														630,
														631,
														636,
														635,
														632,
														633
													]
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										620,
										619,
										637,
										623,
										621,
										622,
										628
									]
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 615,
					"name": "getCurrentTimestamp",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "utils/index.ts",
							"line": 9,
							"character": 35
						}
					],
					"signatures": [
						{
							"id": 616,
							"name": "getCurrentTimestamp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"returns": "The number of seconds elapsed since January 1, 1970 00:00:00 UTC.\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						522,
						526,
						510,
						511,
						520,
						509,
						523,
						524,
						508,
						514,
						515,
						516,
						517,
						518,
						519,
						525,
						521,
						527,
						512,
						513
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						554,
						543,
						550,
						528,
						568,
						569,
						605,
						593,
						566,
						589,
						582,
						580,
						576,
						581,
						567,
						597
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						349
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						617
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						615
					]
				}
			],
			"sources": [
				{
					"fileName": "index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 350,
			"name": "types",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 377,
					"name": "ComputeResult",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 54,
							"character": 25
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 378,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 379,
									"name": "eye_features",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 55,
											"character": 14
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 380,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "types/index.ts",
													"line": 55,
													"character": 15
												}
											],
											"indexSignature": {
												"id": 381,
												"name": "__index",
												"kind": 8192,
												"kindString": "Index signature",
												"flags": {},
												"parameters": [
													{
														"id": 382,
														"name": "key",
														"kind": 32768,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										}
									}
								},
								{
									"id": 383,
									"name": "prediction",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 56,
											"character": 12
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 384,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 386,
													"name": "bac_prediction",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "[0-1] Value closer to 1 indicate higher probability the participant is drunk."
													},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 60,
															"character": 18
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 387,
													"name": "cog_load_prediction",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "[0-1] Value closer to 1 indicate higher probability of high cognitive load."
													},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 62,
															"character": 23
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 385,
													"name": "fatigue_prediction",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "[0-1] Value closer to 1 indicate higher probability of fatigue."
													},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 58,
															"character": 22
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 388,
													"name": "predicted_state",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Final predicted state of subject in analyzed video.\nPossible values: `Ready` | `Not Ready: Fatigued` | `Not Ready: Drunk`"
													},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 67,
															"character": 19
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														386,
														387,
														385,
														388
													]
												}
											],
											"sources": [
												{
													"fileName": "types/index.ts",
													"line": 56,
													"character": 13
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										379,
										383
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 54,
									"character": 27
								}
							]
						}
					}
				},
				{
					"id": 366,
					"name": "ComputeResultResponse",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Response body from Senseye Compute API endpoints that return a computed result,\ne.g. `/GetVideoResult`.\nWill contain either `results` or `error` depending on success."
					},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 31,
							"character": 33
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 367,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 369,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 34,
											"character": 7
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 370,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 371,
													"name": "code",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 35,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 372,
													"name": "message",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 36,
															"character": 11
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														371,
														372
													]
												}
											],
											"sources": [
												{
													"fileName": "types/index.ts",
													"line": 34,
													"character": 9
												}
											]
										}
									}
								},
								{
									"id": 368,
									"name": "results",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "An array of results, though may typically contain only one entry."
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 33,
											"character": 9
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 377,
											"name": "ComputeResult"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										369,
										368
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 31,
									"character": 35
								}
							]
						}
					}
				},
				{
					"id": 373,
					"name": "ComputeTaskResponse",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Response body from Senseye Compute API endpoints that create or monitor tasks,\ne.g. `/PredictFatigue`, `/GetVideoTask`"
					},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 44,
							"character": 31
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 374,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 375,
									"name": "id",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "ID of the task."
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 46,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 376,
									"name": "status",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Current state of the task.\nPossible values: `PENDING` | `RECEIVED` | `STARTED` | `SUCCESS` | `FAILURE` | `REVOKED` | `RETRY`"
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 51,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										375,
										376
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 44,
									"character": 33
								}
							]
						}
					}
				},
				{
					"id": 351,
					"name": "DataResponse",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Response body from Senseye Data API endpoints (`/data/*`).\nWill contain either `data` or `error` depending on success. Note `data` may also\nnot be present for PUT requests."
					},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 10,
							"character": 24
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 352,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 353,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "On success, will contain the requested response data."
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 12,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 354,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "types/index.ts",
													"line": 12,
													"character": 8
												}
											],
											"indexSignature": {
												"id": 355,
												"name": "__index",
												"kind": 8192,
												"kindString": "Index signature",
												"flags": {},
												"parameters": [
													{
														"id": 356,
														"name": "key",
														"kind": 32768,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									}
								},
								{
									"id": 357,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "On error, will contain information regarding the error."
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 14,
											"character": 7
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 358,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 359,
													"name": "code",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 15,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 360,
													"name": "description",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 16,
															"character": 15
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 361,
													"name": "message",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 17,
															"character": 11
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 362,
													"name": "root",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Propagated information of the root error."
													},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 19,
															"character": 8
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 363,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 365,
																	"name": "description",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "types/index.ts",
																			"line": 21,
																			"character": 17
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 364,
																	"name": "type",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "types/index.ts",
																			"line": 20,
																			"character": 10
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		365,
																		364
																	]
																}
															],
															"sources": [
																{
																	"fileName": "types/index.ts",
																	"line": 19,
																	"character": 10
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														359,
														360,
														361,
														362
													]
												}
											],
											"sources": [
												{
													"fileName": "types/index.ts",
													"line": 14,
													"character": 9
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										353,
										357
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 10,
									"character": 26
								}
							]
						}
					}
				},
				{
					"id": 391,
					"name": "Datum",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 85,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 392,
					"name": "ExperimentData",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 87,
							"character": 26
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 393,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 395,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 89,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 396,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "types/index.ts",
													"line": 89,
													"character": 7
												}
											],
											"indexSignature": {
												"id": 397,
												"name": "__index",
												"kind": 8192,
												"kindString": "Index signature",
												"flags": {},
												"parameters": [
													{
														"id": 398,
														"name": "key",
														"kind": 32768,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									}
								},
								{
									"id": 394,
									"name": "timestamp",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 88,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										395,
										394
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 87,
									"character": 28
								}
							]
						}
					}
				},
				{
					"id": 428,
					"name": "ExperimentProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 145,
							"character": 27
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 429,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 432,
									"name": "background",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Background color of experiment."
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 151,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 434,
									"name": "height",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Use to adjust the height of canvas."
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 155,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 431,
									"name": "instructions",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Instructions to follow during the experiment."
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 149,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 430,
									"name": "name",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Name of the experiment."
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 147,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 433,
									"name": "width",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Use to adjust the width of canvas."
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 153,
											"character": 7
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 436,
									"name": "onEnd",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									}
								},
								{
									"id": 435,
									"name": "onStart",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									}
								},
								{
									"id": 437,
									"name": "onUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										432,
										434,
										431,
										430,
										433
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										436,
										435,
										437
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 145,
									"character": 29
								}
							]
						}
					}
				},
				{
					"id": 416,
					"name": "Point",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 118,
							"character": 17
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 417,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 418,
									"name": "x",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 119,
											"character": 3
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 419,
									"name": "y",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 120,
											"character": 3
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										418,
										419
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 118,
									"character": 19
								}
							]
						}
					}
				},
				{
					"id": 389,
					"name": "PredictedState",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 71,
							"character": 26
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "Ready"
							},
							{
								"type": "literal",
								"value": "Not Ready: Fatigued"
							},
							{
								"type": "literal",
								"value": "Not Ready: Drunk"
							}
						]
					}
				},
				{
					"id": 412,
					"name": "RecorderStatusChangeEvent",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 110,
							"character": 37
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 413,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 414,
									"name": "cameraStatus",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 111,
											"character": 14
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "READY"
											},
											{
												"type": "literal",
												"value": "PENDING_AUTHORIZATION"
											},
											{
												"type": "literal",
												"value": "NOT_AUTHORIZED"
											}
										]
									}
								},
								{
									"id": 415,
									"name": "recordAudioPermissionStatus",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 112,
											"character": 29
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "AUTHORIZED"
											},
											{
												"type": "literal",
												"value": "PENDING_AUTHORIZATION"
											},
											{
												"type": "literal",
												"value": "NOT_AUTHORIZED"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										414,
										415
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 110,
									"character": 39
								}
							]
						}
					}
				},
				{
					"id": 405,
					"name": "RecordingStartEvent",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 102,
							"character": 31
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 406,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 407,
									"name": "nativeEvent",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 103,
											"character": 13
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 408,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 411,
													"name": "deviceOrientation",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 106,
															"character": 21
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 409,
													"name": "uri",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 104,
															"character": 7
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 410,
													"name": "videoOrientation",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 105,
															"character": 20
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														411,
														409,
														410
													]
												}
											],
											"sources": [
												{
													"fileName": "types/index.ts",
													"line": 103,
													"character": 14
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										407
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 102,
									"character": 33
								}
							]
						}
					}
				},
				{
					"id": 403,
					"name": "SessionConditionType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 93,
							"character": 32
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "GOOD"
							},
							{
								"type": "literal",
								"value": "BAD"
							},
							{
								"type": "literal",
								"value": "TEST"
							},
							{
								"type": "literal",
								"value": "UNENDED"
							},
							{
								"type": "literal",
								"value": "UNSPECIFIED"
							}
						]
					}
				},
				{
					"id": 399,
					"name": "SessionData",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 91,
							"character": 23
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 400,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 91,
									"character": 25
								}
							],
							"indexSignature": {
								"id": 401,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 402,
										"name": "key",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"id": 392,
										"name": "ExperimentData"
									}
								}
							}
						}
					}
				},
				{
					"id": 404,
					"name": "SurveyType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 100,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "demographic"
							},
							{
								"type": "literal",
								"value": "validation"
							}
						]
					}
				},
				{
					"id": 390,
					"name": "TaskStatus",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 76,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "PENDING"
							},
							{
								"type": "literal",
								"value": "RECEIVED"
							},
							{
								"type": "literal",
								"value": "STARTED"
							},
							{
								"type": "literal",
								"value": "SUCCESS"
							},
							{
								"type": "literal",
								"value": "FAILURE"
							},
							{
								"type": "literal",
								"value": "REVOKED"
							},
							{
								"type": "literal",
								"value": "RETRY"
							}
						]
					}
				},
				{
					"id": 420,
					"name": "VideoRecorderObject",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Reference object produced by {@link VideoRecoder}."
					},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 126,
							"character": 31
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 421,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 422,
									"name": "startRecording",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 423,
											"name": "startRecording",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Starts a video recording. Do not call this if another recording is already in progress\nor until after `VideoRecorder.onRecordingEnd`.",
												"returns": "A `Promise` that will produce an uninitialized {@link Video} populated with metadata during the recording.\n"
											},
											"parameters": [
												{
													"id": 424,
													"name": "name",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Name to assign to a {@link Video} that will be produced by this function."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 425,
													"name": "recordOptions",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "https://react-native-camera.github.io/react-native-camera/docs/rncamera#recordasync-options-promise"
													},
													"type": {
														"type": "reference",
														"name": "RecordOptions"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 147,
														"name": "default"
													}
												],
												"name": "Promise"
											}
										}
									]
								},
								{
									"id": 426,
									"name": "stopRecording",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 427,
											"name": "stopRecording",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Stops the video recording."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										422,
										426
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 126,
									"character": 33
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						377,
						366,
						373,
						351,
						391,
						392,
						428,
						416,
						389,
						412,
						405,
						403,
						399,
						404,
						390,
						420
					]
				}
			],
			"sources": [
				{
					"fileName": "types/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 438,
			"name": "utils",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 441,
					"name": "Constants",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Senseye constants."
					},
					"sources": [
						{
							"fileName": "utils/index.ts",
							"line": 31,
							"character": 22
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 442,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 444,
									"name": "API_BASE_PATH",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "'/v1'"
								},
								{
									"id": 443,
									"name": "API_HOST",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "'api.senseye.co'"
								},
								{
									"id": 461,
									"name": "FormData",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 462,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 467,
													"name": "EYE",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 468,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 470,
																	"name": "labels",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 469,
																	"name": "values",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		470,
																		469
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 471,
													"name": "FATIGUE",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 472,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 474,
																	"name": "labels",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 473,
																	"name": "values",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"name": "ReactText"
																		}
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		474,
																		473
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 463,
													"name": "GENDER",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 464,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 466,
																	"name": "labels",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 465,
																	"name": "values",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		466,
																		465
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 475,
													"name": "MERIDIEM",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 476,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 478,
																	"name": "labels",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 477,
																	"name": "values",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		478,
																		477
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														467,
														471,
														463,
														475
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 447,
									"name": "PredictedState",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 448,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 451,
													"name": "NOT_READY_BAC",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'Not Ready: Drunk'"
												},
												{
													"id": 450,
													"name": "NOT_READY_FATIGUE",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'Not Ready: Fatigued'"
												},
												{
													"id": 449,
													"name": "READY",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'Ready'"
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														451,
														450,
														449
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 445,
									"name": "SessionCondition",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 403,
												"name": "SessionConditionType"
											}
										],
										"name": "Record"
									},
									"defaultValue": "..."
								},
								{
									"id": 446,
									"name": "SurveyType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 404,
												"name": "SurveyType"
											}
										],
										"name": "Record"
									},
									"defaultValue": "..."
								},
								{
									"id": 452,
									"name": "TaskStatus",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 453,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 458,
													"name": "FAILURE",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'FAILURE'"
												},
												{
													"id": 454,
													"name": "PENDING",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'PENDING'"
												},
												{
													"id": 455,
													"name": "RECEIVED",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'RECEIVED'"
												},
												{
													"id": 460,
													"name": "RETRY",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'RETRY'"
												},
												{
													"id": 459,
													"name": "REVOKED",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'REVOKED'"
												},
												{
													"id": 456,
													"name": "STARTED",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'STARTED'"
												},
												{
													"id": 457,
													"name": "SUCCESS",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'SUCCESS'"
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														458,
														454,
														455,
														460,
														459,
														456,
														457
													]
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										444,
										443,
										461,
										447,
										445,
										446,
										452
									]
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 439,
					"name": "getCurrentTimestamp",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "utils/index.ts",
							"line": 9,
							"character": 35
						}
					],
					"signatures": [
						{
							"id": 440,
							"name": "getCurrentTimestamp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"returns": "The number of seconds elapsed since January 1, 1970 00:00:00 UTC.\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						441
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						439
					]
				}
			],
			"sources": [
				{
					"fileName": "utils/index.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"kind": 1,
			"children": [
				1,
				54,
				2,
				205,
				55,
				102,
				146,
				331,
				206,
				217,
				226,
				242,
				257,
				330,
				274,
				286,
				300,
				312,
				347,
				332,
				339,
				348,
				350,
				438
			]
		}
	]
}